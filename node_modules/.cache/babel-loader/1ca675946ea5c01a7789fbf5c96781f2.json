{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agsaf\\\\Documents\\\\GitHub\\\\calculator\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./styles/styles.css\";\nimport $ from \"jquery\";\nimport calculate from \"./functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayOps: \"\",\n      result: [],\n      displayCur: \"0\",\n      lastInput: \"\",\n      lastInputType: \"\",\n      decimalAlreadyUsed: false,\n      twoConsecutiveOperators: false,\n      lastResult: \"\"\n    };\n    this.handleClear = this.handleClear.bind(this);\n    this.handleOperator = this.handleOperator.bind(this);\n    this.handleDigit = this.handleDigit.bind(this);\n    this.handleEquals = this.handleEquals.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handleExponentiation = this.handleExponentiation.bind(this);\n  }\n  handleClear() {\n    this.setState({\n      displayOps: \"\",\n      result: [],\n      displayCur: \"0\",\n      lastInput: \"\",\n      lastInputType: \"\",\n      decimalAlreadyUsed: false,\n      twoConsecutiveOperators: false,\n      lastResult: \"\"\n    });\n  }\n  handleOperator(e) {\n    if (this.state.twoConsecutiveOperators === true) {\n      this.setState(state => ({\n        displayOps: e.target.value === \"-\" ? state.displayOps : state.displayOps.slice(0, state.displayOps.length - 2).concat(e.target.value),\n        result: e.target.value === \"-\" ? state.result : state.result.slice(0, state.result.length - 2).concat(e.target.value),\n        displayCur: e.target.value,\n        lastInput: e.target.value,\n        lastInputType: \"operator\",\n        twoConsecutiveOperators: e.target.value === \"-\" ? true : false\n      }), () => {\n        console.log(\"1st IF Inside handleOperator: this.state.result\", this.state.result);\n      });\n    } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value !== \"-\") {\n      this.setState(state => ({\n        displayOps: state.displayOps.slice(0, state.displayOps.length - 1).concat(e.target.value),\n        result: state.result.slice(0, state.result.length - 1).concat(e.target.value),\n        displayCur: e.target.value,\n        lastInput: e.target.value,\n        twoConsecutiveOperators: false\n      }), () => {\n        console.log(\"2nd IF Inside handleOperator: this.state.result\", this.state.result);\n      });\n    } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value === \"-\") {\n      this.setState(state => ({\n        displayOps: state.displayOps.concat(e.target.value),\n        result: state.result.concat(e.target.value),\n        displayCur: e.target.value,\n        lastInput: e.target.value,\n        twoConsecutiveOperators: true\n      }), () => {\n        console.log(\"2.5nd IF Inside handleOperator: this.state.result\", this.state.result);\n      });\n    }\n    if (this.state.lastInputType !== \"operator\") {\n      if (this.state.lastResult === \"\") {\n        this.setState(state => ({\n          displayOps: state.displayOps.concat(e.target.value),\n          result: state.result.concat(Number(state.displayCur)).concat(e.target.value),\n          displayCur: e.target.value,\n          lastInput: e.target.value,\n          lastInputType: \"operator\",\n          twoConsecutiveOperators: false,\n          decimalAlreadyUsed: false\n        }), () => {\n          console.log(\"3rd IF Inside handleOperator: this.state.result\", this.state.result);\n        });\n      } else {\n        this.setState(state => ({\n          displayOps: \"\".concat(state.lastResult).concat(e.target.value),\n          result: [].concat(state.lastResult).concat(e.target.value),\n          displayCur: e.target.value,\n          lastInput: e.target.value,\n          lastInputType: \"operator\",\n          twoConsecutiveOperators: false,\n          decimalAlreadyUsed: false,\n          lastResult: \"\"\n        }), () => {\n          console.log(\"3rd IF Inside handleOperator: this.state.result\", this.state.result);\n        });\n      }\n    }\n  }\n  handleDigit(e) {\n    if (this.state.lastResult !== \"\") this.handleClear();\n    this.setState(state => ({\n      displayOps: Number(state.displayOps.slice(-1)) === 0 && state.displayCur.length === 1 ? state.displayOps.slice(0, state.displayOps.length - 1).concat(e.target.value) : state.displayOps.concat(e.target.value),\n      displayCur: Number(state.displayCur) === 0 && state.displayCur.length === 1 || !isFinite(state.lastInput) && state.lastInput !== \".\" ? e.target.value : state.displayCur.concat(e.target.value),\n      lastInput: e.target.value,\n      lastInputType: \"digit\",\n      twoConsecutiveOperators: false\n    }));\n  }\n  handleDecimal() {\n    if (this.state.decimalAlreadyUsed === false) {\n      this.setState(state => ({\n        displayOps: isFinite(state.lastInput) && state.displayOps.length !== 0 ? state.displayOps.concat(\".\") : state.displayOps.concat(\"0.\"),\n        displayCur: isFinite(state.lastInput) ? state.displayCur.concat(\".\") : \"0.\",\n        lastInput: \".\",\n        lastInputType: \"decimal\",\n        decimalAlreadyUsed: true,\n        twoConsecutiveOperators: false\n      }));\n    }\n  }\n  handleExponentiation(e) {\n    let displayOpsExpression = \"\";\n    let resultExpression = [];\n    if (/\\d/.test(this.state.displayCur)) {\n      resultExpression = this.state.result.concat(Number(this.state.displayCur));\n      displayOpsExpression = this.state.displayOps;\n    } else {\n      let lastDigitIndex = this.state.result.reverse().findIndex(elem => /\\d/.test(elem));\n      displayOpsExpression = this.state.displayOps.slice(0, this.state.displayOps.length - lastDigitIndex);\n      resultExpression = this.state.result.reverse().slice(0, this.state.result.length - lastDigitIndex);\n    }\n    this.setState(state => ({\n      displayOps: displayOpsExpression.concat(e.target.value),\n      result: resultExpression.concat(e.target.value),\n      displayCur: e.target.value,\n      lastInput: e.target.value,\n      lastInputType: \"operator\",\n      twoConsecutiveOperators: false,\n      decimalAlreadyUsed: false\n    }), () => {\n      console.log(\"after displayOps\", this.state.displayOps, \"after Result\", this.state.result);\n    });\n  }\n  handleEquals() {\n    let displayOpsExpression = \"\";\n    let resultExpression = [];\n    // if (/\\d/.test(this.state.displayCur)) {\n    //   resultExpression = this.state.result.concat(Number(this.state.displayCur));\n    //   displayOpsExpression = this.state.displayOps;\n    // } else {\n    //   let lastDigitIndex = this.state.result.reverse().findIndex((elem) => /\\d/.test(elem));\n    //   displayOpsExpression = this.state.displayOps.slice(0, this.state.displayOps.length - lastDigitIndex);\n    //   resultExpression = this.state.result.reverse().slice(0, this.state.result.length - lastDigitIndex);\n    // }\n    deleteRedundantOperators(this.state);\n    let result = calculate(resultExpression);\n    this.setState({\n      displayOps: displayOpsExpression.concat(\"=\").concat(result),\n      displayCur: result,\n      decimalAlreadyUsed: false,\n      twoConsecutiveOperators: false,\n      lastResult: result\n    });\n    console.log(\"Inside handleEquals: final result\", result);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        ops: this.state.displayOps,\n        cur: this.state.displayCur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        clear: this.handleClear,\n        operator: this.handleOperator,\n        digit: this.handleDigit,\n        equals: this.handleEquals,\n        decimal: this.handleDecimal,\n        exponentiation: this.handleExponentiation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"displayBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"displayOps\",\n          children: this.props.ops\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"display\",\n          children: this.props.cur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nclass Buttons extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"clear\",\n        onClick: this.props.clear,\n        children: \"AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"add\",\n        value: \"+\",\n        onClick: this.props.operator,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"seven\",\n        value: \"7\",\n        onClick: this.props.digit,\n        children: \"7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"eight\",\n        value: \"8\",\n        onClick: this.props.digit,\n        children: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"nine\",\n        value: \"9\",\n        onClick: this.props.digit,\n        children: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"subtract\",\n        value: \"-\",\n        onClick: this.props.operator,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"four\",\n        value: \"4\",\n        onClick: this.props.digit,\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"five\",\n        value: \"5\",\n        onClick: this.props.digit,\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"six\",\n        value: \"6\",\n        onClick: this.props.digit,\n        children: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"multiply\",\n        value: \"*\",\n        onClick: this.props.operator,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"one\",\n        value: \"1\",\n        onClick: this.props.digit,\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"two\",\n        value: \"2\",\n        onClick: this.props.digit,\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"three\",\n        value: \"3\",\n        onClick: this.props.digit,\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"divide\",\n        value: \"/\",\n        onClick: this.props.operator,\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"zero\",\n        value: \"0\",\n        onClick: this.props.digit,\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"decimal\",\n        onClick: this.props.decimal,\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"equals\",\n        onClick: this.props.equals,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"exponentiation\",\n        value: \"^\",\n        onClick: this.props.exponentiation,\n        children: \"^\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"footer\",\n      children: \"This project was build using: HTML, CSS, JavaScript, React, Redux, jQuery, Bootstrap and SASS without using eval() function\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n}\n_c = Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["React","$","calculate","Calculator","Component","constructor","props","state","displayOps","result","displayCur","lastInput","lastInputType","decimalAlreadyUsed","twoConsecutiveOperators","lastResult","handleClear","bind","handleOperator","handleDigit","handleEquals","handleDecimal","handleExponentiation","setState","e","target","value","slice","length","concat","console","log","Number","isFinite","displayOpsExpression","resultExpression","test","lastDigitIndex","reverse","findIndex","elem","deleteRedundantOperators","render","Display","ops","cur","Buttons","clear","operator","digit","decimal","equals","exponentiation","Footer"],"sources":["C:/Users/agsaf/Documents/GitHub/calculator/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./styles/styles.css\";\r\nimport $ from \"jquery\";\r\nimport calculate from \"./functions\";\r\n\r\nexport default class Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayOps: \"\",\r\n      result: [],\r\n      displayCur: \"0\",\r\n      lastInput: \"\",\r\n      lastInputType: \"\",\r\n      decimalAlreadyUsed: false,\r\n      twoConsecutiveOperators: false,\r\n      lastResult: \"\",\r\n    };\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.handleOperator = this.handleOperator.bind(this);\r\n    this.handleDigit = this.handleDigit.bind(this);\r\n    this.handleEquals = this.handleEquals.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.handleExponentiation = this.handleExponentiation.bind(this);\r\n  }\r\n\r\n  handleClear() {\r\n    this.setState({\r\n      displayOps: \"\",\r\n      result: [],\r\n      displayCur: \"0\",\r\n      lastInput: \"\",\r\n      lastInputType: \"\",\r\n      decimalAlreadyUsed: false,\r\n      twoConsecutiveOperators: false,\r\n      lastResult: \"\",\r\n    });\r\n  }\r\n\r\n  handleOperator(e) {\r\n    if (this.state.twoConsecutiveOperators === true) {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: e.target.value === \"-\" ? state.displayOps : state.displayOps.slice(0, state.displayOps.length - 2).concat(e.target.value),\r\n          result: e.target.value === \"-\" ? state.result : state.result.slice(0, state.result.length - 2).concat(e.target.value),\r\n          displayCur: e.target.value,\r\n          lastInput: e.target.value,\r\n          lastInputType: \"operator\",\r\n          twoConsecutiveOperators: e.target.value === \"-\" ? true : false,\r\n        }),\r\n        () => {\r\n          console.log(\"1st IF Inside handleOperator: this.state.result\", this.state.result);\r\n        }\r\n      );\r\n    } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value !== \"-\") {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.displayOps.slice(0, state.displayOps.length - 1).concat(e.target.value),\r\n          result: state.result.slice(0, state.result.length - 1).concat(e.target.value),\r\n          displayCur: e.target.value,\r\n          lastInput: e.target.value,\r\n          twoConsecutiveOperators: false,\r\n        }),\r\n\r\n        () => {\r\n          console.log(\"2nd IF Inside handleOperator: this.state.result\", this.state.result);\r\n        }\r\n      );\r\n    } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value === \"-\") {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.displayOps.concat(e.target.value),\r\n          result: state.result.concat(e.target.value),\r\n          displayCur: e.target.value,\r\n          lastInput: e.target.value,\r\n          twoConsecutiveOperators: true,\r\n        }),\r\n\r\n        () => {\r\n          console.log(\"2.5nd IF Inside handleOperator: this.state.result\", this.state.result);\r\n        }\r\n      );\r\n    }\r\n\r\n    if (this.state.lastInputType !== \"operator\") {\r\n      if (this.state.lastResult === \"\") {\r\n        this.setState(\r\n          (state) => ({\r\n            displayOps: state.displayOps.concat(e.target.value),\r\n            result: state.result.concat(Number(state.displayCur)).concat(e.target.value),\r\n            displayCur: e.target.value,\r\n            lastInput: e.target.value,\r\n            lastInputType: \"operator\",\r\n            twoConsecutiveOperators: false,\r\n            decimalAlreadyUsed: false,\r\n          }),\r\n          () => {\r\n            console.log(\"3rd IF Inside handleOperator: this.state.result\", this.state.result);\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          (state) => ({\r\n            displayOps: \"\".concat(state.lastResult).concat(e.target.value),\r\n            result: [].concat(state.lastResult).concat(e.target.value),\r\n            displayCur: e.target.value,\r\n            lastInput: e.target.value,\r\n            lastInputType: \"operator\",\r\n            twoConsecutiveOperators: false,\r\n            decimalAlreadyUsed: false,\r\n            lastResult: \"\",\r\n          }),\r\n          () => {\r\n            console.log(\"3rd IF Inside handleOperator: this.state.result\", this.state.result);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDigit(e) {\r\n    if (this.state.lastResult !== \"\") this.handleClear();\r\n    this.setState((state) => ({\r\n      displayOps: Number(state.displayOps.slice(-1)) === 0 && state.displayCur.length === 1 ? state.displayOps.slice(0, state.displayOps.length - 1).concat(e.target.value) : state.displayOps.concat(e.target.value),\r\n      displayCur: (Number(state.displayCur) === 0 && state.displayCur.length === 1) || (!isFinite(state.lastInput) && state.lastInput !== \".\") ? e.target.value : state.displayCur.concat(e.target.value),\r\n      lastInput: e.target.value,\r\n      lastInputType: \"digit\",\r\n      twoConsecutiveOperators: false,\r\n    }));\r\n  }\r\n\r\n  handleDecimal() {\r\n    if (this.state.decimalAlreadyUsed === false) {\r\n      this.setState((state) => ({\r\n        displayOps: isFinite(state.lastInput) && state.displayOps.length !== 0 ? state.displayOps.concat(\".\") : state.displayOps.concat(\"0.\"),\r\n        displayCur: isFinite(state.lastInput) ? state.displayCur.concat(\".\") : \"0.\",\r\n        lastInput: \".\",\r\n        lastInputType: \"decimal\",\r\n        decimalAlreadyUsed: true,\r\n        twoConsecutiveOperators: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  handleExponentiation(e) {\r\n    let displayOpsExpression = \"\";\r\n    let resultExpression = [];\r\n    if (/\\d/.test(this.state.displayCur)) {\r\n      resultExpression = this.state.result.concat(Number(this.state.displayCur));\r\n      displayOpsExpression = this.state.displayOps;\r\n    } else {\r\n      let lastDigitIndex = this.state.result.reverse().findIndex((elem) => /\\d/.test(elem));\r\n      displayOpsExpression = this.state.displayOps.slice(0, this.state.displayOps.length - lastDigitIndex);\r\n      resultExpression = this.state.result.reverse().slice(0, this.state.result.length - lastDigitIndex);\r\n    }\r\n\r\n    this.setState(\r\n      (state) => ({\r\n        displayOps: displayOpsExpression.concat(e.target.value),\r\n        result: resultExpression.concat(e.target.value),\r\n        displayCur: e.target.value,\r\n        lastInput: e.target.value,\r\n        lastInputType: \"operator\",\r\n        twoConsecutiveOperators: false,\r\n        decimalAlreadyUsed: false,\r\n      }),\r\n      () => {\r\n        console.log(\"after displayOps\", this.state.displayOps, \"after Result\", this.state.result);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleEquals() {\r\n    let displayOpsExpression = \"\";\r\n    let resultExpression = [];\r\n    // if (/\\d/.test(this.state.displayCur)) {\r\n    //   resultExpression = this.state.result.concat(Number(this.state.displayCur));\r\n    //   displayOpsExpression = this.state.displayOps;\r\n    // } else {\r\n    //   let lastDigitIndex = this.state.result.reverse().findIndex((elem) => /\\d/.test(elem));\r\n    //   displayOpsExpression = this.state.displayOps.slice(0, this.state.displayOps.length - lastDigitIndex);\r\n    //   resultExpression = this.state.result.reverse().slice(0, this.state.result.length - lastDigitIndex);\r\n    // }\r\n    deleteRedundantOperators(this.state);\r\n\r\n    let result = calculate(resultExpression);\r\n\r\n    this.setState({\r\n      displayOps: displayOpsExpression.concat(\"=\").concat(result),\r\n      displayCur: result,\r\n      decimalAlreadyUsed: false,\r\n      twoConsecutiveOperators: false,\r\n      lastResult: result,\r\n    });\r\n    console.log(\"Inside handleEquals: final result\", result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Display ops={this.state.displayOps} cur={this.state.displayCur} />\r\n        <Buttons clear={this.handleClear} operator={this.handleOperator} digit={this.handleDigit} equals={this.handleEquals} decimal={this.handleDecimal} exponentiation={this.handleExponentiation} />\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Display extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"displayBox\">\r\n          <div id=\"displayOps\">{this.props.ops}</div>\r\n          <div id=\"display\">{this.props.cur}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Buttons extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <button id=\"clear\" onClick={this.props.clear}>\r\n          AC\r\n        </button>\r\n        <button id=\"add\" value=\"+\" onClick={this.props.operator}>\r\n          +\r\n        </button>\r\n        <button id=\"seven\" value=\"7\" onClick={this.props.digit}>\r\n          7\r\n        </button>\r\n        <button id=\"eight\" value=\"8\" onClick={this.props.digit}>\r\n          8\r\n        </button>\r\n        <button id=\"nine\" value=\"9\" onClick={this.props.digit}>\r\n          9\r\n        </button>\r\n        <button id=\"subtract\" value=\"-\" onClick={this.props.operator}>\r\n          -\r\n        </button>\r\n        <button id=\"four\" value=\"4\" onClick={this.props.digit}>\r\n          4\r\n        </button>\r\n        <button id=\"five\" value=\"5\" onClick={this.props.digit}>\r\n          5\r\n        </button>\r\n        <button id=\"six\" value=\"6\" onClick={this.props.digit}>\r\n          6\r\n        </button>\r\n        <button id=\"multiply\" value=\"*\" onClick={this.props.operator}>\r\n          x\r\n        </button>\r\n        <button id=\"one\" value=\"1\" onClick={this.props.digit}>\r\n          1\r\n        </button>\r\n        <button id=\"two\" value=\"2\" onClick={this.props.digit}>\r\n          2\r\n        </button>\r\n        <button id=\"three\" value=\"3\" onClick={this.props.digit}>\r\n          3\r\n        </button>\r\n        <button id=\"divide\" value=\"/\" onClick={this.props.operator}>\r\n          /\r\n        </button>\r\n        <button id=\"zero\" value=\"0\" onClick={this.props.digit}>\r\n          0\r\n        </button>\r\n        <button id=\"decimal\" onClick={this.props.decimal}>\r\n          .\r\n        </button>\r\n        <button id=\"equals\" onClick={this.props.equals}>\r\n          =\r\n        </button>\r\n        <button id=\"exponentiation\" value=\"^\" onClick={this.props.exponentiation}>\r\n          ^\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <div id=\"footer\">This project was build using: HTML, CSS, JavaScript, React, Redux, jQuery, Bootstrap and SASS without using eval() function</div>\r\n    </footer>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}