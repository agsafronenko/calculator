{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agsaf\\\\Documents\\\\GitHub\\\\calculator\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./styles/styles.css\";\nimport $ from \"jquery\";\nimport calculate, { deleteRedundantOperators, displayOpsExpression, lastLegitSymbol, saveState, stateStorage, factorial, trigonometryInDegrees } from \"./functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayOps: \"\",\n      displayCur: \"0\",\n      lastInput: \"\",\n      lastInputType: \"\",\n      decimalAlreadyUsed: false,\n      twoConsecutiveOperators: false,\n      lastResult: \"\",\n      parenthesesDelta: 0\n    };\n    this.handleClear = this.handleClear.bind(this);\n    this.handleOperator = this.handleOperator.bind(this);\n    this.handleDigit = this.handleDigit.bind(this);\n    this.handleEquals = this.handleEquals.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handleExponentiation = this.handleExponentiation.bind(this);\n    this.handleSquareRoot = this.handleSquareRoot.bind(this);\n    this.handleSquare = this.handleSquare.bind(this);\n    this.handleRoot = this.handleRoot.bind(this);\n    this.handlePreviousState = this.handlePreviousState.bind(this);\n    this.handleSpecialDigit = this.handleSpecialDigit.bind(this);\n    this.handleLog10 = this.handleLog10.bind(this);\n    this.handleLog = this.handleLog.bind(this);\n    this.handleLogE = this.handleLogE.bind(this);\n    this.handleFactorial = this.handleFactorial.bind(this);\n    this.handleTrigonometry = this.handleTrigonometry.bind(this);\n    this.handlePercentage = this.handlePercentage.bind(this);\n    this.handleCopyToClipboard = this.handleCopyToClipboard.bind(this);\n    this.handleChangeSign = this.handleChangeSign.bind(this);\n    this.handleAbs = this.handleAbs.bind(this);\n    this.handleSwitchToDenominator = this.handleSwitchToDenominator.bind(this);\n    this.handleModulo = this.handleModulo.bind(this);\n    this.handleLeftParenthesis = this.handleLeftParenthesis.bind(this);\n    this.handleRightParenthesis = this.handleRightParenthesis.bind(this);\n  }\n  handleClear() {\n    stateStorage.prevState = [];\n    this.setState({\n      displayOps: \"\",\n      displayCur: \"0\",\n      lastInput: \"\",\n      lastInputType: \"\",\n      decimalAlreadyUsed: false,\n      twoConsecutiveOperators: false,\n      lastResult: \"\",\n      parenthesesDelta: 0\n    });\n  }\n  handlePreviousState() {\n    if (stateStorage.prevState.length <= 1) {\n      this.handleClear();\n    } else {\n      stateStorage.prevState.shift();\n      this.setState({\n        displayOps: stateStorage.prevState[0].displayOps,\n        displayCur: stateStorage.prevState[0].displayCur,\n        lastInput: stateStorage.prevState[0].lastInput,\n        lastInputType: stateStorage.prevState[0].lastInputType,\n        decimalAlreadyUsed: stateStorage.prevState[0].decimalAlreadyUsed,\n        twoConsecutiveOperators: stateStorage.prevState[0].twoConsecutiveOperators,\n        lastResult: stateStorage.prevState[0].lastResult\n      });\n    }\n  }\n  handleOperator(e) {\n    // only solo \" - \" is allowed as the first input among all operators\n    if (this.state.displayOps !== \"\" || e.target.value === \" - \") {\n      if (this.state.displayOps !== \" - \") {\n        // used to compare last two states and, in case of their equality, the stateStorage will not be updated\n        let penultimateInput = this.state.lastInput;\n\n        // handle consecutive input of multiple operators\n        if (this.state.twoConsecutiveOperators === true) {\n          this.setState(state => ({\n            displayOps: state.displayOps.slice(0, state.displayOps.length - lastLegitSymbol(state.displayOps)).concat(e.target.value),\n            displayCur: e.target.value,\n            lastInput: e.target.value,\n            lastInputType: \"operator\",\n            twoConsecutiveOperators: false\n          }), () => {\n            console.log(\"handleOperator stage 1 : this.state.displayOps\", this.state.displayOps);\n            if (e.target.value === \" - \" || e.target.value !== penultimateInput) saveState(this.state);\n          });\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value !== \" - \") {\n          if (this.state.displayOps.slice(this.state.displayOps.length - 4) !== \"( - \") {\n            this.setState(state => ({\n              displayOps: state.displayOps.slice(0, state.displayOps.length - lastLegitSymbol(state.displayOps)).concat(e.target.value),\n              displayCur: e.target.value,\n              lastInput: e.target.value,\n              lastInputType: \"operator\",\n              twoConsecutiveOperators: false\n            }), () => {\n              console.log(\"handleOperator stage 2 : this.state.displayOps\", this.state.displayOps);\n              console.log(\"heyyyyy\", e.target.value, this.state.lastInput);\n              if (e.target.value !== penultimateInput) saveState(this.state);\n            });\n          }\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value === \" - \") {\n          console.log(\"hola\", this.state.displayOps.slice(this.state.displayOps.length - 4));\n          if (this.state.displayOps.slice(this.state.displayOps.length - 4) !== \"( - \") {\n            this.setState(state => ({\n              displayOps: state.displayOps.concat(e.target.value),\n              displayCur: e.target.value,\n              lastInput: e.target.value,\n              lastInputType: \"operator\",\n              twoConsecutiveOperators: true\n            }), () => {\n              console.log(\"handleOperator stage 3: this.state.displayOps\", this.state.displayOps);\n              saveState(this.state);\n            });\n          }\n        }\n        if (this.state.lastInput === \"(\") {\n          this.setState(state => ({\n            displayOps: e.target.value === \" - \" ? state.displayOps.concat(e.target.value) : state.displayOps,\n            displayCur: e.target.value === \" - \" ? e.target.value : state.displayCur,\n            lastInput: e.target.value === \" - \" ? e.target.value : state.lastInput,\n            lastInputType: e.target.value === \" - \" ? \"operator\" : state.lastInputType\n          }), () => {\n            console.log(\"handleOperator stage 4: this.state.displayOps\", this.state.displayOps);\n          });\n        } else if (this.state.lastInput === \")\") {\n          this.setState(state => ({\n            displayOps: state.displayOps.concat(e.target.value),\n            displayCur: e.target.value,\n            lastInput: e.target.value,\n            lastInputType: \"operator\",\n            twoConsecutiveOperators: false,\n            decimalAlreadyUsed: false,\n            lastResult: \"\"\n          }), () => {\n            console.log(\"handleOperator stage 5: this.state.displayOps\", this.state.displayOps);\n            saveState(this.state);\n          });\n        }\n        if (this.state.lastInputType !== \"parenthesis\" && this.state.lastInputType !== \"operator\") {\n          this.setState(state => ({\n            displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n            displayCur: e.target.value,\n            lastInput: e.target.value,\n            lastInputType: \"operator\",\n            twoConsecutiveOperators: false,\n            decimalAlreadyUsed: false,\n            lastResult: \"\"\n          }), () => {\n            console.log(\"handleOperator stage 6: this.state.displayOps\", this.state.displayOps);\n            saveState(this.state);\n          });\n        }\n      }\n    }\n  }\n  handleDigit(e) {\n    if (this.state.lastResult !== \"\") this.handleClear();\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\") {\n      this.setState(state => ({\n        displayOps: state.lastInputType === \"operator\" || state.lastInput === \"(\" ? state.displayOps.concat(e.target.value) : Number(state.displayCur) === 0 && state.displayCur.length === 1 || !isFinite(state.lastInput) && state.lastInput !== \".\" ? state.displayOps.slice(0, state.displayOps.length - 1).concat(e.target.value) : state.displayOps.concat(e.target.value),\n        displayCur: Number(state.displayCur) === 0 && state.displayCur.length === 1 || !isFinite(state.lastInput) && state.lastInput !== \".\" ? e.target.value : state.displayCur.concat(e.target.value),\n        lastInput: e.target.value,\n        lastInputType: \"digit\",\n        twoConsecutiveOperators: false\n      }), () => {\n        saveState(this.state);\n      });\n    }\n  }\n  handleSpecialDigit(e) {\n    if (this.state.lastResult !== \"\") this.handleClear();\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\" && this.state.decimalAlreadyUsed !== true) {\n      this.setState(state => ({\n        displayOps: state.lastInputType === \"operator\" || state.lastInput === \"(\" ? state.displayOps.concat(e.target.value) : Number(state.displayCur) === 0 && state.displayCur.length === 1 || !isFinite(state.lastInput) && state.lastInput !== \".\" ? state.displayOps.slice(0, state.displayOps.length - 1).concat(e.target.value) : state.displayOps.concat(e.target.value),\n        displayCur: e.target.value,\n        lastInput: e.target.value,\n        lastInputType: \"digit\",\n        twoConsecutiveOperators: false,\n        decimalAlreadyUsed: true\n      }), () => {\n        saveState(this.state);\n      });\n    }\n  }\n  handleDecimal() {\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\" && this.state.decimalAlreadyUsed !== true) {\n      this.setState(state => ({\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(isFinite(state.lastInput) && this.state.displayOps !== \"\" ? \".\" : \"0.\") : /\\./.test(state.lastResult) ? \"\".concat(\"0.\") : \"\".state.lastResult.concat(\".\"),\n        displayCur: state.lastResult === \"\" ? isFinite(state.lastInput) ? state.displayCur.concat(\".\") : \"0.\" : /\\./.test(state.lastResult) ? \"\".concat(\"0.\") : \"\".state.lastResult.concat(\".\"),\n        lastInput: \".\",\n        lastInputType: \"decimal\",\n        decimalAlreadyUsed: true,\n        twoConsecutiveOperators: false,\n        lastResult: \"\"\n      }), () => {\n        saveState(this.state);\n      });\n    }\n  }\n  handleSquare() {\n    // document.getElementById(\"exponentiation\").click();\n    // if (this.state.lastInput !== \"(\") {\n    //   setTimeout(() => document.getElementById(\"two\").click(), 50);\n    // }\n    this.setState(state => ({\n      displayOps: state.lastResult === \"\" ? state.displayOps.concat(\" ^ 2\") : \"\".concat(state.lastResult).concat(\" ^ 2\"),\n      displayCur: \"0\",\n      lastInput: \"2\",\n      lastInputType: \"digit\",\n      twoConsecutiveOperators: false,\n      decimalAlreadyUsed: false,\n      lastResult: \"\"\n    }), () => {\n      console.log(\"inside handle ^2 after setState:  displayOps\", this.state.displayOps);\n      saveState(this.state);\n    });\n  }\n  handleSquareRoot() {\n    if (this.state.lastInput !== \"(\") {\n      document.getElementById(\"anyRoot\").click();\n      setTimeout(() => document.getElementById(\"two\").click(), 50);\n    }\n  }\n  handleExponentiation(e) {\n    //   deleteRedundantOperators(this.state);\n    this.setState(state => ({\n      displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n      displayCur: e.target.value,\n      lastInput: e.target.value,\n      lastInputType: \"operator\",\n      twoConsecutiveOperators: false,\n      decimalAlreadyUsed: false,\n      lastResult: \"\"\n    }), () => {\n      console.log(\"inside handle ^ after setState:  displayOps\", this.state.displayOps);\n      saveState(this.state);\n    });\n  }\n  handleRoot(e) {\n    // deleteRedundantOperators(this.state);\n\n    this.setState(state => ({\n      displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n      displayCur: e.target.value,\n      lastInput: e.target.value,\n      lastInputType: \"operator\",\n      twoConsecutiveOperators: false,\n      decimalAlreadyUsed: false,\n      lastResult: \"\"\n    }), () => {\n      console.log(\"after displayOps\", this.state.displayOps);\n      saveState(this.state);\n    });\n  }\n  handleLog(e) {\n    // deleteRedundantOperators(this.state);\n    console.log(\"inside handle log10: displayOps\", this.state.displayOps);\n    this.setState(state => ({\n      displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n      displayCur: e.target.value,\n      lastInput: e.target.value,\n      lastInputType: \"operator\",\n      twoConsecutiveOperators: false,\n      decimalAlreadyUsed: false,\n      lastResult: \"\"\n    }), () => {\n      console.log(\"inside handle log10 after setState:  displayOps\", this.state.displayOps);\n      saveState(this.state);\n    });\n  }\n  handleLog10() {\n    if (this.state.lastInput !== \"(\") {\n      document.getElementById(\"log\").click();\n      setTimeout(() => document.getElementById(\"one\").click(), 50);\n      setTimeout(() => document.getElementById(\"zero\").click(), 70);\n    }\n  }\n  handleLogE() {\n    if (this.state.lastInput !== \"(\") {\n      document.getElementById(\"log\").click();\n      setTimeout(() => document.getElementById(\"e\").click(), 50);\n    }\n  }\n  handleFactorial() {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\n      let factor = factorial(this.state.displayCur).toString();\n      console.log(\"factorial\", factor);\n      this.setState(state => ({\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(\"!\") : \"\".concat(state.lastResult).concat(\"!\"),\n        displayCur: factor,\n        lastInput: \"!\",\n        lastInputType: \"!\",\n        twoConsecutiveOperators: false,\n        lastResult: \"\"\n      }), () => {\n        console.log(\"inside handle factorial after setState:  displayOps\", this.state.displayOps);\n        saveState(this.state);\n      });\n    }\n  }\n  handleTrigonometry(e) {\n    console.log(\"inside trigonometry\", isFinite(this.state.displayCur));\n    if (isFinite(this.state.displayCur)) {\n      let result = trigonometryInDegrees(this.state.displayCur, e.target.value);\n      console.log(\"triginometry\", result);\n      // deleteRedundantDigits(this.state);\n      this.setState(state => ({\n        // displayOps: state.lastResult === \"\" ? displayOpsExpression.concat(result) : \"\".concat(result),\n        displayCur: result,\n        lastInput: result,\n        lastInputType: \"digit\",\n        twoConsecutiveOperators: false\n        // lastResult: \"\",\n      }), () => {\n        console.log(\"inside trigonometry after setState:  displayOps\", this.state.displayOps);\n        saveState(this.state);\n      });\n    }\n  }\n  handlePercentage() {\n    if (this.state.lastInput !== \"(\") {\n      this.setState(state => ({\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(\"%\") : state.lastResult.concat(\"%\"),\n        displayCur: state.displayCur / 100,\n        lastInput: \"%\",\n        lastInputType: \"%\",\n        twoConsecutiveOperators: false\n        // lastResult: \"\",\n      }), () => {\n        console.log(\"inside handle log10 after setState:  displayOps\", this.state.displayOps);\n        saveState(this.state);\n      });\n      //   document.getElementById(\"divide\").click();\n      //   setTimeout(() => document.getElementById(\"one\").click(), 20);\n      //   setTimeout(() => document.getElementById(\"zero\").click(), 40);\n      //   setTimeout(() => document.getElementById(\"zero\").click(), 60);\n      // }\n      // handleFactorial() {\n      //   if (Number.isInteger(Number(this.state.displayCur))) {\n      //     let factor = factorial(this.state.displayCur).toString();\n      //     console.log(\"factorial\", factor);\n      //     // deleteRedundantDigits(this.state);\n      //     this.setState(\n      //       (state) => ({\n      //         displayOps: state.lastResult === \"\" ? state.displayOps.concat(\"!\") : \"\".concat(\"!\"),\n      //         displayCur: factor,\n      //         lastInput: \"!\",\n      //         lastInputType: \"!\",\n      //         twoConsecutiveOperators: false,\n      //         // lastResult: \"\",\n      //       }),\n      //       () => {\n      //         console.log(\"inside handle log10 after setState:  displayOps\", this.state.displayOps);\n      //         saveState(this.state);\n      //       }\n      //     );\n      //   }\n    }\n  }\n\n  handleChangeSign() {\n    if (this.state.lastInputType === \"digit\") {\n      let displayOpsExpression = \"\";\n      let regexPlusMinus = new RegExp(` \\\\+  - ${this.state.displayCur}$`);\n      let matchPlusMinus = this.state.displayOps.match(regexPlusMinus);\n      let regexMultMinus = new RegExp(` \\\\*  - ${this.state.displayCur}$`);\n      let matchMultMinus = this.state.displayOps.match(regexMultMinus);\n      let regexDivideMinus = new RegExp(` \\\\/  - ${this.state.displayCur}$`);\n      let matchDivideMinus = this.state.displayOps.match(regexDivideMinus);\n      let regexMinusFirstInput = new RegExp(`^ - ${this.state.displayCur}$`);\n      let matchMinusFirstInput = this.state.displayOps.match(regexMinusFirstInput);\n      let regexMinus = new RegExp(` - ${this.state.displayCur}$`);\n      let matchMinus = this.state.displayOps.match(regexMinus);\n      let regexPlus = new RegExp(`${this.state.displayCur}$`);\n      let matchPlus = this.state.displayOps.match(regexPlus);\n      let arr = [matchPlusMinus, matchMultMinus, matchDivideMinus, FirstInput, matchMinus, matchPlus];\n      let signArr = [\" + \", \" * \", \" / \", \"\", \" + \", \" - \"];\n      for (let i = 0; i < arr.length; i++) {\n        console.log(\"i\", i);\n        console.log(\"arr[i] !== null\", arr[i] !== null);\n        if (arr[i] !== null) {\n          displayOpsExpression = this.state.displayOps.slice(0, arr[i].index).concat(signArr[i]).concat(this.state.displayCur);\n          break;\n        }\n      }\n      // if (arr[0] !== null) {\n      //   displayOpsExpression = this.state.displayOps.slice(0, arr[0].index).concat(signArr[0]).concat(this.state.displayCur);\n      // } else if (arr[1] !== null) {\n      //   displayOpsExpression = this.state.displayOps.slice(0, arr[1].index).concat(signArr[1]).concat(this.state.displayCur);\n      // } else if (arr[2] !== null) {\n      //   displayOpsExpression = this.state.displayOps.slice(0, arr[2].index).concat(signArr[2]).concat(this.state.displayCur);\n      // } else if (arr[3] !== null) {\n      //   displayOpsExpression = this.state.displayOps.slice(0, arr[3].index).concat(signArr[3]).concat(this.state.displayCur);\n      // } else if (arr[4] !== null) {\n      //   displayOpsExpression = this.state.displayOps.slice(0, arr[4].index).concat(signArr[4]).concat(this.state.displayCur);\n      // }\n\n      this.setState(state => ({\n        displayOps: displayOpsExpression\n        // displayCur: state.displayCur * -1,\n      }));\n    }\n  }\n\n  handleAbs() {\n    this.setState(state => ({\n      displayCur: Math.abs(state.displayCur)\n    }));\n  }\n  handleSwitchToDenominator() {\n    this.setState(state => ({\n      displayCur: 1 / state.displayCur\n    }));\n  }\n  handleModulo(e) {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\n      this.setState(state => ({\n        displayOps: state.lastResult === \"\" ? state.lastInput === \")\" ? state.displayOps.concat(e.target.value) : state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n        displayCur: e.target.value,\n        lastInput: e.target.value,\n        lastInputType: \"operator\",\n        twoConsecutiveOperators: false,\n        decimalAlreadyUsed: false,\n        lastResult: \"\"\n      }), () => {\n        console.log(\"inside modulo after setState:  displayOps\", this.state.displayOps);\n        saveState(this.state);\n      });\n    }\n  }\n  handleLeftParenthesis(e) {\n    if (this.state.lastInputType !== \"digit\" && this.state.lastInput !== \")\") {\n      this.setState(state => ({\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(e.target.value),\n        displayCur: e.target.value,\n        lastInput: \"(\",\n        lastInputType: \"parenthesis\",\n        parenthesesDelta: state.parenthesesDelta + 1,\n        twoConsecutiveOperators: false\n      }), () => {\n        console.log(\"inside leftParenthesis after setState:  displayOps\", this.state.displayOps);\n        saveState(this.state);\n      });\n    }\n  }\n  handleRightParenthesis(e) {\n    if (this.state.parenthesesDelta > 0) {\n      if (this.state.lastInputType === \"digit\") {\n        this.setState(state => ({\n          displayOps: state.lastInput === \")\" ? state.displayOps.concat(e.target.value) : state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(e.target.value),\n          displayCur: e.target.value,\n          lastInput: \")\",\n          lastInputType: \"parenthesis\",\n          parenthesesDelta: state.parenthesesDelta - 1,\n          twoConsecutiveOperators: false\n        }), () => {\n          console.log(\"inside rightParenthesis after setState:  displayOps\", this.state.displayOps);\n          saveState(this.state);\n        });\n      }\n    }\n  }\n  handleEquals() {\n    if (this.state.lastResult === \"\") {\n      console.log(\"check parenthesis after adding missing\", this.state.displayOps);\n      deleteRedundantOperators(this.state);\n      let result = calculate(displayOpsExpression);\n      // let result = calculate(\"3 * (25 - 21) + 8\");\n      this.setState({\n        displayOps: displayOpsExpression.concat(\" = \").concat(result),\n        displayCur: result,\n        lastInput: \"\",\n        lastInputType: \"\",\n        twoConsecutiveOperators: false,\n        decimalAlreadyUsed: false,\n        lastResult: result,\n        parenthesesDelta: 0\n      }, () => {\n        saveState(this.state);\n        console.log(\"Inside handleEquals: final result\", result);\n      });\n    }\n  }\n  handleCopyToClipboard() {\n    let copyResult = document.getElementById(\"display\").innerText;\n    navigator.clipboard.writeText(copyResult);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        ops: this.state.displayOps,\n        cur: this.state.displayCur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        clear: this.handleClear,\n        operator: this.handleOperator,\n        digit: this.handleDigit,\n        equals: this.handleEquals,\n        decimal: this.handleDecimal,\n        exponentiation: this.handleExponentiation,\n        root: this.handleRoot,\n        square: this.handleSquare,\n        squareRoot: this.handleSquareRoot,\n        previousState: this.handlePreviousState,\n        specialDigit: this.handleSpecialDigit,\n        log10: this.handleLog10,\n        log: this.handleLog,\n        logE: this.handleLogE,\n        factorial: this.handleFactorial,\n        trigonometry: this.handleTrigonometry,\n        percentage: this.handlePercentage,\n        copyToClipboard: this.handleCopyToClipboard,\n        changeSign: this.handleChangeSign,\n        abs: this.handleAbs,\n        switchToDenominator: this.handleSwitchToDenominator,\n        modulo: this.handleModulo,\n        leftParenthesis: this.handleLeftParenthesis,\n        rightParenthesis: this.handleRightParenthesis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"displayBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"displayOps\",\n          children: this.props.ops\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"display\",\n          children: this.props.cur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nclass Buttons extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"clear\",\n        onClick: this.props.clear,\n        children: \"AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"add\",\n        value: \" + \",\n        onClick: this.props.operator,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"seven\",\n        value: \"7\",\n        onClick: this.props.digit,\n        children: \"7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"eight\",\n        value: \"8\",\n        onClick: this.props.digit,\n        children: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"nine\",\n        value: \"9\",\n        onClick: this.props.digit,\n        children: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"subtract\",\n        value: \" - \",\n        onClick: this.props.operator,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"four\",\n        value: \"4\",\n        onClick: this.props.digit,\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"five\",\n        value: \"5\",\n        onClick: this.props.digit,\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"six\",\n        value: \"6\",\n        onClick: this.props.digit,\n        children: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"multiply\",\n        value: \" * \",\n        onClick: this.props.operator,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"one\",\n        value: \"1\",\n        onClick: this.props.digit,\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"two\",\n        value: \"2\",\n        onClick: this.props.digit,\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"three\",\n        value: \"3\",\n        onClick: this.props.digit,\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"divide\",\n        value: \" / \",\n        onClick: this.props.operator,\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"zero\",\n        value: \"0\",\n        onClick: this.props.digit,\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"decimal\",\n        onClick: this.props.decimal,\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"equals\",\n        onClick: this.props.equals,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"square\",\n        value: \"S\",\n        onClick: this.props.square,\n        children: \"S\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"squareRoot\",\n        value: \"R\",\n        onClick: this.props.squareRoot,\n        children: \"R\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"exponentiation\",\n        value: \" ^ \",\n        onClick: this.props.operator,\n        children: \"^\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"anyRoot\",\n        value: \" yroot \",\n        onClick: this.props.operator,\n        children: \"root\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"pi\",\n        value: Math.PI,\n        onClick: this.props.specialDigit,\n        children: \"Pi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"e\",\n        value: Math.E,\n        onClick: this.props.specialDigit,\n        children: \"e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"random\",\n        value: Math.random(),\n        onClick: this.props.specialDigit,\n        children: \"rand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"delete\",\n        onClick: this.props.previousState,\n        children: \"del\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"log10\",\n        onClick: this.props.log10,\n        children: \"log10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"log\",\n        value: \" log base \",\n        onClick: this.props.log,\n        children: \"log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"logE\",\n        onClick: this.props.logE,\n        children: \"logE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"factorial\",\n        onClick: this.props.factorial,\n        children: \"!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"cos\",\n        value: \"cos\",\n        onClick: this.props.trigonometry,\n        children: \"cos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"sin\",\n        value: \"sin\",\n        onClick: this.props.trigonometry,\n        children: \"sin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"tan\",\n        value: \"tan\",\n        onClick: this.props.trigonometry,\n        children: \"tan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"cot\",\n        value: \"cot\",\n        onClick: this.props.trigonometry,\n        children: \"cot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"sec\",\n        value: \"sec\",\n        onClick: this.props.trigonometry,\n        children: \"sec\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"csc\",\n        value: \"csc\",\n        onClick: this.props.trigonometry,\n        children: \"csc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"percentage\",\n        onClick: this.props.percentage,\n        children: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"copy\",\n        onClick: this.props.copyToClipboard,\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"sign\",\n        onClick: this.props.changeSign,\n        children: \"+/-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"abs\",\n        onClick: this.props.abs,\n        children: \"abs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"denominator\",\n        onClick: this.props.switchToDenominator,\n        children: \"1/x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"modulo\",\n        value: \" mod \",\n        onClick: this.props.modulo,\n        children: \"mod\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"leftParenthesis\",\n        value: \"(\",\n        onClick: this.props.leftParenthesis,\n        children: \"(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"rightParenthesis\",\n        value: \")\",\n        onClick: this.props.rightParenthesis,\n        children: \")\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"footer\",\n      children: \"This project was build using: HTML, CSS, JavaScript, React, Redux, jQuery, Bootstrap and SASS without using eval() function\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 791,\n    columnNumber: 5\n  }, this);\n}\n_c = Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["React","$","calculate","deleteRedundantOperators","displayOpsExpression","lastLegitSymbol","saveState","stateStorage","factorial","trigonometryInDegrees","Calculator","Component","constructor","props","state","displayOps","displayCur","lastInput","lastInputType","decimalAlreadyUsed","twoConsecutiveOperators","lastResult","parenthesesDelta","handleClear","bind","handleOperator","handleDigit","handleEquals","handleDecimal","handleExponentiation","handleSquareRoot","handleSquare","handleRoot","handlePreviousState","handleSpecialDigit","handleLog10","handleLog","handleLogE","handleFactorial","handleTrigonometry","handlePercentage","handleCopyToClipboard","handleChangeSign","handleAbs","handleSwitchToDenominator","handleModulo","handleLeftParenthesis","handleRightParenthesis","prevState","setState","length","shift","e","target","value","penultimateInput","slice","concat","console","log","Number","isFinite","test","document","getElementById","click","setTimeout","factor","toString","result","regexPlusMinus","RegExp","matchPlusMinus","match","regexMultMinus","matchMultMinus","regexDivideMinus","matchDivideMinus","regexMinusFirstInput","matchMinusFirstInput","regexMinus","matchMinus","regexPlus","matchPlus","arr","FirstInput","signArr","i","index","Math","abs","copyResult","innerText","navigator","clipboard","writeText","render","Display","ops","cur","Buttons","clear","operator","digit","decimal","equals","square","squareRoot","PI","specialDigit","E","random","previousState","log10","logE","trigonometry","percentage","copyToClipboard","changeSign","switchToDenominator","modulo","leftParenthesis","rightParenthesis","Footer"],"sources":["C:/Users/agsaf/Documents/GitHub/calculator/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./styles/styles.css\";\r\nimport $ from \"jquery\";\r\nimport calculate, { deleteRedundantOperators, displayOpsExpression, lastLegitSymbol, saveState, stateStorage, factorial, trigonometryInDegrees } from \"./functions\";\r\n\r\nexport default class Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayOps: \"\",\r\n      displayCur: \"0\",\r\n      lastInput: \"\",\r\n      lastInputType: \"\",\r\n      decimalAlreadyUsed: false,\r\n      twoConsecutiveOperators: false,\r\n      lastResult: \"\",\r\n      parenthesesDelta: 0,\r\n    };\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.handleOperator = this.handleOperator.bind(this);\r\n    this.handleDigit = this.handleDigit.bind(this);\r\n    this.handleEquals = this.handleEquals.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.handleExponentiation = this.handleExponentiation.bind(this);\r\n    this.handleSquareRoot = this.handleSquareRoot.bind(this);\r\n    this.handleSquare = this.handleSquare.bind(this);\r\n    this.handleRoot = this.handleRoot.bind(this);\r\n    this.handlePreviousState = this.handlePreviousState.bind(this);\r\n    this.handleSpecialDigit = this.handleSpecialDigit.bind(this);\r\n    this.handleLog10 = this.handleLog10.bind(this);\r\n    this.handleLog = this.handleLog.bind(this);\r\n    this.handleLogE = this.handleLogE.bind(this);\r\n    this.handleFactorial = this.handleFactorial.bind(this);\r\n    this.handleTrigonometry = this.handleTrigonometry.bind(this);\r\n    this.handlePercentage = this.handlePercentage.bind(this);\r\n    this.handleCopyToClipboard = this.handleCopyToClipboard.bind(this);\r\n    this.handleChangeSign = this.handleChangeSign.bind(this);\r\n    this.handleAbs = this.handleAbs.bind(this);\r\n    this.handleSwitchToDenominator = this.handleSwitchToDenominator.bind(this);\r\n    this.handleModulo = this.handleModulo.bind(this);\r\n    this.handleLeftParenthesis = this.handleLeftParenthesis.bind(this);\r\n    this.handleRightParenthesis = this.handleRightParenthesis.bind(this);\r\n  }\r\n\r\n  handleClear() {\r\n    stateStorage.prevState = [];\r\n    this.setState({\r\n      displayOps: \"\",\r\n      displayCur: \"0\",\r\n      lastInput: \"\",\r\n      lastInputType: \"\",\r\n      decimalAlreadyUsed: false,\r\n      twoConsecutiveOperators: false,\r\n      lastResult: \"\",\r\n      parenthesesDelta: 0,\r\n    });\r\n  }\r\n\r\n  handlePreviousState() {\r\n    if (stateStorage.prevState.length <= 1) {\r\n      this.handleClear();\r\n    } else {\r\n      stateStorage.prevState.shift();\r\n      this.setState({\r\n        displayOps: stateStorage.prevState[0].displayOps,\r\n        displayCur: stateStorage.prevState[0].displayCur,\r\n        lastInput: stateStorage.prevState[0].lastInput,\r\n        lastInputType: stateStorage.prevState[0].lastInputType,\r\n        decimalAlreadyUsed: stateStorage.prevState[0].decimalAlreadyUsed,\r\n        twoConsecutiveOperators: stateStorage.prevState[0].twoConsecutiveOperators,\r\n        lastResult: stateStorage.prevState[0].lastResult,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOperator(e) {\r\n    // only solo \" - \" is allowed as the first input among all operators\r\n    if (this.state.displayOps !== \"\" || e.target.value === \" - \") {\r\n      if (this.state.displayOps !== \" - \") {\r\n        // used to compare last two states and, in case of their equality, the stateStorage will not be updated\r\n        let penultimateInput = this.state.lastInput;\r\n\r\n        // handle consecutive input of multiple operators\r\n        if (this.state.twoConsecutiveOperators === true) {\r\n          this.setState(\r\n            (state) => ({\r\n              displayOps: state.displayOps.slice(0, state.displayOps.length - lastLegitSymbol(state.displayOps)).concat(e.target.value),\r\n              displayCur: e.target.value,\r\n              lastInput: e.target.value,\r\n              lastInputType: \"operator\",\r\n              twoConsecutiveOperators: false,\r\n            }),\r\n            () => {\r\n              console.log(\"handleOperator stage 1 : this.state.displayOps\", this.state.displayOps);\r\n              if (e.target.value === \" - \" || e.target.value !== penultimateInput) saveState(this.state);\r\n            }\r\n          );\r\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value !== \" - \") {\r\n          if (this.state.displayOps.slice(this.state.displayOps.length - 4) !== \"( - \") {\r\n            this.setState(\r\n              (state) => ({\r\n                displayOps: state.displayOps.slice(0, state.displayOps.length - lastLegitSymbol(state.displayOps)).concat(e.target.value),\r\n                displayCur: e.target.value,\r\n                lastInput: e.target.value,\r\n                lastInputType: \"operator\",\r\n                twoConsecutiveOperators: false,\r\n              }),\r\n\r\n              () => {\r\n                console.log(\"handleOperator stage 2 : this.state.displayOps\", this.state.displayOps);\r\n                console.log(\"heyyyyy\", e.target.value, this.state.lastInput);\r\n                if (e.target.value !== penultimateInput) saveState(this.state);\r\n              }\r\n            );\r\n          }\r\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value === \" - \") {\r\n          console.log(\"hola\", this.state.displayOps.slice(this.state.displayOps.length - 4));\r\n          if (this.state.displayOps.slice(this.state.displayOps.length - 4) !== \"( - \") {\r\n            this.setState(\r\n              (state) => ({\r\n                displayOps: state.displayOps.concat(e.target.value),\r\n                displayCur: e.target.value,\r\n                lastInput: e.target.value,\r\n                lastInputType: \"operator\",\r\n                twoConsecutiveOperators: true,\r\n              }),\r\n              () => {\r\n                console.log(\"handleOperator stage 3: this.state.displayOps\", this.state.displayOps);\r\n                saveState(this.state);\r\n              }\r\n            );\r\n          }\r\n        }\r\n\r\n        if (this.state.lastInput === \"(\") {\r\n          this.setState(\r\n            (state) => ({\r\n              displayOps: e.target.value === \" - \" ? state.displayOps.concat(e.target.value) : state.displayOps,\r\n              displayCur: e.target.value === \" - \" ? e.target.value : state.displayCur,\r\n              lastInput: e.target.value === \" - \" ? e.target.value : state.lastInput,\r\n              lastInputType: e.target.value === \" - \" ? \"operator\" : state.lastInputType,\r\n            }),\r\n            () => {\r\n              console.log(\"handleOperator stage 4: this.state.displayOps\", this.state.displayOps);\r\n            }\r\n          );\r\n        } else if (this.state.lastInput === \")\") {\r\n          this.setState(\r\n            (state) => ({\r\n              displayOps: state.displayOps.concat(e.target.value),\r\n              displayCur: e.target.value,\r\n              lastInput: e.target.value,\r\n              lastInputType: \"operator\",\r\n              twoConsecutiveOperators: false,\r\n              decimalAlreadyUsed: false,\r\n              lastResult: \"\",\r\n            }),\r\n            () => {\r\n              console.log(\"handleOperator stage 5: this.state.displayOps\", this.state.displayOps);\r\n              saveState(this.state);\r\n            }\r\n          );\r\n        }\r\n\r\n        if (this.state.lastInputType !== \"parenthesis\" && this.state.lastInputType !== \"operator\") {\r\n          this.setState(\r\n            (state) => ({\r\n              displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\r\n              displayCur: e.target.value,\r\n              lastInput: e.target.value,\r\n              lastInputType: \"operator\",\r\n              twoConsecutiveOperators: false,\r\n              decimalAlreadyUsed: false,\r\n              lastResult: \"\",\r\n            }),\r\n            () => {\r\n              console.log(\"handleOperator stage 6: this.state.displayOps\", this.state.displayOps);\r\n              saveState(this.state);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDigit(e) {\r\n    if (this.state.lastResult !== \"\") this.handleClear();\r\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\") {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps:\r\n            state.lastInputType === \"operator\" || state.lastInput === \"(\"\r\n              ? state.displayOps.concat(e.target.value)\r\n              : (Number(state.displayCur) === 0 && state.displayCur.length === 1) || (!isFinite(state.lastInput) && state.lastInput !== \".\")\r\n              ? state.displayOps.slice(0, state.displayOps.length - 1).concat(e.target.value)\r\n              : state.displayOps.concat(e.target.value),\r\n          displayCur: (Number(state.displayCur) === 0 && state.displayCur.length === 1) || (!isFinite(state.lastInput) && state.lastInput !== \".\") ? e.target.value : state.displayCur.concat(e.target.value),\r\n          lastInput: e.target.value,\r\n          lastInputType: \"digit\",\r\n          twoConsecutiveOperators: false,\r\n        }),\r\n        () => {\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleSpecialDigit(e) {\r\n    if (this.state.lastResult !== \"\") this.handleClear();\r\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\" && this.state.decimalAlreadyUsed !== true) {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps:\r\n            state.lastInputType === \"operator\" || state.lastInput === \"(\"\r\n              ? state.displayOps.concat(e.target.value)\r\n              : (Number(state.displayCur) === 0 && state.displayCur.length === 1) || (!isFinite(state.lastInput) && state.lastInput !== \".\")\r\n              ? state.displayOps.slice(0, state.displayOps.length - 1).concat(e.target.value)\r\n              : state.displayOps.concat(e.target.value),\r\n          displayCur: e.target.value,\r\n          lastInput: e.target.value,\r\n          lastInputType: \"digit\",\r\n          twoConsecutiveOperators: false,\r\n          decimalAlreadyUsed: true,\r\n        }),\r\n        () => {\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleDecimal() {\r\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\" && this.state.decimalAlreadyUsed !== true) {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.lastResult === \"\" ? state.displayOps.concat(isFinite(state.lastInput) && this.state.displayOps !== \"\" ? \".\" : \"0.\") : /\\./.test(state.lastResult) ? \"\".concat(\"0.\") : \"\".state.lastResult.concat(\".\"),\r\n          displayCur: state.lastResult === \"\" ? (isFinite(state.lastInput) ? state.displayCur.concat(\".\") : \"0.\") : /\\./.test(state.lastResult) ? \"\".concat(\"0.\") : \"\".state.lastResult.concat(\".\"),\r\n          lastInput: \".\",\r\n          lastInputType: \"decimal\",\r\n          decimalAlreadyUsed: true,\r\n          twoConsecutiveOperators: false,\r\n          lastResult: \"\",\r\n        }),\r\n        () => {\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleSquare() {\r\n    // document.getElementById(\"exponentiation\").click();\r\n    // if (this.state.lastInput !== \"(\") {\r\n    //   setTimeout(() => document.getElementById(\"two\").click(), 50);\r\n    // }\r\n    this.setState(\r\n      (state) => ({\r\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(\" ^ 2\") : \"\".concat(state.lastResult).concat(\" ^ 2\"),\r\n        displayCur: \"0\",\r\n        lastInput: \"2\",\r\n        lastInputType: \"digit\",\r\n        twoConsecutiveOperators: false,\r\n        decimalAlreadyUsed: false,\r\n        lastResult: \"\",\r\n      }),\r\n      () => {\r\n        console.log(\"inside handle ^2 after setState:  displayOps\", this.state.displayOps);\r\n        saveState(this.state);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleSquareRoot() {\r\n    if (this.state.lastInput !== \"(\") {\r\n      document.getElementById(\"anyRoot\").click();\r\n      setTimeout(() => document.getElementById(\"two\").click(), 50);\r\n    }\r\n  }\r\n\r\n  handleExponentiation(e) {\r\n    //   deleteRedundantOperators(this.state);\r\n    this.setState(\r\n      (state) => ({\r\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\r\n        displayCur: e.target.value,\r\n        lastInput: e.target.value,\r\n        lastInputType: \"operator\",\r\n        twoConsecutiveOperators: false,\r\n        decimalAlreadyUsed: false,\r\n        lastResult: \"\",\r\n      }),\r\n      () => {\r\n        console.log(\"inside handle ^ after setState:  displayOps\", this.state.displayOps);\r\n        saveState(this.state);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleRoot(e) {\r\n    // deleteRedundantOperators(this.state);\r\n\r\n    this.setState(\r\n      (state) => ({\r\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\r\n        displayCur: e.target.value,\r\n        lastInput: e.target.value,\r\n        lastInputType: \"operator\",\r\n        twoConsecutiveOperators: false,\r\n        decimalAlreadyUsed: false,\r\n        lastResult: \"\",\r\n      }),\r\n      () => {\r\n        console.log(\"after displayOps\", this.state.displayOps);\r\n        saveState(this.state);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleLog(e) {\r\n    // deleteRedundantOperators(this.state);\r\n    console.log(\"inside handle log10: displayOps\", this.state.displayOps);\r\n    this.setState(\r\n      (state) => ({\r\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\r\n        displayCur: e.target.value,\r\n        lastInput: e.target.value,\r\n        lastInputType: \"operator\",\r\n        twoConsecutiveOperators: false,\r\n        decimalAlreadyUsed: false,\r\n        lastResult: \"\",\r\n      }),\r\n      () => {\r\n        console.log(\"inside handle log10 after setState:  displayOps\", this.state.displayOps);\r\n        saveState(this.state);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleLog10() {\r\n    if (this.state.lastInput !== \"(\") {\r\n      document.getElementById(\"log\").click();\r\n      setTimeout(() => document.getElementById(\"one\").click(), 50);\r\n      setTimeout(() => document.getElementById(\"zero\").click(), 70);\r\n    }\r\n  }\r\n\r\n  handleLogE() {\r\n    if (this.state.lastInput !== \"(\") {\r\n      document.getElementById(\"log\").click();\r\n      setTimeout(() => document.getElementById(\"e\").click(), 50);\r\n    }\r\n  }\r\n\r\n  handleFactorial() {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\r\n      let factor = factorial(this.state.displayCur).toString();\r\n      console.log(\"factorial\", factor);\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.lastResult === \"\" ? state.displayOps.concat(\"!\") : \"\".concat(state.lastResult).concat(\"!\"),\r\n          displayCur: factor,\r\n          lastInput: \"!\",\r\n          lastInputType: \"!\",\r\n          twoConsecutiveOperators: false,\r\n          lastResult: \"\",\r\n        }),\r\n        () => {\r\n          console.log(\"inside handle factorial after setState:  displayOps\", this.state.displayOps);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleTrigonometry(e) {\r\n    console.log(\"inside trigonometry\", isFinite(this.state.displayCur));\r\n    if (isFinite(this.state.displayCur)) {\r\n      let result = trigonometryInDegrees(this.state.displayCur, e.target.value);\r\n      console.log(\"triginometry\", result);\r\n      // deleteRedundantDigits(this.state);\r\n      this.setState(\r\n        (state) => ({\r\n          // displayOps: state.lastResult === \"\" ? displayOpsExpression.concat(result) : \"\".concat(result),\r\n          displayCur: result,\r\n          lastInput: result,\r\n          lastInputType: \"digit\",\r\n          twoConsecutiveOperators: false,\r\n          // lastResult: \"\",\r\n        }),\r\n        () => {\r\n          console.log(\"inside trigonometry after setState:  displayOps\", this.state.displayOps);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handlePercentage() {\r\n    if (this.state.lastInput !== \"(\") {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.lastResult === \"\" ? state.displayOps.concat(\"%\") : state.lastResult.concat(\"%\"),\r\n          displayCur: state.displayCur / 100,\r\n          lastInput: \"%\",\r\n          lastInputType: \"%\",\r\n          twoConsecutiveOperators: false,\r\n          // lastResult: \"\",\r\n        }),\r\n        () => {\r\n          console.log(\"inside handle log10 after setState:  displayOps\", this.state.displayOps);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n      //   document.getElementById(\"divide\").click();\r\n      //   setTimeout(() => document.getElementById(\"one\").click(), 20);\r\n      //   setTimeout(() => document.getElementById(\"zero\").click(), 40);\r\n      //   setTimeout(() => document.getElementById(\"zero\").click(), 60);\r\n      // }\r\n      // handleFactorial() {\r\n      //   if (Number.isInteger(Number(this.state.displayCur))) {\r\n      //     let factor = factorial(this.state.displayCur).toString();\r\n      //     console.log(\"factorial\", factor);\r\n      //     // deleteRedundantDigits(this.state);\r\n      //     this.setState(\r\n      //       (state) => ({\r\n      //         displayOps: state.lastResult === \"\" ? state.displayOps.concat(\"!\") : \"\".concat(\"!\"),\r\n      //         displayCur: factor,\r\n      //         lastInput: \"!\",\r\n      //         lastInputType: \"!\",\r\n      //         twoConsecutiveOperators: false,\r\n      //         // lastResult: \"\",\r\n      //       }),\r\n      //       () => {\r\n      //         console.log(\"inside handle log10 after setState:  displayOps\", this.state.displayOps);\r\n      //         saveState(this.state);\r\n      //       }\r\n      //     );\r\n      //   }\r\n    }\r\n  }\r\n\r\n  handleChangeSign() {\r\n    if (this.state.lastInputType === \"digit\") {\r\n      let displayOpsExpression = \"\";\r\n\r\n      let regexPlusMinus = new RegExp(` \\\\+  - ${this.state.displayCur}$`);\r\n      let matchPlusMinus = this.state.displayOps.match(regexPlusMinus);\r\n\r\n      let regexMultMinus = new RegExp(` \\\\*  - ${this.state.displayCur}$`);\r\n      let matchMultMinus = this.state.displayOps.match(regexMultMinus);\r\n\r\n      let regexDivideMinus = new RegExp(` \\\\/  - ${this.state.displayCur}$`);\r\n      let matchDivideMinus = this.state.displayOps.match(regexDivideMinus);\r\n\r\n      let regexMinusFirstInput = new RegExp(`^ - ${this.state.displayCur}$`);\r\n      let matchMinusFirstInput = this.state.displayOps.match(regexMinusFirstInput);\r\n\r\n      let regexMinus = new RegExp(` - ${this.state.displayCur}$`);\r\n      let matchMinus = this.state.displayOps.match(regexMinus);\r\n\r\n      let regexPlus = new RegExp(`${this.state.displayCur}$`);\r\n      let matchPlus = this.state.displayOps.match(regexPlus);\r\n      let arr = [matchPlusMinus, matchMultMinus, matchDivideMinus, FirstInput, matchMinus, matchPlus];\r\n      let signArr = [\" + \", \" * \", \" / \", \"\", \" + \", \" - \"];\r\n\r\n      for (let i = 0; i < arr.length; i++) {\r\n        console.log(\"i\", i);\r\n        console.log(\"arr[i] !== null\", arr[i] !== null);\r\n        if (arr[i] !== null) {\r\n          displayOpsExpression = this.state.displayOps.slice(0, arr[i].index).concat(signArr[i]).concat(this.state.displayCur);\r\n          break;\r\n        }\r\n      }\r\n      // if (arr[0] !== null) {\r\n      //   displayOpsExpression = this.state.displayOps.slice(0, arr[0].index).concat(signArr[0]).concat(this.state.displayCur);\r\n      // } else if (arr[1] !== null) {\r\n      //   displayOpsExpression = this.state.displayOps.slice(0, arr[1].index).concat(signArr[1]).concat(this.state.displayCur);\r\n      // } else if (arr[2] !== null) {\r\n      //   displayOpsExpression = this.state.displayOps.slice(0, arr[2].index).concat(signArr[2]).concat(this.state.displayCur);\r\n      // } else if (arr[3] !== null) {\r\n      //   displayOpsExpression = this.state.displayOps.slice(0, arr[3].index).concat(signArr[3]).concat(this.state.displayCur);\r\n      // } else if (arr[4] !== null) {\r\n      //   displayOpsExpression = this.state.displayOps.slice(0, arr[4].index).concat(signArr[4]).concat(this.state.displayCur);\r\n      // }\r\n\r\n      this.setState((state) => ({\r\n        displayOps: displayOpsExpression,\r\n        // displayCur: state.displayCur * -1,\r\n      }));\r\n    }\r\n  }\r\n\r\n  handleAbs() {\r\n    this.setState((state) => ({\r\n      displayCur: Math.abs(state.displayCur),\r\n    }));\r\n  }\r\n\r\n  handleSwitchToDenominator() {\r\n    this.setState((state) => ({\r\n      displayCur: 1 / state.displayCur,\r\n    }));\r\n  }\r\n\r\n  handleModulo(e) {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.lastResult === \"\" ? (state.lastInput === \")\" ? state.displayOps.concat(e.target.value) : state.displayOps.concat(e.target.value)) : \"\".concat(state.lastResult).concat(e.target.value),\r\n          displayCur: e.target.value,\r\n          lastInput: e.target.value,\r\n          lastInputType: \"operator\",\r\n          twoConsecutiveOperators: false,\r\n          decimalAlreadyUsed: false,\r\n          lastResult: \"\",\r\n        }),\r\n        () => {\r\n          console.log(\"inside modulo after setState:  displayOps\", this.state.displayOps);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleLeftParenthesis(e) {\r\n    if (this.state.lastInputType !== \"digit\" && this.state.lastInput !== \")\") {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(e.target.value),\r\n          displayCur: e.target.value,\r\n          lastInput: \"(\",\r\n          lastInputType: \"parenthesis\",\r\n          parenthesesDelta: state.parenthesesDelta + 1,\r\n          twoConsecutiveOperators: false,\r\n        }),\r\n        () => {\r\n          console.log(\"inside leftParenthesis after setState:  displayOps\", this.state.displayOps);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  handleRightParenthesis(e) {\r\n    if (this.state.parenthesesDelta > 0) {\r\n      if (this.state.lastInputType === \"digit\") {\r\n        this.setState(\r\n          (state) => ({\r\n            displayOps: state.lastInput === \")\" ? state.displayOps.concat(e.target.value) : state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(e.target.value),\r\n            displayCur: e.target.value,\r\n            lastInput: \")\",\r\n            lastInputType: \"parenthesis\",\r\n            parenthesesDelta: state.parenthesesDelta - 1,\r\n            twoConsecutiveOperators: false,\r\n          }),\r\n          () => {\r\n            console.log(\"inside rightParenthesis after setState:  displayOps\", this.state.displayOps);\r\n            saveState(this.state);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEquals() {\r\n    if (this.state.lastResult === \"\") {\r\n      console.log(\"check parenthesis after adding missing\", this.state.displayOps);\r\n\r\n      deleteRedundantOperators(this.state);\r\n      let result = calculate(displayOpsExpression);\r\n      // let result = calculate(\"3 * (25 - 21) + 8\");\r\n      this.setState(\r\n        {\r\n          displayOps: displayOpsExpression.concat(\" = \").concat(result),\r\n          displayCur: result,\r\n          lastInput: \"\",\r\n          lastInputType: \"\",\r\n          twoConsecutiveOperators: false,\r\n          decimalAlreadyUsed: false,\r\n          lastResult: result,\r\n          parenthesesDelta: 0,\r\n        },\r\n        () => {\r\n          saveState(this.state);\r\n          console.log(\"Inside handleEquals: final result\", result);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCopyToClipboard() {\r\n    let copyResult = document.getElementById(\"display\").innerText;\r\n    navigator.clipboard.writeText(copyResult);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Display ops={this.state.displayOps} cur={this.state.displayCur} />\r\n        <Buttons\r\n          clear={this.handleClear}\r\n          operator={this.handleOperator}\r\n          digit={this.handleDigit}\r\n          equals={this.handleEquals}\r\n          decimal={this.handleDecimal}\r\n          exponentiation={this.handleExponentiation}\r\n          root={this.handleRoot}\r\n          square={this.handleSquare}\r\n          squareRoot={this.handleSquareRoot}\r\n          previousState={this.handlePreviousState}\r\n          specialDigit={this.handleSpecialDigit}\r\n          log10={this.handleLog10}\r\n          log={this.handleLog}\r\n          logE={this.handleLogE}\r\n          factorial={this.handleFactorial}\r\n          trigonometry={this.handleTrigonometry}\r\n          percentage={this.handlePercentage}\r\n          copyToClipboard={this.handleCopyToClipboard}\r\n          changeSign={this.handleChangeSign}\r\n          abs={this.handleAbs}\r\n          switchToDenominator={this.handleSwitchToDenominator}\r\n          modulo={this.handleModulo}\r\n          leftParenthesis={this.handleLeftParenthesis}\r\n          rightParenthesis={this.handleRightParenthesis}\r\n        />\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Display extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"displayBox\">\r\n          <div id=\"displayOps\">{this.props.ops}</div>\r\n          <div id=\"display\">{this.props.cur}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Buttons extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <button id=\"clear\" onClick={this.props.clear}>\r\n          AC\r\n        </button>\r\n        <button id=\"add\" value=\" + \" onClick={this.props.operator}>\r\n          +\r\n        </button>\r\n        <button id=\"seven\" value=\"7\" onClick={this.props.digit}>\r\n          7\r\n        </button>\r\n        <button id=\"eight\" value=\"8\" onClick={this.props.digit}>\r\n          8\r\n        </button>\r\n        <button id=\"nine\" value=\"9\" onClick={this.props.digit}>\r\n          9\r\n        </button>\r\n        <button id=\"subtract\" value=\" - \" onClick={this.props.operator}>\r\n          -\r\n        </button>\r\n        <button id=\"four\" value=\"4\" onClick={this.props.digit}>\r\n          4\r\n        </button>\r\n        <button id=\"five\" value=\"5\" onClick={this.props.digit}>\r\n          5\r\n        </button>\r\n        <button id=\"six\" value=\"6\" onClick={this.props.digit}>\r\n          6\r\n        </button>\r\n        <button id=\"multiply\" value=\" * \" onClick={this.props.operator}>\r\n          x\r\n        </button>\r\n        <button id=\"one\" value=\"1\" onClick={this.props.digit}>\r\n          1\r\n        </button>\r\n        <button id=\"two\" value=\"2\" onClick={this.props.digit}>\r\n          2\r\n        </button>\r\n        <button id=\"three\" value=\"3\" onClick={this.props.digit}>\r\n          3\r\n        </button>\r\n        <button id=\"divide\" value=\" / \" onClick={this.props.operator}>\r\n          /\r\n        </button>\r\n        <button id=\"zero\" value=\"0\" onClick={this.props.digit}>\r\n          0\r\n        </button>\r\n        <button id=\"decimal\" onClick={this.props.decimal}>\r\n          .\r\n        </button>\r\n        <button id=\"equals\" onClick={this.props.equals}>\r\n          =\r\n        </button>\r\n        <button id=\"square\" value=\"S\" onClick={this.props.square}>\r\n          S\r\n        </button>\r\n        <button id=\"squareRoot\" value=\"R\" onClick={this.props.squareRoot}>\r\n          R\r\n        </button>\r\n        <button id=\"exponentiation\" value=\" ^ \" onClick={this.props.operator}>\r\n          ^\r\n        </button>\r\n        <button id=\"anyRoot\" value=\" yroot \" onClick={this.props.operator}>\r\n          root\r\n        </button>\r\n        <button id=\"pi\" value={Math.PI} onClick={this.props.specialDigit}>\r\n          Pi\r\n        </button>\r\n        <button id=\"e\" value={Math.E} onClick={this.props.specialDigit}>\r\n          e\r\n        </button>\r\n        <button id=\"random\" value={Math.random()} onClick={this.props.specialDigit}>\r\n          rand\r\n        </button>\r\n        <button id=\"delete\" onClick={this.props.previousState}>\r\n          del\r\n        </button>\r\n        <button id=\"log10\" onClick={this.props.log10}>\r\n          log10\r\n        </button>\r\n        <button id=\"log\" value=\" log base \" onClick={this.props.log}>\r\n          log\r\n        </button>\r\n        <button id=\"logE\" onClick={this.props.logE}>\r\n          logE\r\n        </button>\r\n        <button id=\"factorial\" onClick={this.props.factorial}>\r\n          !\r\n        </button>\r\n        <button id=\"cos\" value=\"cos\" onClick={this.props.trigonometry}>\r\n          cos\r\n        </button>\r\n        <button id=\"sin\" value=\"sin\" onClick={this.props.trigonometry}>\r\n          sin\r\n        </button>\r\n        <button id=\"tan\" value=\"tan\" onClick={this.props.trigonometry}>\r\n          tan\r\n        </button>\r\n        <button id=\"cot\" value=\"cot\" onClick={this.props.trigonometry}>\r\n          cot\r\n        </button>\r\n        <button id=\"sec\" value=\"sec\" onClick={this.props.trigonometry}>\r\n          sec\r\n        </button>\r\n        <button id=\"csc\" value=\"csc\" onClick={this.props.trigonometry}>\r\n          csc\r\n        </button>\r\n        <button id=\"percentage\" onClick={this.props.percentage}>\r\n          %\r\n        </button>\r\n        <button id=\"copy\" onClick={this.props.copyToClipboard}>\r\n          Copy\r\n        </button>\r\n        <button id=\"sign\" onClick={this.props.changeSign}>\r\n          +/-\r\n        </button>\r\n        <button id=\"abs\" onClick={this.props.abs}>\r\n          abs\r\n        </button>\r\n        <button id=\"denominator\" onClick={this.props.switchToDenominator}>\r\n          1/x\r\n        </button>\r\n        <button id=\"modulo\" value=\" mod \" onClick={this.props.modulo}>\r\n          mod\r\n        </button>\r\n        <button id=\"leftParenthesis\" value=\"(\" onClick={this.props.leftParenthesis}>\r\n          (\r\n        </button>\r\n        <button id=\"rightParenthesis\" value=\")\" onClick={this.props.rightParenthesis}>\r\n          )\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <div id=\"footer\">This project was build using: HTML, CSS, JavaScript, React, Redux, jQuery, Bootstrap and SASS without using eval() function</div>\r\n    </footer>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}