{"ast":null,"code":"export function abs(state) {\n  let displayAllExpression = \"\";\n  let displayAll = state.displayAll;\n  if (state.lastResult !== \"\") displayAll = \"\".concat(state.lastResult);\n  if (state.displayAll.match(/\\)\\)$/) && (state.lastOperator === \"trigonometry\" || state.lastOperator === \"abs\")) {\n    console.log(\"abs stage 0.5\");\n    let displayAllLength = state.displayAll.length;\n    let closingNum = 1;\n    let openingNum = 0;\n    let firstOpeningIndex = 0;\n    for (let i = displayAllLength - 2; i >= 0; i--) {\n      if (state.displayAll[i] === \")\") closingNum++;\n      if (state.displayAll[i] === \"(\") openingNum++;\n      if (closingNum === openingNum) {\n        firstOpeningIndex = i - 3;\n        console.log(\"clos, open, firstOp\", closingNum, openingNum, firstOpeningIndex);\n        break;\n      }\n    }\n    displayAllExpression = state.displayAll.slice(0, firstOpeningIndex).concat(`abs(${state.displayAll.slice(firstOpeningIndex)})`);\n    return displayAllExpression;\n  } else if (state.displayAll.match(/\\)\\)$/) && (state.lastOperator !== \"trigonometry\" || state.lastOperator !== \"abs\")) {\n    console.log(\"abs stage 0.7\");\n    let displayAllLength = state.displayAll.length;\n    let closingNum = 1;\n    let openingNum = 0;\n    let firstOpeningIndex = 0;\n    for (let i = displayAllLength - 2; i >= 0; i--) {\n      if (state.displayAll[i] === \")\") closingNum++;\n      if (state.displayAll[i] === \"(\") openingNum++;\n      if (closingNum === openingNum) {\n        firstOpeningIndex = i;\n        console.log(\"clos, open, firstOp\", closingNum, openingNum, firstOpeningIndex);\n        break;\n      }\n    }\n    displayAllExpression = state.displayAll.slice(0, firstOpeningIndex).concat(`abs(${state.displayAll.slice(firstOpeningIndex)})`);\n    return displayAllExpression;\n  } else if (state.lastOperator === \"trigonometry\" || state.lastOperator === \"abs\") {\n    console.log(\"abs stage 2\");\n    let matchTrigonometry = state.displayAll.match(/sin|cos|tan|cot|sec|csc|abs/gi);\n    let lastTrigonometryIndex = state.displayAll.lastIndexOf(matchTrigonometry[matchTrigonometry.length - 1]);\n    displayAllExpression = state.displayAll.slice(0, lastTrigonometryIndex).concat(`abs(${state.displayAll.slice(lastTrigonometryIndex)})`);\n    return displayAllExpression;\n  } else if (state.lastInput === \")\") {\n    console.log(\"abs stage 3\");\n    let displayAllLength = displayAll.length;\n    let closingNum = 1;\n    let openingNum = 0;\n    let firstOpeningIndex = 0;\n    for (let i = displayAllLength - 2; i >= 0; i--) {\n      if (displayAll[i] === \")\") closingNum++;\n      if (displayAll[i] === \"(\") openingNum++;\n      if (closingNum === openingNum) {\n        firstOpeningIndex = i;\n        break;\n      }\n    }\n    displayAllExpression = displayAll.slice(0, firstOpeningIndex).concat(`abs(${displayAll.slice(firstOpeningIndex)})`);\n    console.log(\"you are here amigo\", displayAllExpression, closingNum, openingNum, firstOpeningIndex);\n    return displayAllExpression;\n  } else if (state.lastInputType === \"digit\") {\n    console.log(\"abs stage 4\");\n    if (displayAll.match(/[ \\* | \\/ | \\+ | - ] - \\d+\\.\\d+$|[ \\* | \\/ | \\+ | - ] - \\d+$/)) {\n      console.log(\"abs stage 4.1\");\n      let lastNegativeNum = displayAll.match(/ - \\d+\\.\\d+$| - \\d+$/);\n      displayAllExpression = displayAll.slice(0, lastNegativeNum.index).concat(`abs(${lastNegativeNum})`);\n      console.log(\"lastNegativeNumIndex\", lastNegativeNum, \"displayAllExpression\", displayAllExpression);\n      return displayAllExpression;\n    } else if (displayAll.match(/\\( - \\d+\\.\\d+$|\\( - \\d+$/)) {\n      console.log(\"abs stage 4.15\");\n      let lastNegativeNum = displayAll.match(/\\( - \\d+\\.\\d+$|\\( - \\d+$/);\n      displayAllExpression = displayAll.slice(0, lastNegativeNum.index + 1).concat(`abs${lastNegativeNum})`);\n      console.log(\"lastNegativeNum.index\", lastNegativeNum.index, \"displayAllExpression\", displayAllExpression);\n      return displayAllExpression;\n    } else if (displayAll.match(/- \\d+\\.\\d+$| - \\d+$/)) {\n      console.log(\"abs stage 4.2\");\n      let lastNegativeNum = displayAll.match(/ - \\d+\\.\\d+$| - \\d+$/);\n      displayAllExpression = lastNegativeNum.index !== 0 ? displayAll.slice(0, lastNegativeNum.index).concat(\" + \").concat(`abs(${lastNegativeNum})`) : displayAll.slice(0, lastNegativeNum.index).concat(`abs(${lastNegativeNum})`);\n      console.log(\"lastNegativeNum.index\", lastNegativeNum.index, \"displayAllExpression\", displayAllExpression);\n      return displayAllExpression;\n    } else {\n      console.log(\"abs stage 4.3\");\n      let regexNum = new RegExp(`${state.displayCur}$`);\n      let lastNumIndex = displayAll.match(regexNum).index;\n      displayAllExpression = displayAll.slice(0, lastNumIndex).concat(`abs(${state.displayCur})`);\n      return displayAllExpression;\n    }\n  } else if (state.lastInput === \"!\" || state.lastInputType === \"%\") {\n    console.log(\"abs stage 5\");\n    let regexNum = new RegExp(/-\\d+\\.\\d+!%$|\\d+\\.\\d+!%$|-\\d+!%$|\\d+!%$|-\\d+\\.\\d+%!$|\\d+\\.\\d+%!$|-\\d+%!$|\\d+%!$|-\\d+\\.\\d+!$|\\d+\\.\\d+!$|-\\d+!$|\\d+!$|-\\d+\\.\\d+%$|\\d+\\.\\d+%$|-\\d+%$|\\d+%$/);\n    let lastNum = displayAll.match(regexNum);\n    displayAllExpression = displayAll.slice(0, lastNum.index).concat(`abs(${lastNum})`);\n    return displayAllExpression;\n  }\n}","map":{"version":3,"names":["abs","state","displayAllExpression","displayAll","lastResult","concat","match","lastOperator","console","log","displayAllLength","length","closingNum","openingNum","firstOpeningIndex","i","slice","matchTrigonometry","lastTrigonometryIndex","lastIndexOf","lastInput","lastInputType","lastNegativeNum","index","regexNum","RegExp","displayCur","lastNumIndex","lastNum"],"sources":["C:/Users/agsaf/Documents/GitHub/calculator/src/functions/abs.js"],"sourcesContent":["export function abs(state) {\r\n  let displayAllExpression = \"\";\r\n  let displayAll = state.displayAll;\r\n  if (state.lastResult !== \"\") displayAll = \"\".concat(state.lastResult);\r\n  if (state.displayAll.match(/\\)\\)$/) && (state.lastOperator === \"trigonometry\" || state.lastOperator === \"abs\")) {\r\n    console.log(\"abs stage 0.5\");\r\n    let displayAllLength = state.displayAll.length;\r\n    let closingNum = 1;\r\n    let openingNum = 0;\r\n    let firstOpeningIndex = 0;\r\n    for (let i = displayAllLength - 2; i >= 0; i--) {\r\n      if (state.displayAll[i] === \")\") closingNum++;\r\n      if (state.displayAll[i] === \"(\") openingNum++;\r\n      if (closingNum === openingNum) {\r\n        firstOpeningIndex = i - 3;\r\n        console.log(\"clos, open, firstOp\", closingNum, openingNum, firstOpeningIndex);\r\n        break;\r\n      }\r\n    }\r\n    displayAllExpression = state.displayAll.slice(0, firstOpeningIndex).concat(`abs(${state.displayAll.slice(firstOpeningIndex)})`);\r\n    return displayAllExpression;\r\n  } else if (state.displayAll.match(/\\)\\)$/) && (state.lastOperator !== \"trigonometry\" || state.lastOperator !== \"abs\")) {\r\n    console.log(\"abs stage 0.7\");\r\n    let displayAllLength = state.displayAll.length;\r\n    let closingNum = 1;\r\n    let openingNum = 0;\r\n    let firstOpeningIndex = 0;\r\n    for (let i = displayAllLength - 2; i >= 0; i--) {\r\n      if (state.displayAll[i] === \")\") closingNum++;\r\n      if (state.displayAll[i] === \"(\") openingNum++;\r\n      if (closingNum === openingNum) {\r\n        firstOpeningIndex = i;\r\n        console.log(\"clos, open, firstOp\", closingNum, openingNum, firstOpeningIndex);\r\n        break;\r\n      }\r\n    }\r\n    displayAllExpression = state.displayAll.slice(0, firstOpeningIndex).concat(`abs(${state.displayAll.slice(firstOpeningIndex)})`);\r\n    return displayAllExpression;\r\n  } else if (state.lastOperator === \"trigonometry\" || state.lastOperator === \"abs\") {\r\n    console.log(\"abs stage 2\");\r\n    let matchTrigonometry = state.displayAll.match(/sin|cos|tan|cot|sec|csc|abs/gi);\r\n    let lastTrigonometryIndex = state.displayAll.lastIndexOf(matchTrigonometry[matchTrigonometry.length - 1]);\r\n    displayAllExpression = state.displayAll.slice(0, lastTrigonometryIndex).concat(`abs(${state.displayAll.slice(lastTrigonometryIndex)})`);\r\n    return displayAllExpression;\r\n  } else if (state.lastInput === \")\") {\r\n    console.log(\"abs stage 3\");\r\n    let displayAllLength = displayAll.length;\r\n    let closingNum = 1;\r\n    let openingNum = 0;\r\n    let firstOpeningIndex = 0;\r\n    for (let i = displayAllLength - 2; i >= 0; i--) {\r\n      if (displayAll[i] === \")\") closingNum++;\r\n      if (displayAll[i] === \"(\") openingNum++;\r\n      if (closingNum === openingNum) {\r\n        firstOpeningIndex = i;\r\n        break;\r\n      }\r\n    }\r\n    displayAllExpression = displayAll.slice(0, firstOpeningIndex).concat(`abs(${displayAll.slice(firstOpeningIndex)})`);\r\n    console.log(\"you are here amigo\", displayAllExpression, closingNum, openingNum, firstOpeningIndex);\r\n    return displayAllExpression;\r\n  } else if (state.lastInputType === \"digit\") {\r\n    console.log(\"abs stage 4\");\r\n    if (displayAll.match(/[ \\* | \\/ | \\+ | - ] - \\d+\\.\\d+$|[ \\* | \\/ | \\+ | - ] - \\d+$/)) {\r\n      console.log(\"abs stage 4.1\");\r\n      let lastNegativeNum = displayAll.match(/ - \\d+\\.\\d+$| - \\d+$/);\r\n      displayAllExpression = displayAll.slice(0, lastNegativeNum.index).concat(`abs(${lastNegativeNum})`);\r\n      console.log(\"lastNegativeNumIndex\", lastNegativeNum, \"displayAllExpression\", displayAllExpression);\r\n      return displayAllExpression;\r\n    } else if (displayAll.match(/\\( - \\d+\\.\\d+$|\\( - \\d+$/)) {\r\n      console.log(\"abs stage 4.15\");\r\n      let lastNegativeNum = displayAll.match(/\\( - \\d+\\.\\d+$|\\( - \\d+$/);\r\n      displayAllExpression = displayAll.slice(0, lastNegativeNum.index + 1).concat(`abs${lastNegativeNum})`);\r\n      console.log(\"lastNegativeNum.index\", lastNegativeNum.index, \"displayAllExpression\", displayAllExpression);\r\n      return displayAllExpression;\r\n    } else if (displayAll.match(/- \\d+\\.\\d+$| - \\d+$/)) {\r\n      console.log(\"abs stage 4.2\");\r\n      let lastNegativeNum = displayAll.match(/ - \\d+\\.\\d+$| - \\d+$/);\r\n      displayAllExpression = lastNegativeNum.index !== 0 ? displayAll.slice(0, lastNegativeNum.index).concat(\" + \").concat(`abs(${lastNegativeNum})`) : displayAll.slice(0, lastNegativeNum.index).concat(`abs(${lastNegativeNum})`);\r\n      console.log(\"lastNegativeNum.index\", lastNegativeNum.index, \"displayAllExpression\", displayAllExpression);\r\n      return displayAllExpression;\r\n    } else {\r\n      console.log(\"abs stage 4.3\");\r\n      let regexNum = new RegExp(`${state.displayCur}$`);\r\n      let lastNumIndex = displayAll.match(regexNum).index;\r\n      displayAllExpression = displayAll.slice(0, lastNumIndex).concat(`abs(${state.displayCur})`);\r\n      return displayAllExpression;\r\n    }\r\n  } else if (state.lastInput === \"!\" || state.lastInputType === \"%\") {\r\n    console.log(\"abs stage 5\");\r\n    let regexNum = new RegExp(/-\\d+\\.\\d+!%$|\\d+\\.\\d+!%$|-\\d+!%$|\\d+!%$|-\\d+\\.\\d+%!$|\\d+\\.\\d+%!$|-\\d+%!$|\\d+%!$|-\\d+\\.\\d+!$|\\d+\\.\\d+!$|-\\d+!$|\\d+!$|-\\d+\\.\\d+%$|\\d+\\.\\d+%$|-\\d+%$|\\d+%$/);\r\n    let lastNum = displayAll.match(regexNum);\r\n    displayAllExpression = displayAll.slice(0, lastNum.index).concat(`abs(${lastNum})`);\r\n    return displayAllExpression;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}