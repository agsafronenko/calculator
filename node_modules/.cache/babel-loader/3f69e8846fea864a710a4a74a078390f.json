{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agsaf\\\\Documents\\\\GitHub\\\\calculator\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./styles/styles.css\";\nimport $ from \"jquery\";\nimport calculate, { deleteRedundantOperators, displayOpsExpression, lastLegitSymbol, saveState, stateStorage, factorial, trigonometryInDegrees, changeSign } from \"./functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayOps: \"\",\n      displayCur: \"0\",\n      lastInput: \"\",\n      lastInputType: \"\",\n      decimalAlreadyUsed: false,\n      twoConsecutiveOperators: false,\n      lastResult: \"\",\n      parenthesesDelta: 0,\n      lastOperator: \"\"\n    };\n    this.handleClear = this.handleClear.bind(this);\n    this.handleOperator = this.handleOperator.bind(this);\n    this.handleDigit = this.handleDigit.bind(this);\n    this.handleEquals = this.handleEquals.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handleExponentiation = this.handleExponentiation.bind(this);\n    this.handleSquareRoot = this.handleSquareRoot.bind(this);\n    this.handleSquare = this.handleSquare.bind(this);\n    this.handleRoot = this.handleRoot.bind(this);\n    this.handlePreviousState = this.handlePreviousState.bind(this);\n    this.handleSpecialDigit = this.handleSpecialDigit.bind(this);\n    this.handleLog10 = this.handleLog10.bind(this);\n    this.handleLog = this.handleLog.bind(this);\n    this.handleLogE = this.handleLogE.bind(this);\n    this.handleFactorial = this.handleFactorial.bind(this);\n    this.handleTrigonometry = this.handleTrigonometry.bind(this);\n    this.handlePercentage = this.handlePercentage.bind(this);\n    this.handleCopyToClipboard = this.handleCopyToClipboard.bind(this);\n    this.handleChangeSign = this.handleChangeSign.bind(this);\n    this.handleAbs = this.handleAbs.bind(this);\n    this.handleSwitchToDenominator = this.handleSwitchToDenominator.bind(this);\n    this.handleModulo = this.handleModulo.bind(this);\n    this.handleLeftParenthesis = this.handleLeftParenthesis.bind(this);\n    this.handleRightParenthesis = this.handleRightParenthesis.bind(this);\n  }\n  handleClear() {\n    stateStorage.prevState = [];\n    this.setState({\n      displayOps: \"\",\n      displayCur: \"0\",\n      lastInput: \"\",\n      lastInputType: \"\",\n      decimalAlreadyUsed: false,\n      twoConsecutiveOperators: false,\n      lastResult: \"\",\n      parenthesesDelta: 0,\n      lastOperator: \"\"\n    });\n  }\n  handlePreviousState() {\n    if (stateStorage.prevState.length <= 1) {\n      this.handleClear();\n    } else {\n      stateStorage.prevState.shift();\n      this.setState({\n        displayOps: stateStorage.prevState[0].displayOps,\n        displayCur: stateStorage.prevState[0].displayCur,\n        lastInput: stateStorage.prevState[0].lastInput,\n        lastInputType: stateStorage.prevState[0].lastInputType,\n        decimalAlreadyUsed: stateStorage.prevState[0].decimalAlreadyUsed,\n        twoConsecutiveOperators: stateStorage.prevState[0].twoConsecutiveOperators,\n        lastResult: stateStorage.prevState[0].lastResult,\n        lastOperator: stateStorage.prevState[0].lastOperator\n      });\n    }\n  }\n  handleOperator(e) {\n    // only solo \" - \" is allowed as the first input among all operators\n    if (this.state.displayOps !== \"\" || e.target.value === \" - \") {\n      if (this.state.displayOps !== \" - \") {\n        // used to compare last two states and, in case of their equality, the stateStorage will not be updated\n        let penultimateInput = this.state.lastInput;\n\n        // handle consecutive input of multiple operators\n        if (this.state.twoConsecutiveOperators === true) {\n          this.setState(state => ({\n            displayOps: state.displayOps.slice(0, state.displayOps.length - lastLegitSymbol(state.displayOps)).concat(e.target.value),\n            displayCur: e.target.value,\n            lastInput: e.target.value,\n            lastInputType: \"operator\",\n            twoConsecutiveOperators: false,\n            lastOperator: e.target.value\n          }), () => {\n            console.log(\"handleOperator stage 1 : this.state.displayOps\", this.state.displayOps);\n            if (e.target.value === \" - \" || e.target.value !== penultimateInput) saveState(this.state);\n          });\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value !== \" - \") {\n          if (this.state.displayOps.slice(this.state.displayOps.length - 4) !== \"( - \") {\n            this.setState(state => ({\n              displayOps: state.displayOps.slice(0, state.displayOps.length - lastLegitSymbol(state.displayOps)).concat(e.target.value),\n              displayCur: e.target.value,\n              lastInput: e.target.value,\n              lastInputType: \"operator\",\n              twoConsecutiveOperators: false,\n              lastOperator: e.target.value\n            }), () => {\n              console.log(\"handleOperator stage 2 : this.state.displayOps\", this.state.displayOps);\n              console.log(\"heyyyyy\", e.target.value, this.state.lastInput);\n              if (e.target.value !== penultimateInput) saveState(this.state);\n            });\n          }\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInput === \" log base \" && e.target.value === \" - \") {\n          this.setState(state => ({\n            // displayOps: state.displayOps.slice(0, state.displayOps.length - lastLegitSymbol(state.displayOps)).concat(e.target.value),\n            // displayCur: e.target.value,\n            // lastInput: e.target.value,\n            // lastInputType: \"operator\",\n            // twoConsecutiveOperators: false,\n          }), () => {\n            console.log(\"handleOperator stage 2.5 : this.state.displayOps\", this.state.displayOps);\n            console.log(\"heyyyyy\", e.target.value, this.state.lastInput);\n            // if (e.target.value !== penultimateInput) saveState(this.state);\n          });\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value === \" - \") {\n          console.log(\"hola\", this.state.displayOps.slice(this.state.displayOps.length - 4));\n          if (this.state.displayOps.slice(this.state.displayOps.length - 4) !== \"( - \") {\n            this.setState(state => ({\n              displayOps: state.displayOps.concat(e.target.value),\n              displayCur: e.target.value,\n              lastInput: e.target.value,\n              lastInputType: \"operator\",\n              twoConsecutiveOperators: true,\n              lastOperator: e.target.value\n            }), () => {\n              console.log(\"handleOperator stage 3: this.state.displayOps\", this.state.displayOps);\n              saveState(this.state);\n            });\n          }\n        }\n        if (this.state.lastInput === \"(\") {\n          this.setState(state => ({\n            displayOps: e.target.value === \" - \" ? state.displayOps.concat(e.target.value) : state.displayOps,\n            displayCur: e.target.value === \" - \" ? e.target.value : state.displayCur,\n            lastInput: e.target.value === \" - \" ? e.target.value : state.lastInput,\n            lastInputType: e.target.value === \" - \" ? \"operator\" : state.lastInputType,\n            lastOperator: e.target.value === \" - \" ? e.target.value : state.lastOperator\n          }), () => {\n            console.log(\"handleOperator stage 4: this.state.displayOps\", this.state.displayOps);\n          });\n        } else if (this.state.lastInput === \")\") {\n          this.setState(state => ({\n            displayOps: state.displayOps.concat(e.target.value),\n            displayCur: e.target.value,\n            lastInput: e.target.value,\n            lastInputType: \"operator\",\n            twoConsecutiveOperators: false,\n            decimalAlreadyUsed: false,\n            lastResult: \"\",\n            lastOperator: e.target.value\n          }), () => {\n            console.log(\"handleOperator stage 5: this.state.displayOps\", this.state.displayOps);\n            saveState(this.state);\n          });\n        }\n        if (this.state.lastInputType !== \"parenthesis\" && this.state.lastInputType !== \"operator\") {\n          this.setState(state => ({\n            displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n            displayCur: e.target.value,\n            lastInput: e.target.value,\n            lastInputType: \"operator\",\n            twoConsecutiveOperators: false,\n            decimalAlreadyUsed: false,\n            lastResult: \"\",\n            lastOperator: e.target.value\n          }), () => {\n            console.log(\"handleOperator stage 6: this.state.displayOps\", this.state.displayOps);\n            saveState(this.state);\n          });\n        }\n      }\n    }\n  }\n  handleDigit(e) {\n    if (this.state.lastResult !== \"\") this.handleClear();\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\") {\n      this.setState(state => ({\n        displayOps: state.lastInputType === \"operator\" || state.lastInput === \"(\" ? state.displayOps.concat(e.target.value) : Number(state.displayCur) === 0 && state.displayCur.length === 1 || !isFinite(state.lastInput) && state.lastInput !== \".\" ? state.displayOps.slice(0, state.displayOps.length - 1).concat(e.target.value) : state.displayOps.concat(e.target.value),\n        displayCur: Number(state.displayCur) === 0 && state.displayCur.length === 1 || !isFinite(state.lastInput) && state.lastInput !== \".\" ? e.target.value : state.displayCur.concat(e.target.value),\n        lastInput: e.target.value,\n        lastInputType: \"digit\",\n        twoConsecutiveOperators: false\n      }), () => {\n        saveState(this.state);\n      });\n    }\n  }\n  handleSpecialDigit(e) {\n    if (this.state.lastResult !== \"\") this.handleClear();\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\" && this.state.decimalAlreadyUsed !== true) {\n      this.setState(state => ({\n        displayOps: state.lastInputType === \"operator\" || state.lastInput === \"(\" ? state.displayOps.concat(e.target.value) : Number(state.displayCur) === 0 && state.displayCur.length === 1 || !isFinite(state.lastInput) && state.lastInput !== \".\" ? state.displayOps.slice(0, state.displayOps.length - 1).concat(e.target.value) : state.displayOps.concat(e.target.value),\n        displayCur: e.target.value,\n        lastInput: e.target.value,\n        lastInputType: \"digit\",\n        twoConsecutiveOperators: false,\n        decimalAlreadyUsed: true\n      }), () => {\n        saveState(this.state);\n      });\n    }\n  }\n  handleDecimal() {\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\" && this.state.decimalAlreadyUsed !== true) {\n      this.setState(state => ({\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(isFinite(state.lastInput) && this.state.displayOps !== \"\" ? \".\" : \"0.\") : /\\./.test(state.lastResult) ? \"\".concat(\"0.\") : \"\".state.lastResult.concat(\".\"),\n        displayCur: state.lastResult === \"\" ? isFinite(state.lastInput) ? state.displayCur.concat(\".\") : \"0.\" : /\\./.test(state.lastResult) ? \"\".concat(\"0.\") : \"\".state.lastResult.concat(\".\"),\n        lastInput: \".\",\n        lastInputType: \"decimal\",\n        decimalAlreadyUsed: true,\n        twoConsecutiveOperators: false,\n        lastResult: \"\"\n      }), () => {\n        saveState(this.state);\n      });\n    }\n  }\n  handleSquare() {\n    this.setState(state => ({\n      displayOps: state.lastResult === \"\" ? state.displayOps.concat(\" ^ 2\") : \"\".concat(state.lastResult).concat(\" ^ 2\"),\n      displayCur: \"\",\n      lastInput: \"2\",\n      lastInputType: \"digit\",\n      twoConsecutiveOperators: false,\n      decimalAlreadyUsed: false,\n      lastResult: \"\",\n      lastOperator: \" ^ \"\n    }), () => {\n      console.log(\"inside handle ^2 after setState:  displayOps\", this.state.displayOps);\n      saveState(this.state);\n    });\n  }\n  handleSquareRoot() {\n    this.setState(state => ({\n      displayOps: state.lastResult === \"\" ? state.displayOps.concat(\" yroot 2\") : \"\".concat(state.lastResult).concat(\" yroot 2\"),\n      displayCur: \"\",\n      lastInput: \"2\",\n      lastInputType: \"digit\",\n      twoConsecutiveOperators: false,\n      decimalAlreadyUsed: false,\n      lastResult: \"\",\n      lastOperator: \" yroot \"\n    }), () => {\n      console.log(\"after displayOps\", this.state.displayOps);\n      saveState(this.state);\n    });\n  }\n  handleExponentiation(e) {\n    this.setState(state => ({\n      displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n      displayCur: e.target.value,\n      lastInput: e.target.value,\n      lastInputType: \"operator\",\n      twoConsecutiveOperators: false,\n      decimalAlreadyUsed: false,\n      lastResult: \"\",\n      lastOperator: \" ^ \"\n    }), () => {\n      console.log(\"inside handle ^ after setState:  displayOps\", this.state.displayOps);\n      saveState(this.state);\n    });\n  }\n  handleRoot(e) {\n    this.setState(state => ({\n      displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n      displayCur: e.target.value,\n      lastInput: e.target.value,\n      lastInputType: \"operator\",\n      twoConsecutiveOperators: false,\n      decimalAlreadyUsed: false,\n      lastResult: \"\",\n      lastOperator: \" yroot \"\n    }), () => {\n      console.log(\"after displayOps\", this.state.displayOps);\n      saveState(this.state);\n    });\n  }\n  handleLog(e) {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\n      console.log(\"inside handle log: displayOps\", this.state.displayOps);\n      this.setState(state => ({\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n        displayCur: e.target.value,\n        lastInput: e.target.value,\n        lastInputType: \"operator\",\n        twoConsecutiveOperators: false,\n        decimalAlreadyUsed: false,\n        lastResult: \"\",\n        lastOperator: \" log base \"\n      }), () => {\n        console.log(\"inside handle log after setState:  displayOps\", this.state.displayOps);\n        saveState(this.state);\n      });\n    }\n  }\n  handleLog10() {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\n      console.log(\"inside handle log10: displayOps\", this.state.displayOps);\n      this.setState(state => ({\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(\" log base 10\") : \"\".concat(state.lastResult).concat(\" log base 10\"),\n        displayCur: \"\",\n        lastInput: \"10\",\n        lastInputType: \"digit\",\n        twoConsecutiveOperators: false,\n        decimalAlreadyUsed: false,\n        lastResult: \"\",\n        lastOperator: \" log base \"\n      }), () => {\n        console.log(\"inside handle log10 after setState:  displayOps\", this.state.displayOps);\n        saveState(this.state);\n      });\n    }\n  }\n  handleLogE() {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\n      console.log(\"inside handle log10: displayOps\", this.state.displayOps);\n      this.setState(state => ({\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(` log base ${Math.E}`) : \"\".concat(state.lastResult).concat(` log base ${Math.E}`),\n        displayCur: \"\",\n        lastInput: `${Math.E}`,\n        lastInputType: \"digit\",\n        twoConsecutiveOperators: false,\n        decimalAlreadyUsed: false,\n        lastResult: \"\",\n        lastOperator: \" log base \"\n      }), () => {\n        console.log(\"inside handle log10 after setState:  displayOps\", this.state.displayOps);\n        saveState(this.state);\n      });\n    }\n  }\n  handleFactorial() {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\" || this.state.lastInput === \"%\") {\n      let factor = factorial(this.state.displayCur).toString();\n      console.log(\"factorial\", factor);\n      if (factor === \"invalid input\") {\n        this.handleClear();\n        factor === \"invalid input\";\n      }\n      this.setState(state => ({\n        displayOps: factor === \"invalid input\" ? \"invalid input\" : state.lastResult === \"\" ? state.displayOps.concat(\"!\") : \"\".concat(state.lastResult).concat(\"!\"),\n        displayCur: factor,\n        lastInput: \"!\",\n        lastInputType: \"!\",\n        twoConsecutiveOperators: false,\n        lastResult: \"\",\n        lastOperator: \" ! \"\n      }), () => {\n        console.log(\"inside handle factorial after setState:  displayOps\", this.state.displayOps);\n        saveState(this.state);\n      });\n    }\n  }\n  handleTrigonometry(e) {\n    console.log(\"inside trigonometry\", isFinite(this.state.displayCur));\n    if (this.state.displayOps !== \"\" && isFinite(this.state.displayCur) || this.state.lastInput === \")\") {\n      let result = trigonometryInDegrees(this.state.displayCur, e.target.value, this.state);\n      console.log(\"triginometry\", result);\n      // deleteRedundantDigits(this.state);\n      this.setState(state => ({\n        displayOps: state.lastResult === \"\" ? displayOpsExpression : \"\".concat(result),\n        displayOps: displayOpsExpression,\n        displayCur: result,\n        lastInput: \")\",\n        lastInputType: \"parenthesis\",\n        twoConsecutiveOperators: false,\n        lastOperator: \"trigonometry\",\n        lastResult: \"\"\n      }), () => {\n        console.log(\"inside trigonometry after setState:  displayOps\", this.state.displayOps);\n        saveState(this.state);\n      });\n    }\n  }\n  handlePercentage() {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\" || this.state.lastInput === \"!\") {\n      this.setState(state => ({\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(\"%\") : \"\".concat(state.lastResult).concat(\"%\"),\n        displayCur: state.lastInputType === \"digit\" ? state.displayCur / 100 : \"%\",\n        lastInput: \"%\",\n        lastInputType: \"%\",\n        twoConsecutiveOperators: false,\n        lastResult: \"\",\n        lastOperator: \" % \"\n      }), () => {\n        console.log(\"inside handle log10 after setState:  displayOps\", this.state.displayOps);\n        saveState(this.state);\n      });\n    }\n  }\n  handleChangeSign() {\n    if (this.state.lastResult === \"\") {\n      if (this.state.lastInputType === \"digit\" && this.state.displayCur !== 0 && this.state.displayCur !== \"\" && this.state.lastOperator !== \" log base \") {\n        let displayOpsExpression = \"\";\n        let regexArr = [\" \\\\-  - \", \" \\\\+  - \", \" \\\\*  - \", \" \\\\/  - \", \"^ - \", \"^-\", \" - \", \" \\\\+ \", \"\"];\n        let signArr = [\" - \", \" + \", \" * \", \" / \", \"\", \"\", \" + \", \" - \", \" - \"];\n        let arr = [];\n        for (let i = 0; i < regexArr.length; i++) {\n          console.log(\"i\", i, \"displayOps\", this.state.displayOps);\n          arr.push(this.state.displayOps.match(`${regexArr[i]}${Math.abs(this.state.displayCur)}$`));\n        }\n        for (let i = 0; i < arr.length; i++) {\n          if (arr[i] !== null) {\n            displayOpsExpression = this.state.displayOps.slice(0, arr[i].index).concat(signArr[i]).concat(Math.abs(this.state.displayCur));\n            break;\n          }\n        }\n        this.setState(state => ({\n          displayOps: state.lastResult === \"\" ? displayOpsExpression : \"\".concat(state.displayCur * -1),\n          displayCur: state.displayCur * -1,\n          lastInputType: \"digit\",\n          lastResult: \"\"\n        }));\n      } else if (this.state.lastInput === \")\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastOperator === \"trigonometry\") {\n        console.log(\"you are in special case of handleChangeSign\");\n        changeSign(this.state);\n        this.setState(state => ({\n          displayOps: displayOpsExpression,\n          displayCur: \"\",\n          lastInput: \")\",\n          lastInputType: \"parenthesis\",\n          twoConsecutiveOperators: false,\n          // lastOperator: \"trigonometry\",\n          lastResult: \"\"\n        }), () => {\n          console.log(\"inside special case of handleChangeSign after setState:  displayOps\", this.state.displayOps);\n          saveState(this.state);\n        });\n      }\n    } else {\n      this.setState(state => ({\n        displayOps: \"\".concat(state.lastResult),\n        lastResult: \"\"\n      }), () => this.handleChangeSign());\n    }\n  }\n  handleAbs() {\n    this.setState(state => ({\n      displayCur: Math.abs(state.displayCur)\n    }));\n  }\n  handleSwitchToDenominator() {\n    this.setState(state => ({\n      displayCur: 1 / state.displayCur\n    }));\n  }\n  handleModulo(e) {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\n      this.setState(state => ({\n        displayOps: state.lastResult === \"\" ? state.lastInput === \")\" ? state.displayOps.concat(e.target.value) : state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n        displayCur: e.target.value,\n        lastInput: e.target.value,\n        lastInputType: \"operator\",\n        twoConsecutiveOperators: false,\n        decimalAlreadyUsed: false,\n        lastResult: \"\",\n        lastOperator: \" mod \"\n      }), () => {\n        console.log(\"inside modulo after setState:  displayOps\", this.state.displayOps);\n        saveState(this.state);\n      });\n    }\n  }\n  handleLeftParenthesis(e) {\n    if (this.state.lastInputType !== \"digit\" && this.state.lastInput !== \")\") {\n      this.setState(state => ({\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(e.target.value),\n        displayCur: e.target.value,\n        lastInput: \"(\",\n        lastInputType: \"parenthesis\",\n        parenthesesDelta: state.parenthesesDelta + 1,\n        twoConsecutiveOperators: false,\n        lastOperator: \"(\"\n      }), () => {\n        console.log(\"inside leftParenthesis after setState:  displayOps\", this.state.displayOps);\n        saveState(this.state);\n      });\n    }\n  }\n  handleRightParenthesis(e) {\n    console.log(\"this.state.parthersesDelta\", this.state.parenthesesDelta);\n    if (this.state.parenthesesDelta > 0) {\n      if (this.state.lastInputType === \"digit\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastInput === \")\") {\n        this.setState(state => ({\n          displayOps: state.lastInput === \")\" ? state.displayOps.concat(e.target.value) : state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(e.target.value),\n          displayCur: e.target.value,\n          lastInput: \")\",\n          lastInputType: \"parenthesis\",\n          parenthesesDelta: state.parenthesesDelta - 1,\n          twoConsecutiveOperators: false,\n          lastOperator: \")\"\n        }), () => {\n          console.log(\"inside rightParenthesis after setState:  displayOps\", this.state.displayOps);\n          saveState(this.state);\n        });\n      }\n    }\n  }\n  handleEquals() {\n    if (this.state.lastResult === \"\") {\n      console.log(\"check parenthesis after adding missing\", this.state.displayOps);\n      deleteRedundantOperators(this.state);\n      let result = calculate(displayOpsExpression);\n      // let result = calculate(\"3 * (25 - 21) + 8\");\n      this.setState({\n        displayOps: displayOpsExpression.concat(\" = \").concat(result),\n        displayCur: result,\n        lastInput: \"\",\n        lastInputType: \"digit\",\n        twoConsecutiveOperators: false,\n        decimalAlreadyUsed: false,\n        lastResult: result,\n        parenthesesDelta: 0,\n        lastOperator: \"equal\"\n      }, () => {\n        saveState(this.state);\n        console.log(\"Inside handleEquals: final result\", result);\n      });\n    }\n  }\n  handleCopyToClipboard() {\n    let copyResult = document.getElementById(\"display\").innerText;\n    navigator.clipboard.writeText(copyResult);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        ops: this.state.displayOps,\n        cur: this.state.displayCur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        clear: this.handleClear,\n        operator: this.handleOperator,\n        digit: this.handleDigit,\n        equals: this.handleEquals,\n        decimal: this.handleDecimal,\n        exponentiation: this.handleExponentiation,\n        root: this.handleRoot,\n        square: this.handleSquare,\n        squareRoot: this.handleSquareRoot,\n        previousState: this.handlePreviousState,\n        specialDigit: this.handleSpecialDigit,\n        log10: this.handleLog10,\n        log: this.handleLog,\n        logE: this.handleLogE,\n        factorial: this.handleFactorial,\n        trigonometry: this.handleTrigonometry,\n        percentage: this.handlePercentage,\n        copyToClipboard: this.handleCopyToClipboard,\n        changeSign: this.handleChangeSign,\n        abs: this.handleAbs,\n        switchToDenominator: this.handleSwitchToDenominator,\n        modulo: this.handleModulo,\n        leftParenthesis: this.handleLeftParenthesis,\n        rightParenthesis: this.handleRightParenthesis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"displayBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"displayOps\",\n          children: this.props.ops\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"display\",\n          children: this.props.cur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nclass Buttons extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"clear\",\n        onClick: this.props.clear,\n        children: \"AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"add\",\n        value: \" + \",\n        onClick: this.props.operator,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"seven\",\n        value: \"7\",\n        onClick: this.props.digit,\n        children: \"7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"eight\",\n        value: \"8\",\n        onClick: this.props.digit,\n        children: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"nine\",\n        value: \"9\",\n        onClick: this.props.digit,\n        children: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"subtract\",\n        value: \" - \",\n        onClick: this.props.operator,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"four\",\n        value: \"4\",\n        onClick: this.props.digit,\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"five\",\n        value: \"5\",\n        onClick: this.props.digit,\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"six\",\n        value: \"6\",\n        onClick: this.props.digit,\n        children: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"multiply\",\n        value: \" * \",\n        onClick: this.props.operator,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"one\",\n        value: \"1\",\n        onClick: this.props.digit,\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"two\",\n        value: \"2\",\n        onClick: this.props.digit,\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"three\",\n        value: \"3\",\n        onClick: this.props.digit,\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"divide\",\n        value: \" / \",\n        onClick: this.props.operator,\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"zero\",\n        value: \"0\",\n        onClick: this.props.digit,\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"decimal\",\n        onClick: this.props.decimal,\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"equals\",\n        onClick: this.props.equals,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"square\",\n        value: \"S\",\n        onClick: this.props.square,\n        children: \"S\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"squareRoot\",\n        value: \"R\",\n        onClick: this.props.squareRoot,\n        children: \"R\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"exponentiation\",\n        value: \" ^ \",\n        onClick: this.props.operator,\n        children: \"^\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"anyRoot\",\n        value: \" yroot \",\n        onClick: this.props.operator,\n        children: \"root\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"pi\",\n        value: Math.PI,\n        onClick: this.props.specialDigit,\n        children: \"Pi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"e\",\n        value: Math.E,\n        onClick: this.props.specialDigit,\n        children: \"e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"random\",\n        value: Math.random(),\n        onClick: this.props.specialDigit,\n        children: \"rand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"delete\",\n        onClick: this.props.previousState,\n        children: \"del\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"log10\",\n        onClick: this.props.log10,\n        children: \"log10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"log\",\n        value: \" log base \",\n        onClick: this.props.log,\n        children: \"log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"logE\",\n        onClick: this.props.logE,\n        children: \"logE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"factorial\",\n        onClick: this.props.factorial,\n        children: \"!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"sin\",\n        value: \"sin\",\n        onClick: this.props.trigonometry,\n        children: \"sin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"cos\",\n        value: \"cos\",\n        onClick: this.props.trigonometry,\n        children: \"cos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"tan\",\n        value: \"tan\",\n        onClick: this.props.trigonometry,\n        children: \"tan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"cot\",\n        value: \"cot\",\n        onClick: this.props.trigonometry,\n        children: \"cot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"sec\",\n        value: \"sec\",\n        onClick: this.props.trigonometry,\n        children: \"sec\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"csc\",\n        value: \"csc\",\n        onClick: this.props.trigonometry,\n        children: \"csc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"percentage\",\n        onClick: this.props.percentage,\n        children: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"copy\",\n        onClick: this.props.copyToClipboard,\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"sign\",\n        onClick: this.props.changeSign,\n        children: \"+/-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"abs\",\n        onClick: this.props.abs,\n        children: \"abs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"denominator\",\n        onClick: this.props.switchToDenominator,\n        children: \"1/x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"modulo\",\n        value: \" mod \",\n        onClick: this.props.modulo,\n        children: \"mod\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"leftParenthesis\",\n        value: \"(\",\n        onClick: this.props.leftParenthesis,\n        children: \"(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"rightParenthesis\",\n        value: \")\",\n        onClick: this.props.rightParenthesis,\n        children: \")\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"footer\",\n      children: \"This project was build using: HTML, CSS, JavaScript, React, Redux, jQuery, Bootstrap and SASS without using eval() function\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 847,\n    columnNumber: 5\n  }, this);\n}\n_c = Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["React","$","calculate","deleteRedundantOperators","displayOpsExpression","lastLegitSymbol","saveState","stateStorage","factorial","trigonometryInDegrees","changeSign","Calculator","Component","constructor","props","state","displayOps","displayCur","lastInput","lastInputType","decimalAlreadyUsed","twoConsecutiveOperators","lastResult","parenthesesDelta","lastOperator","handleClear","bind","handleOperator","handleDigit","handleEquals","handleDecimal","handleExponentiation","handleSquareRoot","handleSquare","handleRoot","handlePreviousState","handleSpecialDigit","handleLog10","handleLog","handleLogE","handleFactorial","handleTrigonometry","handlePercentage","handleCopyToClipboard","handleChangeSign","handleAbs","handleSwitchToDenominator","handleModulo","handleLeftParenthesis","handleRightParenthesis","prevState","setState","length","shift","e","target","value","penultimateInput","slice","concat","console","log","Number","isFinite","test","Math","E","factor","toString","result","regexArr","signArr","arr","i","push","match","abs","index","copyResult","document","getElementById","innerText","navigator","clipboard","writeText","render","Display","ops","cur","Buttons","clear","operator","digit","decimal","equals","square","squareRoot","PI","specialDigit","random","previousState","log10","logE","trigonometry","percentage","copyToClipboard","switchToDenominator","modulo","leftParenthesis","rightParenthesis","Footer"],"sources":["C:/Users/agsaf/Documents/GitHub/calculator/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./styles/styles.css\";\r\nimport $ from \"jquery\";\r\nimport calculate, { deleteRedundantOperators, displayOpsExpression, lastLegitSymbol, saveState, stateStorage, factorial, trigonometryInDegrees, changeSign } from \"./functions\";\r\n\r\nexport default class Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayOps: \"\",\r\n      displayCur: \"0\",\r\n      lastInput: \"\",\r\n      lastInputType: \"\",\r\n      decimalAlreadyUsed: false,\r\n      twoConsecutiveOperators: false,\r\n      lastResult: \"\",\r\n      parenthesesDelta: 0,\r\n      lastOperator: \"\",\r\n    };\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.handleOperator = this.handleOperator.bind(this);\r\n    this.handleDigit = this.handleDigit.bind(this);\r\n    this.handleEquals = this.handleEquals.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.handleExponentiation = this.handleExponentiation.bind(this);\r\n    this.handleSquareRoot = this.handleSquareRoot.bind(this);\r\n    this.handleSquare = this.handleSquare.bind(this);\r\n    this.handleRoot = this.handleRoot.bind(this);\r\n    this.handlePreviousState = this.handlePreviousState.bind(this);\r\n    this.handleSpecialDigit = this.handleSpecialDigit.bind(this);\r\n    this.handleLog10 = this.handleLog10.bind(this);\r\n    this.handleLog = this.handleLog.bind(this);\r\n    this.handleLogE = this.handleLogE.bind(this);\r\n    this.handleFactorial = this.handleFactorial.bind(this);\r\n    this.handleTrigonometry = this.handleTrigonometry.bind(this);\r\n    this.handlePercentage = this.handlePercentage.bind(this);\r\n    this.handleCopyToClipboard = this.handleCopyToClipboard.bind(this);\r\n    this.handleChangeSign = this.handleChangeSign.bind(this);\r\n    this.handleAbs = this.handleAbs.bind(this);\r\n    this.handleSwitchToDenominator = this.handleSwitchToDenominator.bind(this);\r\n    this.handleModulo = this.handleModulo.bind(this);\r\n    this.handleLeftParenthesis = this.handleLeftParenthesis.bind(this);\r\n    this.handleRightParenthesis = this.handleRightParenthesis.bind(this);\r\n  }\r\n\r\n  handleClear() {\r\n    stateStorage.prevState = [];\r\n    this.setState({\r\n      displayOps: \"\",\r\n      displayCur: \"0\",\r\n      lastInput: \"\",\r\n      lastInputType: \"\",\r\n      decimalAlreadyUsed: false,\r\n      twoConsecutiveOperators: false,\r\n      lastResult: \"\",\r\n      parenthesesDelta: 0,\r\n      lastOperator: \"\",\r\n    });\r\n  }\r\n\r\n  handlePreviousState() {\r\n    if (stateStorage.prevState.length <= 1) {\r\n      this.handleClear();\r\n    } else {\r\n      stateStorage.prevState.shift();\r\n      this.setState({\r\n        displayOps: stateStorage.prevState[0].displayOps,\r\n        displayCur: stateStorage.prevState[0].displayCur,\r\n        lastInput: stateStorage.prevState[0].lastInput,\r\n        lastInputType: stateStorage.prevState[0].lastInputType,\r\n        decimalAlreadyUsed: stateStorage.prevState[0].decimalAlreadyUsed,\r\n        twoConsecutiveOperators: stateStorage.prevState[0].twoConsecutiveOperators,\r\n        lastResult: stateStorage.prevState[0].lastResult,\r\n        lastOperator: stateStorage.prevState[0].lastOperator,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOperator(e) {\r\n    // only solo \" - \" is allowed as the first input among all operators\r\n    if (this.state.displayOps !== \"\" || e.target.value === \" - \") {\r\n      if (this.state.displayOps !== \" - \") {\r\n        // used to compare last two states and, in case of their equality, the stateStorage will not be updated\r\n        let penultimateInput = this.state.lastInput;\r\n\r\n        // handle consecutive input of multiple operators\r\n        if (this.state.twoConsecutiveOperators === true) {\r\n          this.setState(\r\n            (state) => ({\r\n              displayOps: state.displayOps.slice(0, state.displayOps.length - lastLegitSymbol(state.displayOps)).concat(e.target.value),\r\n              displayCur: e.target.value,\r\n              lastInput: e.target.value,\r\n              lastInputType: \"operator\",\r\n              twoConsecutiveOperators: false,\r\n              lastOperator: e.target.value,\r\n            }),\r\n            () => {\r\n              console.log(\"handleOperator stage 1 : this.state.displayOps\", this.state.displayOps);\r\n              if (e.target.value === \" - \" || e.target.value !== penultimateInput) saveState(this.state);\r\n            }\r\n          );\r\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value !== \" - \") {\r\n          if (this.state.displayOps.slice(this.state.displayOps.length - 4) !== \"( - \") {\r\n            this.setState(\r\n              (state) => ({\r\n                displayOps: state.displayOps.slice(0, state.displayOps.length - lastLegitSymbol(state.displayOps)).concat(e.target.value),\r\n                displayCur: e.target.value,\r\n                lastInput: e.target.value,\r\n                lastInputType: \"operator\",\r\n                twoConsecutiveOperators: false,\r\n                lastOperator: e.target.value,\r\n              }),\r\n\r\n              () => {\r\n                console.log(\"handleOperator stage 2 : this.state.displayOps\", this.state.displayOps);\r\n                console.log(\"heyyyyy\", e.target.value, this.state.lastInput);\r\n                if (e.target.value !== penultimateInput) saveState(this.state);\r\n              }\r\n            );\r\n          }\r\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInput === \" log base \" && e.target.value === \" - \") {\r\n          this.setState(\r\n            (state) => ({\r\n              // displayOps: state.displayOps.slice(0, state.displayOps.length - lastLegitSymbol(state.displayOps)).concat(e.target.value),\r\n              // displayCur: e.target.value,\r\n              // lastInput: e.target.value,\r\n              // lastInputType: \"operator\",\r\n              // twoConsecutiveOperators: false,\r\n            }),\r\n\r\n            () => {\r\n              console.log(\"handleOperator stage 2.5 : this.state.displayOps\", this.state.displayOps);\r\n              console.log(\"heyyyyy\", e.target.value, this.state.lastInput);\r\n              // if (e.target.value !== penultimateInput) saveState(this.state);\r\n            }\r\n          );\r\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value === \" - \") {\r\n          console.log(\"hola\", this.state.displayOps.slice(this.state.displayOps.length - 4));\r\n          if (this.state.displayOps.slice(this.state.displayOps.length - 4) !== \"( - \") {\r\n            this.setState(\r\n              (state) => ({\r\n                displayOps: state.displayOps.concat(e.target.value),\r\n                displayCur: e.target.value,\r\n                lastInput: e.target.value,\r\n                lastInputType: \"operator\",\r\n                twoConsecutiveOperators: true,\r\n                lastOperator: e.target.value,\r\n              }),\r\n              () => {\r\n                console.log(\"handleOperator stage 3: this.state.displayOps\", this.state.displayOps);\r\n                saveState(this.state);\r\n              }\r\n            );\r\n          }\r\n        }\r\n\r\n        if (this.state.lastInput === \"(\") {\r\n          this.setState(\r\n            (state) => ({\r\n              displayOps: e.target.value === \" - \" ? state.displayOps.concat(e.target.value) : state.displayOps,\r\n              displayCur: e.target.value === \" - \" ? e.target.value : state.displayCur,\r\n              lastInput: e.target.value === \" - \" ? e.target.value : state.lastInput,\r\n              lastInputType: e.target.value === \" - \" ? \"operator\" : state.lastInputType,\r\n              lastOperator: e.target.value === \" - \" ? e.target.value : state.lastOperator,\r\n            }),\r\n            () => {\r\n              console.log(\"handleOperator stage 4: this.state.displayOps\", this.state.displayOps);\r\n            }\r\n          );\r\n        } else if (this.state.lastInput === \")\") {\r\n          this.setState(\r\n            (state) => ({\r\n              displayOps: state.displayOps.concat(e.target.value),\r\n              displayCur: e.target.value,\r\n              lastInput: e.target.value,\r\n              lastInputType: \"operator\",\r\n              twoConsecutiveOperators: false,\r\n              decimalAlreadyUsed: false,\r\n              lastResult: \"\",\r\n              lastOperator: e.target.value,\r\n            }),\r\n            () => {\r\n              console.log(\"handleOperator stage 5: this.state.displayOps\", this.state.displayOps);\r\n              saveState(this.state);\r\n            }\r\n          );\r\n        }\r\n\r\n        if (this.state.lastInputType !== \"parenthesis\" && this.state.lastInputType !== \"operator\") {\r\n          this.setState(\r\n            (state) => ({\r\n              displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\r\n              displayCur: e.target.value,\r\n              lastInput: e.target.value,\r\n              lastInputType: \"operator\",\r\n              twoConsecutiveOperators: false,\r\n              decimalAlreadyUsed: false,\r\n              lastResult: \"\",\r\n              lastOperator: e.target.value,\r\n            }),\r\n            () => {\r\n              console.log(\"handleOperator stage 6: this.state.displayOps\", this.state.displayOps);\r\n              saveState(this.state);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDigit(e) {\r\n    if (this.state.lastResult !== \"\") this.handleClear();\r\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\") {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps:\r\n            state.lastInputType === \"operator\" || state.lastInput === \"(\"\r\n              ? state.displayOps.concat(e.target.value)\r\n              : (Number(state.displayCur) === 0 && state.displayCur.length === 1) || (!isFinite(state.lastInput) && state.lastInput !== \".\")\r\n              ? state.displayOps.slice(0, state.displayOps.length - 1).concat(e.target.value)\r\n              : state.displayOps.concat(e.target.value),\r\n          displayCur: (Number(state.displayCur) === 0 && state.displayCur.length === 1) || (!isFinite(state.lastInput) && state.lastInput !== \".\") ? e.target.value : state.displayCur.concat(e.target.value),\r\n          lastInput: e.target.value,\r\n          lastInputType: \"digit\",\r\n          twoConsecutiveOperators: false,\r\n        }),\r\n        () => {\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleSpecialDigit(e) {\r\n    if (this.state.lastResult !== \"\") this.handleClear();\r\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\" && this.state.decimalAlreadyUsed !== true) {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps:\r\n            state.lastInputType === \"operator\" || state.lastInput === \"(\"\r\n              ? state.displayOps.concat(e.target.value)\r\n              : (Number(state.displayCur) === 0 && state.displayCur.length === 1) || (!isFinite(state.lastInput) && state.lastInput !== \".\")\r\n              ? state.displayOps.slice(0, state.displayOps.length - 1).concat(e.target.value)\r\n              : state.displayOps.concat(e.target.value),\r\n          displayCur: e.target.value,\r\n          lastInput: e.target.value,\r\n          lastInputType: \"digit\",\r\n          twoConsecutiveOperators: false,\r\n          decimalAlreadyUsed: true,\r\n        }),\r\n        () => {\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleDecimal() {\r\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\" && this.state.decimalAlreadyUsed !== true) {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.lastResult === \"\" ? state.displayOps.concat(isFinite(state.lastInput) && this.state.displayOps !== \"\" ? \".\" : \"0.\") : /\\./.test(state.lastResult) ? \"\".concat(\"0.\") : \"\".state.lastResult.concat(\".\"),\r\n          displayCur: state.lastResult === \"\" ? (isFinite(state.lastInput) ? state.displayCur.concat(\".\") : \"0.\") : /\\./.test(state.lastResult) ? \"\".concat(\"0.\") : \"\".state.lastResult.concat(\".\"),\r\n          lastInput: \".\",\r\n          lastInputType: \"decimal\",\r\n          decimalAlreadyUsed: true,\r\n          twoConsecutiveOperators: false,\r\n          lastResult: \"\",\r\n        }),\r\n        () => {\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleSquare() {\r\n    this.setState(\r\n      (state) => ({\r\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(\" ^ 2\") : \"\".concat(state.lastResult).concat(\" ^ 2\"),\r\n        displayCur: \"\",\r\n        lastInput: \"2\",\r\n        lastInputType: \"digit\",\r\n        twoConsecutiveOperators: false,\r\n        decimalAlreadyUsed: false,\r\n        lastResult: \"\",\r\n        lastOperator: \" ^ \",\r\n      }),\r\n      () => {\r\n        console.log(\"inside handle ^2 after setState:  displayOps\", this.state.displayOps);\r\n        saveState(this.state);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleSquareRoot() {\r\n    this.setState(\r\n      (state) => ({\r\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(\" yroot 2\") : \"\".concat(state.lastResult).concat(\" yroot 2\"),\r\n        displayCur: \"\",\r\n        lastInput: \"2\",\r\n        lastInputType: \"digit\",\r\n        twoConsecutiveOperators: false,\r\n        decimalAlreadyUsed: false,\r\n        lastResult: \"\",\r\n        lastOperator: \" yroot \",\r\n      }),\r\n      () => {\r\n        console.log(\"after displayOps\", this.state.displayOps);\r\n        saveState(this.state);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleExponentiation(e) {\r\n    this.setState(\r\n      (state) => ({\r\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\r\n        displayCur: e.target.value,\r\n        lastInput: e.target.value,\r\n        lastInputType: \"operator\",\r\n        twoConsecutiveOperators: false,\r\n        decimalAlreadyUsed: false,\r\n        lastResult: \"\",\r\n        lastOperator: \" ^ \",\r\n      }),\r\n      () => {\r\n        console.log(\"inside handle ^ after setState:  displayOps\", this.state.displayOps);\r\n        saveState(this.state);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleRoot(e) {\r\n    this.setState(\r\n      (state) => ({\r\n        displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\r\n        displayCur: e.target.value,\r\n        lastInput: e.target.value,\r\n        lastInputType: \"operator\",\r\n        twoConsecutiveOperators: false,\r\n        decimalAlreadyUsed: false,\r\n        lastResult: \"\",\r\n        lastOperator: \" yroot \",\r\n      }),\r\n      () => {\r\n        console.log(\"after displayOps\", this.state.displayOps);\r\n        saveState(this.state);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleLog(e) {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\r\n      console.log(\"inside handle log: displayOps\", this.state.displayOps);\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\r\n          displayCur: e.target.value,\r\n          lastInput: e.target.value,\r\n          lastInputType: \"operator\",\r\n          twoConsecutiveOperators: false,\r\n          decimalAlreadyUsed: false,\r\n          lastResult: \"\",\r\n          lastOperator: \" log base \",\r\n        }),\r\n        () => {\r\n          console.log(\"inside handle log after setState:  displayOps\", this.state.displayOps);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleLog10() {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\r\n      console.log(\"inside handle log10: displayOps\", this.state.displayOps);\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.lastResult === \"\" ? state.displayOps.concat(\" log base 10\") : \"\".concat(state.lastResult).concat(\" log base 10\"),\r\n          displayCur: \"\",\r\n          lastInput: \"10\",\r\n          lastInputType: \"digit\",\r\n          twoConsecutiveOperators: false,\r\n          decimalAlreadyUsed: false,\r\n          lastResult: \"\",\r\n          lastOperator: \" log base \",\r\n        }),\r\n        () => {\r\n          console.log(\"inside handle log10 after setState:  displayOps\", this.state.displayOps);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleLogE() {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\r\n      console.log(\"inside handle log10: displayOps\", this.state.displayOps);\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.lastResult === \"\" ? state.displayOps.concat(` log base ${Math.E}`) : \"\".concat(state.lastResult).concat(` log base ${Math.E}`),\r\n          displayCur: \"\",\r\n          lastInput: `${Math.E}`,\r\n          lastInputType: \"digit\",\r\n          twoConsecutiveOperators: false,\r\n          decimalAlreadyUsed: false,\r\n          lastResult: \"\",\r\n          lastOperator: \" log base \",\r\n        }),\r\n        () => {\r\n          console.log(\"inside handle log10 after setState:  displayOps\", this.state.displayOps);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleFactorial() {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\" || this.state.lastInput === \"%\") {\r\n      let factor = factorial(this.state.displayCur).toString();\r\n      console.log(\"factorial\", factor);\r\n      if (factor === \"invalid input\") {\r\n        this.handleClear();\r\n        factor === \"invalid input\";\r\n      }\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: factor === \"invalid input\" ? \"invalid input\" : state.lastResult === \"\" ? state.displayOps.concat(\"!\") : \"\".concat(state.lastResult).concat(\"!\"),\r\n          displayCur: factor,\r\n          lastInput: \"!\",\r\n          lastInputType: \"!\",\r\n          twoConsecutiveOperators: false,\r\n          lastResult: \"\",\r\n          lastOperator: \" ! \",\r\n        }),\r\n        () => {\r\n          console.log(\"inside handle factorial after setState:  displayOps\", this.state.displayOps);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleTrigonometry(e) {\r\n    console.log(\"inside trigonometry\", isFinite(this.state.displayCur));\r\n    if ((this.state.displayOps !== \"\" && isFinite(this.state.displayCur)) || this.state.lastInput === \")\") {\r\n      let result = trigonometryInDegrees(this.state.displayCur, e.target.value, this.state);\r\n      console.log(\"triginometry\", result);\r\n      // deleteRedundantDigits(this.state);\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.lastResult === \"\" ? displayOpsExpression : \"\".concat(result),\r\n          displayOps: displayOpsExpression,\r\n          displayCur: result,\r\n          lastInput: \")\",\r\n          lastInputType: \"parenthesis\",\r\n          twoConsecutiveOperators: false,\r\n          lastOperator: \"trigonometry\",\r\n          lastResult: \"\",\r\n        }),\r\n        () => {\r\n          console.log(\"inside trigonometry after setState:  displayOps\", this.state.displayOps);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handlePercentage() {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\" || this.state.lastInput === \"!\") {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.lastResult === \"\" ? state.displayOps.concat(\"%\") : \"\".concat(state.lastResult).concat(\"%\"),\r\n          displayCur: state.lastInputType === \"digit\" ? state.displayCur / 100 : \"%\",\r\n          lastInput: \"%\",\r\n          lastInputType: \"%\",\r\n          twoConsecutiveOperators: false,\r\n          lastResult: \"\",\r\n          lastOperator: \" % \",\r\n        }),\r\n        () => {\r\n          console.log(\"inside handle log10 after setState:  displayOps\", this.state.displayOps);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChangeSign() {\r\n    if (this.state.lastResult === \"\") {\r\n      if (this.state.lastInputType === \"digit\" && this.state.displayCur !== 0 && this.state.displayCur !== \"\" && this.state.lastOperator !== \" log base \") {\r\n        let displayOpsExpression = \"\";\r\n        let regexArr = [\" \\\\-  - \", \" \\\\+  - \", \" \\\\*  - \", \" \\\\/  - \", \"^ - \", \"^-\", \" - \", \" \\\\+ \", \"\"];\r\n        let signArr = [\" - \", \" + \", \" * \", \" / \", \"\", \"\", \" + \", \" - \", \" - \"];\r\n\r\n        let arr = [];\r\n        for (let i = 0; i < regexArr.length; i++) {\r\n          console.log(\"i\", i, \"displayOps\", this.state.displayOps);\r\n          arr.push(this.state.displayOps.match(`${regexArr[i]}${Math.abs(this.state.displayCur)}$`));\r\n        }\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n          if (arr[i] !== null) {\r\n            displayOpsExpression = this.state.displayOps.slice(0, arr[i].index).concat(signArr[i]).concat(Math.abs(this.state.displayCur));\r\n            break;\r\n          }\r\n        }\r\n        this.setState((state) => ({\r\n          displayOps: state.lastResult === \"\" ? displayOpsExpression : \"\".concat(state.displayCur * -1),\r\n          displayCur: state.displayCur * -1,\r\n          lastInputType: \"digit\",\r\n          lastResult: \"\",\r\n        }));\r\n      } else if (this.state.lastInput === \")\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastOperator === \"trigonometry\") {\r\n        console.log(\"you are in special case of handleChangeSign\");\r\n        changeSign(this.state);\r\n        this.setState(\r\n          (state) => ({\r\n            displayOps: displayOpsExpression,\r\n            displayCur: \"\",\r\n            lastInput: \")\",\r\n            lastInputType: \"parenthesis\",\r\n            twoConsecutiveOperators: false,\r\n            // lastOperator: \"trigonometry\",\r\n            lastResult: \"\",\r\n          }),\r\n          () => {\r\n            console.log(\"inside special case of handleChangeSign after setState:  displayOps\", this.state.displayOps);\r\n            saveState(this.state);\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: \"\".concat(state.lastResult),\r\n          lastResult: \"\",\r\n        }),\r\n        () => this.handleChangeSign()\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAbs() {\r\n    this.setState((state) => ({\r\n      displayCur: Math.abs(state.displayCur),\r\n    }));\r\n  }\r\n\r\n  handleSwitchToDenominator() {\r\n    this.setState((state) => ({\r\n      displayCur: 1 / state.displayCur,\r\n    }));\r\n  }\r\n\r\n  handleModulo(e) {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.lastResult === \"\" ? (state.lastInput === \")\" ? state.displayOps.concat(e.target.value) : state.displayOps.concat(e.target.value)) : \"\".concat(state.lastResult).concat(e.target.value),\r\n          displayCur: e.target.value,\r\n          lastInput: e.target.value,\r\n          lastInputType: \"operator\",\r\n          twoConsecutiveOperators: false,\r\n          decimalAlreadyUsed: false,\r\n          lastResult: \"\",\r\n          lastOperator: \" mod \",\r\n        }),\r\n        () => {\r\n          console.log(\"inside modulo after setState:  displayOps\", this.state.displayOps);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleLeftParenthesis(e) {\r\n    if (this.state.lastInputType !== \"digit\" && this.state.lastInput !== \")\") {\r\n      this.setState(\r\n        (state) => ({\r\n          displayOps: state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(e.target.value),\r\n          displayCur: e.target.value,\r\n          lastInput: \"(\",\r\n          lastInputType: \"parenthesis\",\r\n          parenthesesDelta: state.parenthesesDelta + 1,\r\n          twoConsecutiveOperators: false,\r\n          lastOperator: \"(\",\r\n        }),\r\n        () => {\r\n          console.log(\"inside leftParenthesis after setState:  displayOps\", this.state.displayOps);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  handleRightParenthesis(e) {\r\n    console.log(\"this.state.parthersesDelta\", this.state.parenthesesDelta);\r\n    if (this.state.parenthesesDelta > 0) {\r\n      if (this.state.lastInputType === \"digit\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastInput === \")\") {\r\n        this.setState(\r\n          (state) => ({\r\n            displayOps: state.lastInput === \")\" ? state.displayOps.concat(e.target.value) : state.lastResult === \"\" ? state.displayOps.concat(e.target.value) : \"\".concat(e.target.value),\r\n            displayCur: e.target.value,\r\n            lastInput: \")\",\r\n            lastInputType: \"parenthesis\",\r\n            parenthesesDelta: state.parenthesesDelta - 1,\r\n            twoConsecutiveOperators: false,\r\n            lastOperator: \")\",\r\n          }),\r\n          () => {\r\n            console.log(\"inside rightParenthesis after setState:  displayOps\", this.state.displayOps);\r\n            saveState(this.state);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEquals() {\r\n    if (this.state.lastResult === \"\") {\r\n      console.log(\"check parenthesis after adding missing\", this.state.displayOps);\r\n\r\n      deleteRedundantOperators(this.state);\r\n      let result = calculate(displayOpsExpression);\r\n      // let result = calculate(\"3 * (25 - 21) + 8\");\r\n      this.setState(\r\n        {\r\n          displayOps: displayOpsExpression.concat(\" = \").concat(result),\r\n          displayCur: result,\r\n          lastInput: \"\",\r\n          lastInputType: \"digit\",\r\n          twoConsecutiveOperators: false,\r\n          decimalAlreadyUsed: false,\r\n          lastResult: result,\r\n          parenthesesDelta: 0,\r\n          lastOperator: \"equal\",\r\n        },\r\n        () => {\r\n          saveState(this.state);\r\n          console.log(\"Inside handleEquals: final result\", result);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCopyToClipboard() {\r\n    let copyResult = document.getElementById(\"display\").innerText;\r\n    navigator.clipboard.writeText(copyResult);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Display ops={this.state.displayOps} cur={this.state.displayCur} />\r\n        <Buttons\r\n          clear={this.handleClear}\r\n          operator={this.handleOperator}\r\n          digit={this.handleDigit}\r\n          equals={this.handleEquals}\r\n          decimal={this.handleDecimal}\r\n          exponentiation={this.handleExponentiation}\r\n          root={this.handleRoot}\r\n          square={this.handleSquare}\r\n          squareRoot={this.handleSquareRoot}\r\n          previousState={this.handlePreviousState}\r\n          specialDigit={this.handleSpecialDigit}\r\n          log10={this.handleLog10}\r\n          log={this.handleLog}\r\n          logE={this.handleLogE}\r\n          factorial={this.handleFactorial}\r\n          trigonometry={this.handleTrigonometry}\r\n          percentage={this.handlePercentage}\r\n          copyToClipboard={this.handleCopyToClipboard}\r\n          changeSign={this.handleChangeSign}\r\n          abs={this.handleAbs}\r\n          switchToDenominator={this.handleSwitchToDenominator}\r\n          modulo={this.handleModulo}\r\n          leftParenthesis={this.handleLeftParenthesis}\r\n          rightParenthesis={this.handleRightParenthesis}\r\n        />\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Display extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"displayBox\">\r\n          <div id=\"displayOps\">{this.props.ops}</div>\r\n          <div id=\"display\">{this.props.cur}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Buttons extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <button id=\"clear\" onClick={this.props.clear}>\r\n          AC\r\n        </button>\r\n        <button id=\"add\" value=\" + \" onClick={this.props.operator}>\r\n          +\r\n        </button>\r\n        <button id=\"seven\" value=\"7\" onClick={this.props.digit}>\r\n          7\r\n        </button>\r\n        <button id=\"eight\" value=\"8\" onClick={this.props.digit}>\r\n          8\r\n        </button>\r\n        <button id=\"nine\" value=\"9\" onClick={this.props.digit}>\r\n          9\r\n        </button>\r\n        <button id=\"subtract\" value=\" - \" onClick={this.props.operator}>\r\n          -\r\n        </button>\r\n        <button id=\"four\" value=\"4\" onClick={this.props.digit}>\r\n          4\r\n        </button>\r\n        <button id=\"five\" value=\"5\" onClick={this.props.digit}>\r\n          5\r\n        </button>\r\n        <button id=\"six\" value=\"6\" onClick={this.props.digit}>\r\n          6\r\n        </button>\r\n        <button id=\"multiply\" value=\" * \" onClick={this.props.operator}>\r\n          x\r\n        </button>\r\n        <button id=\"one\" value=\"1\" onClick={this.props.digit}>\r\n          1\r\n        </button>\r\n        <button id=\"two\" value=\"2\" onClick={this.props.digit}>\r\n          2\r\n        </button>\r\n        <button id=\"three\" value=\"3\" onClick={this.props.digit}>\r\n          3\r\n        </button>\r\n        <button id=\"divide\" value=\" / \" onClick={this.props.operator}>\r\n          /\r\n        </button>\r\n        <button id=\"zero\" value=\"0\" onClick={this.props.digit}>\r\n          0\r\n        </button>\r\n        <button id=\"decimal\" onClick={this.props.decimal}>\r\n          .\r\n        </button>\r\n        <button id=\"equals\" onClick={this.props.equals}>\r\n          =\r\n        </button>\r\n        <button id=\"square\" value=\"S\" onClick={this.props.square}>\r\n          S\r\n        </button>\r\n        <button id=\"squareRoot\" value=\"R\" onClick={this.props.squareRoot}>\r\n          R\r\n        </button>\r\n        <button id=\"exponentiation\" value=\" ^ \" onClick={this.props.operator}>\r\n          ^\r\n        </button>\r\n        <button id=\"anyRoot\" value=\" yroot \" onClick={this.props.operator}>\r\n          root\r\n        </button>\r\n        <button id=\"pi\" value={Math.PI} onClick={this.props.specialDigit}>\r\n          Pi\r\n        </button>\r\n        <button id=\"e\" value={Math.E} onClick={this.props.specialDigit}>\r\n          e\r\n        </button>\r\n        <button id=\"random\" value={Math.random()} onClick={this.props.specialDigit}>\r\n          rand\r\n        </button>\r\n        <button id=\"delete\" onClick={this.props.previousState}>\r\n          del\r\n        </button>\r\n        <button id=\"log10\" onClick={this.props.log10}>\r\n          log10\r\n        </button>\r\n        <button id=\"log\" value=\" log base \" onClick={this.props.log}>\r\n          log\r\n        </button>\r\n        <button id=\"logE\" onClick={this.props.logE}>\r\n          logE\r\n        </button>\r\n        <button id=\"factorial\" onClick={this.props.factorial}>\r\n          !\r\n        </button>\r\n        <button id=\"sin\" value=\"sin\" onClick={this.props.trigonometry}>\r\n          sin\r\n        </button>\r\n        <button id=\"cos\" value=\"cos\" onClick={this.props.trigonometry}>\r\n          cos\r\n        </button>\r\n        <button id=\"tan\" value=\"tan\" onClick={this.props.trigonometry}>\r\n          tan\r\n        </button>\r\n        <button id=\"cot\" value=\"cot\" onClick={this.props.trigonometry}>\r\n          cot\r\n        </button>\r\n        <button id=\"sec\" value=\"sec\" onClick={this.props.trigonometry}>\r\n          sec\r\n        </button>\r\n        <button id=\"csc\" value=\"csc\" onClick={this.props.trigonometry}>\r\n          csc\r\n        </button>\r\n        <button id=\"percentage\" onClick={this.props.percentage}>\r\n          %\r\n        </button>\r\n        <button id=\"copy\" onClick={this.props.copyToClipboard}>\r\n          Copy\r\n        </button>\r\n        <button id=\"sign\" onClick={this.props.changeSign}>\r\n          +/-\r\n        </button>\r\n        <button id=\"abs\" onClick={this.props.abs}>\r\n          abs\r\n        </button>\r\n        <button id=\"denominator\" onClick={this.props.switchToDenominator}>\r\n          1/x\r\n        </button>\r\n        <button id=\"modulo\" value=\" mod \" onClick={this.props.modulo}>\r\n          mod\r\n        </button>\r\n        <button id=\"leftParenthesis\" value=\"(\" onClick={this.props.leftParenthesis}>\r\n          (\r\n        </button>\r\n        <button id=\"rightParenthesis\" value=\")\" onClick={this.props.rightParenthesis}>\r\n          )\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <div id=\"footer\">This project was build using: HTML, CSS, JavaScript, React, Redux, jQuery, Bootstrap and SASS without using eval() function</div>\r\n    </footer>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}