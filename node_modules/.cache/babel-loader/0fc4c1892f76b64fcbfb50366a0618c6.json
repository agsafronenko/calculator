{"ast":null,"code":"export default function calculate(arr) {\n  arr = calcIdenticalOperations(arr, \"*/\");\n  // arr = calcIdenticalOperations(arr, \"/\");\n  arr = calcIdenticalOperations(arr, \"+\");\n  arr = calcIdenticalOperations(arr, \"-\");\n  return arr[0];\n}\nfunction calcIdenticalOperations(arr, operator) {\n  console.log(\"inside SameOperations\", arr, operator);\n  let operatorIndex = \"\";\n  if (operator.length === 2) {\n    operatorIndex = arr.findIndex(elem => elem === operator[0] || elem === operator[1]);\n    console.log(\"arr\", arr, \"operatorIndex\", operatorIndex);\n  } else {\n    operatorIndex = arr.findIndex(elem => elem === operator);\n  }\n  operator = arr[operatorIndex];\n  if (operatorIndex !== -1) {\n    let currentOperation = arr.slice(operatorIndex - 1, operatorIndex + 2);\n    let currentResult = operator === \"*\" ? currentOperation[0] * currentOperation[2] : operator === \"/\" ? currentOperation[0] / currentOperation[2] : operator === \"+\" ? currentOperation[0] + currentOperation[2] : currentOperation[0] - currentOperation[2];\n    let result = arr.slice(0, operatorIndex - 1).concat(currentResult).concat(arr.slice(operatorIndex + 2));\n    return calcIdenticalOperations(result, operator);\n  }\n  console.log(\"inside SameOperations before return\", arr, operator);\n  return arr;\n}","map":{"version":3,"names":["calculate","arr","calcIdenticalOperations","operator","console","log","operatorIndex","length","findIndex","elem","currentOperation","slice","currentResult","result","concat"],"sources":["C:/Users/agsaf/Documents/GitHub/calculator/src/functions.js"],"sourcesContent":["export default function calculate(arr) {\r\n  arr = calcIdenticalOperations(arr, \"*/\");\r\n  // arr = calcIdenticalOperations(arr, \"/\");\r\n  arr = calcIdenticalOperations(arr, \"+\");\r\n  arr = calcIdenticalOperations(arr, \"-\");\r\n\r\n  return arr[0];\r\n}\r\n\r\nfunction calcIdenticalOperations(arr, operator) {\r\n  console.log(\"inside SameOperations\", arr, operator);\r\n  let operatorIndex = \"\";\r\n  if (operator.length === 2) {\r\n    operatorIndex = arr.findIndex((elem) => elem === operator[0] || elem === operator[1]);\r\n    console.log(\"arr\", arr, \"operatorIndex\", operatorIndex);\r\n  } else {\r\n    operatorIndex = arr.findIndex((elem) => elem === operator);\r\n  }\r\n\r\n  operator = arr[operatorIndex];\r\n  if (operatorIndex !== -1) {\r\n    let currentOperation = arr.slice(operatorIndex - 1, operatorIndex + 2);\r\n    let currentResult = operator === \"*\" ? currentOperation[0] * currentOperation[2] : operator === \"/\" ? currentOperation[0] / currentOperation[2] : operator === \"+\" ? currentOperation[0] + currentOperation[2] : currentOperation[0] - currentOperation[2];\r\n\r\n    let result = arr\r\n      .slice(0, operatorIndex - 1)\r\n      .concat(currentResult)\r\n      .concat(arr.slice(operatorIndex + 2));\r\n\r\n    return calcIdenticalOperations(result, operator);\r\n  }\r\n  console.log(\"inside SameOperations before return\", arr, operator);\r\n  return arr;\r\n}\r\n"],"mappings":"AAAA,eAAe,SAASA,SAAS,CAACC,GAAG,EAAE;EACrCA,GAAG,GAAGC,uBAAuB,CAACD,GAAG,EAAE,IAAI,CAAC;EACxC;EACAA,GAAG,GAAGC,uBAAuB,CAACD,GAAG,EAAE,GAAG,CAAC;EACvCA,GAAG,GAAGC,uBAAuB,CAACD,GAAG,EAAE,GAAG,CAAC;EAEvC,OAAOA,GAAG,CAAC,CAAC,CAAC;AACf;AAEA,SAASC,uBAAuB,CAACD,GAAG,EAAEE,QAAQ,EAAE;EAC9CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,GAAG,EAAEE,QAAQ,CAAC;EACnD,IAAIG,aAAa,GAAG,EAAE;EACtB,IAAIH,QAAQ,CAACI,MAAM,KAAK,CAAC,EAAE;IACzBD,aAAa,GAAGL,GAAG,CAACO,SAAS,CAAEC,IAAI,IAAKA,IAAI,KAAKN,QAAQ,CAAC,CAAC,CAAC,IAAIM,IAAI,KAAKN,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrFC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEJ,GAAG,EAAE,eAAe,EAAEK,aAAa,CAAC;EACzD,CAAC,MAAM;IACLA,aAAa,GAAGL,GAAG,CAACO,SAAS,CAAEC,IAAI,IAAKA,IAAI,KAAKN,QAAQ,CAAC;EAC5D;EAEAA,QAAQ,GAAGF,GAAG,CAACK,aAAa,CAAC;EAC7B,IAAIA,aAAa,KAAK,CAAC,CAAC,EAAE;IACxB,IAAII,gBAAgB,GAAGT,GAAG,CAACU,KAAK,CAACL,aAAa,GAAG,CAAC,EAAEA,aAAa,GAAG,CAAC,CAAC;IACtE,IAAIM,aAAa,GAAGT,QAAQ,KAAK,GAAG,GAAGO,gBAAgB,CAAC,CAAC,CAAC,GAAGA,gBAAgB,CAAC,CAAC,CAAC,GAAGP,QAAQ,KAAK,GAAG,GAAGO,gBAAgB,CAAC,CAAC,CAAC,GAAGA,gBAAgB,CAAC,CAAC,CAAC,GAAGP,QAAQ,KAAK,GAAG,GAAGO,gBAAgB,CAAC,CAAC,CAAC,GAAGA,gBAAgB,CAAC,CAAC,CAAC,GAAGA,gBAAgB,CAAC,CAAC,CAAC,GAAGA,gBAAgB,CAAC,CAAC,CAAC;IAE1P,IAAIG,MAAM,GAAGZ,GAAG,CACbU,KAAK,CAAC,CAAC,EAAEL,aAAa,GAAG,CAAC,CAAC,CAC3BQ,MAAM,CAACF,aAAa,CAAC,CACrBE,MAAM,CAACb,GAAG,CAACU,KAAK,CAACL,aAAa,GAAG,CAAC,CAAC,CAAC;IAEvC,OAAOJ,uBAAuB,CAACW,MAAM,EAAEV,QAAQ,CAAC;EAClD;EACAC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEJ,GAAG,EAAEE,QAAQ,CAAC;EACjE,OAAOF,GAAG;AACZ"},"metadata":{},"sourceType":"module"}