{"ast":null,"code":"export var alertStatus={negativeFactor:false,nonIntegerFactor:false,negativeLog:false,zeroAsDenominator:false};export function validInputLog(currentOperation){alertStatus.negativeLog=false;return Math.log(currentOperation[0])/Math.log(currentOperation[2]);}export function invalidInputLog(){if(alertStatus.negativeLog===false){alert(\"the logarithm of a negative number is undefined\");alertStatus.negativeLog=true;return\"invalid input\";}else{return\"invalid input\";}}export function validInputDenominator(currentOperation){alertStatus.zeroAsDenominator=false;return currentOperation[0]/currentOperation[2];}export function invalidInputDenominator(){if(alertStatus.zeroAsDenominator===false){alert(\"you cannot divide by zero\");alertStatus.zeroAsDenominator=true;return\"invalid input\";}else{return\"invalid input\";}}","map":{"version":3,"names":["alertStatus","negativeFactor","nonIntegerFactor","negativeLog","zeroAsDenominator","validInputLog","currentOperation","Math","log","invalidInputLog","alert","validInputDenominator","invalidInputDenominator"],"sources":["C:/Users/agsaf/Documents/GitHub/calculator/src/functions/alertStatus.js"],"sourcesContent":["export let alertStatus = {\r\n  negativeFactor: false,\r\n  nonIntegerFactor: false,\r\n  negativeLog: false,\r\n  zeroAsDenominator: false,\r\n};\r\n\r\nexport function validInputLog(currentOperation) {\r\n  alertStatus.negativeLog = false;\r\n  return Math.log(currentOperation[0]) / Math.log(currentOperation[2]);\r\n}\r\n\r\nexport function invalidInputLog() {\r\n  if (alertStatus.negativeLog === false) {\r\n    alert(\"the logarithm of a negative number is undefined\");\r\n    alertStatus.negativeLog = true;\r\n    return \"invalid input\";\r\n  } else {\r\n    return \"invalid input\";\r\n  }\r\n}\r\n\r\nexport function validInputDenominator(currentOperation) {\r\n  alertStatus.zeroAsDenominator = false;\r\n  return currentOperation[0] / currentOperation[2];\r\n}\r\n\r\nexport function invalidInputDenominator() {\r\n  if (alertStatus.zeroAsDenominator === false) {\r\n    alert(\"you cannot divide by zero\");\r\n    alertStatus.zeroAsDenominator = true;\r\n    return \"invalid input\";\r\n  } else {\r\n    return \"invalid input\";\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAO,IAAIA,YAAW,CAAG,CACvBC,cAAc,CAAE,KAAK,CACrBC,gBAAgB,CAAE,KAAK,CACvBC,WAAW,CAAE,KAAK,CAClBC,iBAAiB,CAAE,KACrB,CAAC,CAED,MAAO,SAASC,cAAa,CAACC,gBAAgB,CAAE,CAC9CN,WAAW,CAACG,WAAW,CAAG,KAAK,CAC/B,MAAOI,KAAI,CAACC,GAAG,CAACF,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAGC,IAAI,CAACC,GAAG,CAACF,gBAAgB,CAAC,CAAC,CAAC,CAAC,CACtE,CAEA,MAAO,SAASG,gBAAe,EAAG,CAChC,GAAIT,WAAW,CAACG,WAAW,GAAK,KAAK,CAAE,CACrCO,KAAK,CAAC,iDAAiD,CAAC,CACxDV,WAAW,CAACG,WAAW,CAAG,IAAI,CAC9B,MAAO,eAAe,CACxB,CAAC,IAAM,CACL,MAAO,eAAe,CACxB,CACF,CAEA,MAAO,SAASQ,sBAAqB,CAACL,gBAAgB,CAAE,CACtDN,WAAW,CAACI,iBAAiB,CAAG,KAAK,CACrC,MAAOE,iBAAgB,CAAC,CAAC,CAAC,CAAGA,gBAAgB,CAAC,CAAC,CAAC,CAClD,CAEA,MAAO,SAASM,wBAAuB,EAAG,CACxC,GAAIZ,WAAW,CAACI,iBAAiB,GAAK,KAAK,CAAE,CAC3CM,KAAK,CAAC,2BAA2B,CAAC,CAClCV,WAAW,CAACI,iBAAiB,CAAG,IAAI,CACpC,MAAO,eAAe,CACxB,CAAC,IAAM,CACL,MAAO,eAAe,CACxB,CACF"},"metadata":{},"sourceType":"module"}