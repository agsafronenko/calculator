{"ast":null,"code":"export default function calculate(arr) {\n  let mulInd = arr.findIndex(elem => elem === \"x\");\n  console.log(\"arr\", arr);\n  if (mulInd !== -1) {\n    let currentOperation = arr.slice(mulInd - 1, mulInd + 2);\n    let currentResult = currentOperation[0] * currentOperation[2];\n    let result = arr.slice(0, mulInd - 1).concat(currentResult).concat(arr.slice(mulInd + 2));\n    return calculate(result);\n  }\n  let addInd = arr.findIndex(elem => elem === \"+\");\n  if (addInd !== -1) {\n    let currentOperation = arr.slice(addInd - 1, addInd + 2);\n    let currentResult = currentOperation[0] + currentOperation[2];\n    let result = arr.slice(0, addInd - 1).concat(currentResult).concat(arr.slice(addInd + 2));\n    return calculate(result);\n  }\n  calculateSameOperations(arr, operation.Obj.subtract);\n  return arr[0];\n}\nfunction calculateSameOperations(arr, operator) {\n  let operatorIndex = arr.findIndex(elem => elem === operator.display);\n  if (operatorIndex !== -1) {\n    let currentOperation = arr.slice(operatorIndex - 1, operatorIndex + 2);\n    let currentResult = currentOperation[0] - currentOperation[2];\n    let result = arr.slice(0, operatorIndex - 1).concat(currentResult).concat(arr.slice(operatorIndex + 2));\n    return calculateSameOperations(result, operator);\n  }\n  return arr;\n}\nlet operatorObj = {\n  add: {\n    display: \"+\",\n    calc: \"+\"\n  },\n  subtract: {\n    display: \"-\",\n    calc: \"-\"\n  }\n};","map":{"version":3,"names":["calculate","arr","mulInd","findIndex","elem","console","log","currentOperation","slice","currentResult","result","concat","addInd","calculateSameOperations","operation","Obj","subtract","operator","operatorIndex","display","operatorObj","add","calc"],"sources":["C:/Users/agsaf/Documents/GitHub/calculator/src/functions.js"],"sourcesContent":["export default function calculate(arr) {\r\n  let mulInd = arr.findIndex((elem) => elem === \"x\");\r\n  console.log(\"arr\", arr);\r\n  if (mulInd !== -1) {\r\n    let currentOperation = arr.slice(mulInd - 1, mulInd + 2);\r\n    let currentResult = currentOperation[0] * currentOperation[2];\r\n\r\n    let result = arr\r\n      .slice(0, mulInd - 1)\r\n      .concat(currentResult)\r\n      .concat(arr.slice(mulInd + 2));\r\n\r\n    return calculate(result);\r\n  }\r\n\r\n  let addInd = arr.findIndex((elem) => elem === \"+\");\r\n  if (addInd !== -1) {\r\n    let currentOperation = arr.slice(addInd - 1, addInd + 2);\r\n    let currentResult = currentOperation[0] + currentOperation[2];\r\n\r\n    let result = arr\r\n      .slice(0, addInd - 1)\r\n      .concat(currentResult)\r\n      .concat(arr.slice(addInd + 2));\r\n\r\n    return calculate(result);\r\n  }\r\n\r\n  calculateSameOperations(arr, operation.Obj.subtract);\r\n\r\n  return arr[0];\r\n}\r\n\r\nfunction calculateSameOperations(arr, operator) {\r\n  let operatorIndex = arr.findIndex((elem) => elem === operator.display);\r\n  if (operatorIndex !== -1) {\r\n    let currentOperation = arr.slice(operatorIndex - 1, operatorIndex + 2);\r\n    let currentResult = currentOperation[0] - currentOperation[2];\r\n\r\n    let result = arr\r\n      .slice(0, operatorIndex - 1)\r\n      .concat(currentResult)\r\n      .concat(arr.slice(operatorIndex + 2));\r\n\r\n    return calculateSameOperations(result, operator);\r\n  }\r\n  return arr;\r\n}\r\n\r\nlet operatorObj = {\r\n  add: {\r\n    display: \"+\",\r\n    calc: \"+\",\r\n  },\r\n  subtract: {\r\n    display: \"-\",\r\n    calc: \"-\",\r\n  },\r\n};\r\n"],"mappings":"AAAA,eAAe,SAASA,SAAS,CAACC,GAAG,EAAE;EACrC,IAAIC,MAAM,GAAGD,GAAG,CAACE,SAAS,CAAEC,IAAI,IAAKA,IAAI,KAAK,GAAG,CAAC;EAClDC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEL,GAAG,CAAC;EACvB,IAAIC,MAAM,KAAK,CAAC,CAAC,EAAE;IACjB,IAAIK,gBAAgB,GAAGN,GAAG,CAACO,KAAK,CAACN,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,CAAC,CAAC;IACxD,IAAIO,aAAa,GAAGF,gBAAgB,CAAC,CAAC,CAAC,GAAGA,gBAAgB,CAAC,CAAC,CAAC;IAE7D,IAAIG,MAAM,GAAGT,GAAG,CACbO,KAAK,CAAC,CAAC,EAAEN,MAAM,GAAG,CAAC,CAAC,CACpBS,MAAM,CAACF,aAAa,CAAC,CACrBE,MAAM,CAACV,GAAG,CAACO,KAAK,CAACN,MAAM,GAAG,CAAC,CAAC,CAAC;IAEhC,OAAOF,SAAS,CAACU,MAAM,CAAC;EAC1B;EAEA,IAAIE,MAAM,GAAGX,GAAG,CAACE,SAAS,CAAEC,IAAI,IAAKA,IAAI,KAAK,GAAG,CAAC;EAClD,IAAIQ,MAAM,KAAK,CAAC,CAAC,EAAE;IACjB,IAAIL,gBAAgB,GAAGN,GAAG,CAACO,KAAK,CAACI,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,CAAC,CAAC;IACxD,IAAIH,aAAa,GAAGF,gBAAgB,CAAC,CAAC,CAAC,GAAGA,gBAAgB,CAAC,CAAC,CAAC;IAE7D,IAAIG,MAAM,GAAGT,GAAG,CACbO,KAAK,CAAC,CAAC,EAAEI,MAAM,GAAG,CAAC,CAAC,CACpBD,MAAM,CAACF,aAAa,CAAC,CACrBE,MAAM,CAACV,GAAG,CAACO,KAAK,CAACI,MAAM,GAAG,CAAC,CAAC,CAAC;IAEhC,OAAOZ,SAAS,CAACU,MAAM,CAAC;EAC1B;EAEAG,uBAAuB,CAACZ,GAAG,EAAEa,SAAS,CAACC,GAAG,CAACC,QAAQ,CAAC;EAEpD,OAAOf,GAAG,CAAC,CAAC,CAAC;AACf;AAEA,SAASY,uBAAuB,CAACZ,GAAG,EAAEgB,QAAQ,EAAE;EAC9C,IAAIC,aAAa,GAAGjB,GAAG,CAACE,SAAS,CAAEC,IAAI,IAAKA,IAAI,KAAKa,QAAQ,CAACE,OAAO,CAAC;EACtE,IAAID,aAAa,KAAK,CAAC,CAAC,EAAE;IACxB,IAAIX,gBAAgB,GAAGN,GAAG,CAACO,KAAK,CAACU,aAAa,GAAG,CAAC,EAAEA,aAAa,GAAG,CAAC,CAAC;IACtE,IAAIT,aAAa,GAAGF,gBAAgB,CAAC,CAAC,CAAC,GAAGA,gBAAgB,CAAC,CAAC,CAAC;IAE7D,IAAIG,MAAM,GAAGT,GAAG,CACbO,KAAK,CAAC,CAAC,EAAEU,aAAa,GAAG,CAAC,CAAC,CAC3BP,MAAM,CAACF,aAAa,CAAC,CACrBE,MAAM,CAACV,GAAG,CAACO,KAAK,CAACU,aAAa,GAAG,CAAC,CAAC,CAAC;IAEvC,OAAOL,uBAAuB,CAACH,MAAM,EAAEO,QAAQ,CAAC;EAClD;EACA,OAAOhB,GAAG;AACZ;AAEA,IAAImB,WAAW,GAAG;EAChBC,GAAG,EAAE;IACHF,OAAO,EAAE,GAAG;IACZG,IAAI,EAAE;EACR,CAAC;EACDN,QAAQ,EAAE;IACRG,OAAO,EAAE,GAAG;IACZG,IAAI,EAAE;EACR;AACF,CAAC"},"metadata":{},"sourceType":"module"}