{"ast":null,"code":"export let displayAllExpression = \"\";\nlet openingParanthesesAfterTheLastDigit = 0;\nexport function FixIncompleteInputs(state, expr) {\n  console.log(\"ggggg\", /\\d/.test(expr) === false);\n  if (/\\d/.test(expr) === false) {\n    displayAllExpression = \"0\";\n  } else {\n    openingParanthesesAfterTheLastDigit = 0;\n    if (state.lastInputType !== \"digit\" || state.lastInput !== \")\") {\n      let lastDigitIndex = expr.split(\"\").reverse().findIndex(elem => /\\d|\\)/.test(elem));\n      displayAllExpression = expr.slice(0, expr.length - lastDigitIndex);\n      // console.log(\"expr\", expr, \"lastDigitIndex\", lastDigitIndex);\n      let afterTheLastDigit = expr.slice(expr.length - lastDigitIndex);\n      for (let i = 0; i < expr.length; i++) {\n        console.log(\"expr[i\", expr[i]);\n        if (expr[i] === \"(\") openingParanthesesAfterTheLastDigit++;\n      }\n    } else {\n      displayAllExpression = expr;\n    }\n    addMissingParenthesis(state.parenthesesDelta - openingParanthesesAfterTheLastDigit);\n    console.log(\"deleteRedundant after\", displayAllExpression);\n  }\n}\n_c = FixIncompleteInputs;\nfunction addMissingParenthesis(delta) {\n  if (delta > 0) {\n    displayAllExpression += \")\";\n    delta -= 1;\n    addMissingParenthesis(delta);\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"FixIncompleteInputs\");","map":{"version":3,"names":["displayAllExpression","openingParanthesesAfterTheLastDigit","FixIncompleteInputs","state","expr","console","log","test","lastInputType","lastInput","lastDigitIndex","split","reverse","findIndex","elem","slice","length","afterTheLastDigit","i","addMissingParenthesis","parenthesesDelta","delta"],"sources":["C:/Users/agsaf/Documents/GitHub/calculator/src/functions/FixIncompleteInputs.js"],"sourcesContent":["export let displayAllExpression = \"\";\r\n\r\nlet openingParanthesesAfterTheLastDigit = 0;\r\n\r\nexport function FixIncompleteInputs(state, expr) {\r\n  console.log(\"ggggg\", /\\d/.test(expr) === false);\r\n  if (/\\d/.test(expr) === false) {\r\n    displayAllExpression = \"0\";\r\n  } else {\r\n    openingParanthesesAfterTheLastDigit = 0;\r\n    if (state.lastInputType !== \"digit\" || state.lastInput !== \")\") {\r\n      let lastDigitIndex = expr\r\n        .split(\"\")\r\n        .reverse()\r\n        .findIndex((elem) => /\\d|\\)/.test(elem));\r\n      displayAllExpression = expr.slice(0, expr.length - lastDigitIndex);\r\n      // console.log(\"expr\", expr, \"lastDigitIndex\", lastDigitIndex);\r\n      let afterTheLastDigit = expr.slice(expr.length - lastDigitIndex);\r\n\r\n      for (let i = 0; i < expr.length; i++) {\r\n        console.log(\"expr[i\", expr[i]);\r\n        if (expr[i] === \"(\") openingParanthesesAfterTheLastDigit++;\r\n      }\r\n    } else {\r\n      displayAllExpression = expr;\r\n    }\r\n    addMissingParenthesis(state.parenthesesDelta - openingParanthesesAfterTheLastDigit);\r\n    console.log(\"deleteRedundant after\", displayAllExpression);\r\n  }\r\n}\r\n\r\nfunction addMissingParenthesis(delta) {\r\n  if (delta > 0) {\r\n    displayAllExpression += \")\";\r\n    delta -= 1;\r\n    addMissingParenthesis(delta);\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAO,IAAIA,oBAAoB,GAAG,EAAE;AAEpC,IAAIC,mCAAmC,GAAG,CAAC;AAE3C,OAAO,SAASC,mBAAmB,CAACC,KAAK,EAAEC,IAAI,EAAE;EAC/CC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACC,IAAI,CAACH,IAAI,CAAC,KAAK,KAAK,CAAC;EAC/C,IAAI,IAAI,CAACG,IAAI,CAACH,IAAI,CAAC,KAAK,KAAK,EAAE;IAC7BJ,oBAAoB,GAAG,GAAG;EAC5B,CAAC,MAAM;IACLC,mCAAmC,GAAG,CAAC;IACvC,IAAIE,KAAK,CAACK,aAAa,KAAK,OAAO,IAAIL,KAAK,CAACM,SAAS,KAAK,GAAG,EAAE;MAC9D,IAAIC,cAAc,GAAGN,IAAI,CACtBO,KAAK,CAAC,EAAE,CAAC,CACTC,OAAO,EAAE,CACTC,SAAS,CAAEC,IAAI,IAAK,OAAO,CAACP,IAAI,CAACO,IAAI,CAAC,CAAC;MAC1Cd,oBAAoB,GAAGI,IAAI,CAACW,KAAK,CAAC,CAAC,EAAEX,IAAI,CAACY,MAAM,GAAGN,cAAc,CAAC;MAClE;MACA,IAAIO,iBAAiB,GAAGb,IAAI,CAACW,KAAK,CAACX,IAAI,CAACY,MAAM,GAAGN,cAAc,CAAC;MAEhE,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,IAAI,CAACY,MAAM,EAAEE,CAAC,EAAE,EAAE;QACpCb,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,IAAI,CAACc,CAAC,CAAC,CAAC;QAC9B,IAAId,IAAI,CAACc,CAAC,CAAC,KAAK,GAAG,EAAEjB,mCAAmC,EAAE;MAC5D;IACF,CAAC,MAAM;MACLD,oBAAoB,GAAGI,IAAI;IAC7B;IACAe,qBAAqB,CAAChB,KAAK,CAACiB,gBAAgB,GAAGnB,mCAAmC,CAAC;IACnFI,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEN,oBAAoB,CAAC;EAC5D;AACF;AAAC,KAzBeE,mBAAmB;AA2BnC,SAASiB,qBAAqB,CAACE,KAAK,EAAE;EACpC,IAAIA,KAAK,GAAG,CAAC,EAAE;IACbrB,oBAAoB,IAAI,GAAG;IAC3BqB,KAAK,IAAI,CAAC;IACVF,qBAAqB,CAACE,KAAK,CAAC;EAC9B;AACF;AAAC;AAAA"},"metadata":{},"sourceType":"module"}