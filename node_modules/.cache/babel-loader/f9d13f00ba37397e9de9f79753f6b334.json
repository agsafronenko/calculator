{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agsaf\\\\Documents\\\\GitHub\\\\calculator\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./styles/styles.css\";\nimport $ from \"jquery\";\nimport { abs } from \"./functions/abs\";\nimport { saveState, stateStorage } from \"./functions/previousState\";\nimport { validInput } from \"./functions/factorial\";\nimport { trigonometryInDegrees, finalDisplayAll } from \"./functions/trigonometry\";\nimport { changeSign, finalDisplayAllChangeSign } from \"./functions/changeSign\";\nimport { switchToDenominator } from \"./functions/switchToDenominator\";\nimport calculate, { FixIncompleteInputs, lastLegitSymbol } from \"./functions/equals\";\nimport { displayAllExpression } from \"./functions/FixIncompleteInputs\";\nimport { alertStatus } from \"./functions/alertStatus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayAll: \"\",\n      displayCur: \"0\",\n      lastInput: \"\",\n      lastInputType: \"\",\n      decimalAlreadyUsed: false,\n      twoConsecutiveOperators: false,\n      lastResult: \"\",\n      parenthesesDelta: 0,\n      lastOperator: \"\"\n    };\n    this.handleClear = this.handleClear.bind(this);\n    this.handleOperator = this.handleOperator.bind(this);\n    this.handleDigit = this.handleDigit.bind(this);\n    this.handleEquals = this.handleEquals.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handleSquareRoot = this.handleSquareRoot.bind(this);\n    this.handleSquare = this.handleSquare.bind(this);\n    this.handlePreviousState = this.handlePreviousState.bind(this);\n    this.handleSpecialDigit = this.handleSpecialDigit.bind(this);\n    this.handleLog10 = this.handleLog10.bind(this);\n    this.handleLog = this.handleLog.bind(this);\n    this.handleLogE = this.handleLogE.bind(this);\n    this.handleFactorial = this.handleFactorial.bind(this);\n    this.handleTrigonometry = this.handleTrigonometry.bind(this);\n    this.handlePercentage = this.handlePercentage.bind(this);\n    this.handleCopyToClipboard = this.handleCopyToClipboard.bind(this);\n    this.handleChangeSign = this.handleChangeSign.bind(this);\n    this.handleAbs = this.handleAbs.bind(this);\n    this.handleSwitchToDenominator = this.handleSwitchToDenominator.bind(this);\n    this.handleModulo = this.handleModulo.bind(this);\n    this.handleLeftParenthesis = this.handleLeftParenthesis.bind(this);\n    this.handleRightParenthesis = this.handleRightParenthesis.bind(this);\n  }\n  handleClear(clearStorage) {\n    $(\"button\").css(\"pointerEvents\", \"auto\");\n    $(\"button\").css(\"opacity\", \"1\");\n    if (clearStorage === true) stateStorage.prevState = [];\n    this.setState({\n      displayAll: \"\",\n      displayCur: \"0\",\n      lastInput: \"\",\n      lastInputType: \"\",\n      decimalAlreadyUsed: false,\n      twoConsecutiveOperators: false,\n      lastResult: \"\",\n      parenthesesDelta: 0,\n      lastOperator: \"\"\n    });\n    alertStatus.negativeFactor = false;\n    alertStatus.nonIntegerFactor = false;\n    alertStatus.negativeLog = false;\n  }\n  handlePreviousState() {\n    $(\"button\").css(\"pointerEvents\", \"auto\");\n    $(\"button\").css(\"opacity\", \"1\");\n    if (stateStorage.prevState.length <= 1) {\n      this.handleClear(true);\n    } else {\n      stateStorage.prevState.shift();\n      this.setState({\n        displayAll: stateStorage.prevState[0].displayAll,\n        displayCur: stateStorage.prevState[0].displayCur,\n        lastInput: stateStorage.prevState[0].lastInput,\n        lastInputType: stateStorage.prevState[0].lastInputType,\n        decimalAlreadyUsed: stateStorage.prevState[0].decimalAlreadyUsed,\n        twoConsecutiveOperators: stateStorage.prevState[0].twoConsecutiveOperators,\n        lastResult: stateStorage.prevState[0].lastResult,\n        parenthesesDelta: stateStorage.prevState[0].parenthesesDelta,\n        lastOperator: stateStorage.prevState[0].lastOperator\n      }, () => {\n        alertStatus.negativeFactor = false;\n        if (/\\d.\\d!/.test(this.state.displayAll) === false) {\n          console.log(\"oladushki\");\n          alertStatus.nonIntegerFactor = false;\n        }\n      });\n    }\n\n    // alertStatus.negativeLog = false;\n  }\n\n  handleOperator(e) {\n    // only solo \" - \" is allowed as the first input among all operators\n    if (this.state.displayAll !== \"\" || e.target.value === \" - \") {\n      if (this.state.displayAll !== \" - \") {\n        // used to compare last two states and, in case of their equality, the stateStorage will not be updated\n        let penultimateInput = this.state.lastInput;\n\n        // handle consecutive input of multiple operators\n        if (this.state.twoConsecutiveOperators === true) {\n          this.setState(state => ({\n            displayAll: state.displayAll.slice(0, state.displayAll.length - lastLegitSymbol(state.displayAll)).concat(e.target.value),\n            displayCur: calculate(state, state.displayAll),\n            lastInput: e.target.value,\n            lastInputType: \"operator\",\n            twoConsecutiveOperators: false,\n            lastOperator: e.target.value\n          }), () => {\n            console.log(\"handleOperator stage 1 : this.state.displayAll\", this.state.displayAll);\n            if (e.target.value === \" - \" || e.target.value !== penultimateInput) saveState(this.state);\n          });\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value !== \" - \") {\n          if (this.state.displayAll.slice(this.state.displayAll.length - 4) !== \"( - \") {\n            this.setState(state => ({\n              displayAll: state.displayAll.slice(0, state.displayAll.length - lastLegitSymbol(state.displayAll)).concat(e.target.value),\n              displayCur: calculate(state, state.displayAll),\n              lastInput: e.target.value,\n              lastInputType: \"operator\",\n              twoConsecutiveOperators: false,\n              lastOperator: e.target.value\n            }), () => {\n              console.log(\"handleOperator stage 2 : this.state.displayAll\", this.state.displayAll);\n              console.log(\"heyyyyy\", e.target.value, this.state.lastInput);\n              if (e.target.value !== penultimateInput) saveState(this.state);\n            });\n          }\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInput === \" log base \" && e.target.value === \" - \") {\n          this.setState({}, () => {\n            console.log(\"handleOperator stage 2.5 : this.state.displayAll\", this.state.displayAll);\n            console.log(\"heyyyyy\", e.target.value, this.state.lastInput);\n          });\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value === \" - \") {\n          console.log(\"hola\", this.state.displayAll.slice(this.state.displayAll.length - 4));\n          if (this.state.displayAll.slice(this.state.displayAll.length - 4) !== \"( - \") {\n            this.setState(state => ({\n              displayAll: state.displayAll.concat(e.target.value),\n              displayCur: calculate(state, state.displayAll),\n              lastInput: e.target.value,\n              lastInputType: \"operator\",\n              twoConsecutiveOperators: true,\n              lastOperator: e.target.value\n            }), () => {\n              console.log(\"handleOperator stage 3: this.state.displayAll\", this.state.displayAll);\n              saveState(this.state);\n            });\n          }\n        }\n        if (this.state.lastInput === \"(\") {\n          this.setState(state => ({\n            displayAll: e.target.value === \" - \" ? state.displayAll.concat(e.target.value) : state.displayAll,\n            // displayCur: state.displayCur,\n            lastInput: e.target.value === \" - \" ? e.target.value : state.lastInput,\n            lastInputType: e.target.value === \" - \" ? \"operator\" : state.lastInputType,\n            lastOperator: e.target.value === \" - \" ? e.target.value : state.lastOperator\n          }), () => {\n            console.log(\"handleOperator stage 4: this.state.displayAll\", this.state.displayAll);\n          });\n        } else if (this.state.lastInput === \")\") {\n          this.setState(state => ({\n            displayAll: state.displayAll.concat(e.target.value),\n            // displayCur: calculate(state, state.displayAll),\n            lastInput: e.target.value,\n            lastInputType: \"operator\",\n            lastOperator: e.target.value\n          }), () => {\n            console.log(\"handleOperator stage 5: this.state.displayAll\", this.state.displayAll);\n            saveState(this.state);\n          });\n        }\n        if (this.state.lastInputType !== \"parenthesis\" && this.state.lastInputType !== \"operator\") {\n          this.setState(state => ({\n            displayAll: state.lastResult === \"\" ? state.displayAll.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n            displayCur: calculate(state, this.state.displayAll),\n            lastInput: e.target.value,\n            lastInputType: \"operator\",\n            decimalAlreadyUsed: false,\n            lastResult: \"\",\n            lastOperator: e.target.value\n          }), () => {\n            console.log(\"handleOperator stage 6: this.state.displayAll\", this.state.displayAll);\n            saveState(this.state);\n          });\n        }\n      }\n    }\n  }\n  handleDigit(e) {\n    if (this.state.lastResult !== \"\") this.handleClear(false);\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\") {\n      this.setState(state => ({\n        displayAll: state.lastInputType === \"operator\" || state.lastInput === \"(\" ? state.displayAll.concat(e.target.value) : Number(state.displayCur) === 0 && state.displayCur.length === 1 || !isFinite(state.lastInput) && state.lastInput !== \".\" ? state.displayAll.slice(0, state.displayAll.length - 1).concat(e.target.value) : state.displayAll.concat(e.target.value),\n        displayCur: Number(state.displayCur) === 0 && state.displayCur.length === 1 || !isFinite(state.lastInput) && state.lastInput !== \".\" ? e.target.value : state.displayCur.concat(e.target.value),\n        lastInput: e.target.value,\n        lastInputType: \"digit\",\n        twoConsecutiveOperators: false\n      }), () => {\n        saveState(this.state);\n      });\n    }\n  }\n  handleSpecialDigit(e) {\n    if (this.state.lastResult !== \"\") this.handleClear(false);\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\" && this.state.decimalAlreadyUsed !== true) {\n      this.setState(state => ({\n        displayAll: state.lastInputType === \"operator\" || state.lastInput === \"(\" ? state.displayAll.concat(e.target.value) : Number(state.displayCur) === 0 && state.displayCur.length === 1 || !isFinite(state.lastInput) && state.lastInput !== \".\" ? state.displayAll.slice(0, state.displayAll.length - 1).concat(e.target.value) : state.displayAll.concat(e.target.value),\n        displayCur: e.target.value,\n        lastInput: e.target.value[e.target.value.length - 1],\n        lastInputType: \"digit\",\n        decimalAlreadyUsed: true,\n        twoConsecutiveOperators: false\n      }), () => {\n        saveState(this.state);\n      });\n    }\n  }\n  handleDecimal() {\n    if ((this.state.lastInputType === \"digit\" || this.state.lastInputType === \"operator\" || this.state.lastInput === \"\" || this.state.lastInput === \"(\") && this.state.decimalAlreadyUsed === false) {\n      this.setState(state => ({\n        displayAll: state.lastResult === \"\" ? state.displayAll.concat(isFinite(state.lastInput) && this.state.displayAll !== \"\" ? \".\" : \"0.\") : /\\./.test(state.lastResult) ? \"\".concat(\"0.\") : \"\".concat(state.lastResult).concat(\".\"),\n        displayCur: state.lastResult === \"\" ? isFinite(state.lastInput) ? state.displayCur.concat(\".\") : \"0.\" : /\\./.test(state.lastResult) ? \"\".concat(\"0.\") : \"\".concat(state.lastResult).concat(\".\"),\n        lastInput: \".\",\n        lastInputType: \"decimal\",\n        decimalAlreadyUsed: true,\n        twoConsecutiveOperators: false,\n        lastResult: \"\"\n      }), () => {\n        saveState(this.state);\n      });\n    }\n  }\n  handleSquare() {\n    document.getElementById(\"exponentiation\").click();\n    setTimeout(() => {\n      if (this.state.lastInput === \" ^ \") {\n        document.getElementById(\"two\").click();\n        setTimeout(() => this.setState(state => ({\n          displayCur: calculate(state, state.displayAll)\n        })), 0);\n      }\n    }, 0);\n  }\n  handleSquareRoot() {\n    document.getElementById(\"anyRoot\").click();\n    setTimeout(() => {\n      if (this.state.lastInput === \" yroot \") {\n        document.getElementById(\"two\").click();\n        setTimeout(() => this.setState(state => ({\n          displayCur: calculate(state, state.displayAll)\n        })), 0);\n      }\n    }, 0);\n  }\n\n  // handleExponentiation(e) {\n  //   this.setState(\n  //     (state) => ({\n  //       displayAll: state.lastResult === \"\" ? state.displayAll.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n  //       displayCur: e.target.value,\n  //       lastInput: e.target.value,\n  //       lastInputType: \"operator\",\n  //       twoConsecutiveOperators: false,\n  //       decimalAlreadyUsed: false,\n  //       lastResult: \"\",\n  //       lastOperator: \" ^ \",\n  //     }),\n  //     () => {\n  //       console.log(\"inside handle ^ after setState:  displayAll\", this.state.displayAll);\n  //       saveState(this.state);\n  //     }\n  //   );\n  // }\n\n  // handleRoot(e) {\n  //   this.setState(\n  //     (state) => ({\n  //       displayAll: state.lastResult === \"\" ? state.displayAll.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n  //       displayCur: e.target.value,\n  //       lastInput: e.target.value,\n  //       lastInputType: \"operator\",\n  //       twoConsecutiveOperators: false,\n  //       decimalAlreadyUsed: false,\n  //       lastResult: \"\",\n  //       lastOperator: \" yroot \",\n  //     }),\n  //     () => {\n  //       console.log(\"after displayAll\", this.state.displayAll);\n  //       saveState(this.state);\n  //     }\n  //   );\n  // }\n\n  handleLog(e) {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\n      console.log(\"inside handle log: displayAll\", this.state.displayAll);\n      this.setState(state => ({\n        displayAll: state.lastResult === \"\" ? state.displayAll.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n        displayCur: \"\",\n        lastInput: e.target.value,\n        lastInputType: \"operator\",\n        decimalAlreadyUsed: false,\n        twoConsecutiveOperators: false,\n        lastResult: \"\",\n        lastOperator: e.target.value\n      }), () => {\n        console.log(\"inside handle log after setState: displayAll\", this.state.displayAll);\n        saveState(this.state);\n      });\n    }\n  }\n  handleLog10() {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\n      console.log(\"inside handle log10: displayAll\", this.state.displayAll);\n      this.setState(state => ({\n        displayAll: state.lastResult === \"\" ? state.displayAll.concat(\" log base 10\") : \"\".concat(state.lastResult).concat(\" log base 10\"),\n        lastInput: \"10\",\n        lastInputType: \"digit\",\n        decimalAlreadyUsed: false,\n        twoConsecutiveOperators: false,\n        lastResult: \"\",\n        lastOperator: \" log base \"\n      }), () => {\n        this.setState(state => ({\n          displayCur: calculate(state, state.displayAll)\n        }));\n        console.log(\"inside handle log10 after setState:  displayAll\", this.state.displayAll);\n        saveState(this.state);\n      });\n    }\n  }\n  handleLogE() {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\n      console.log(\"inside handle logE: displayAll\", this.state.displayAll);\n      this.setState(state => ({\n        displayAll: state.lastResult === \"\" ? state.displayAll.concat(` log base ${Math.E}`) : \"\".concat(state.lastResult).concat(` log base ${Math.E}`),\n        lastInput: `${Math.E}`,\n        lastInputType: \"digit\",\n        decimalAlreadyUsed: true,\n        twoConsecutiveOperators: false,\n        lastResult: \"\",\n        lastOperator: \" log base \"\n      }), () => {\n        this.setState(state => ({\n          displayCur: calculate(state, state.displayAll)\n        }));\n        console.log(\"inside handle logE after setState:  displayAll\", this.state.displayAll);\n        saveState(this.state);\n      });\n    }\n  }\n  handleFactorial() {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\" || this.state.lastInput === \"%\" && !this.state.displayAll.match(/!%/)) {\n      this.setState(state => ({\n        displayAll: state.lastResult === \"\" ? state.displayAll.concat(\"!\") : \"\".concat(state.lastResult).concat(\"!\"),\n        lastInput: \"!\",\n        lastInputType: \"!\",\n        decimalAlreadyUsed: false,\n        lastResult: \"\",\n        lastOperator: \"!\"\n      }), () => {\n        let result = calculate(this.state, this.state.displayAll);\n        this.setState({\n          displayCur: result\n        });\n        console.log(\"inside handle factorial after setState:  displayAll\", this.state.displayAll);\n        saveState(this.state);\n      });\n    }\n  }\n  handleTrigonometry(e) {\n    console.log(\"you are in handleTrigonometry\", this.state.lastInputType);\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastInput === \")\" || this.state.lastInput === \".\") {\n      let result = trigonometryInDegrees(e.target.value, this.state);\n      console.log(\"trigonometry\", result);\n      this.setState({\n        displayAll: result,\n        lastInput: \")\",\n        lastInputType: \"parenthesis\",\n        decimalAlreadyUsed: false,\n        lastResult: \"\",\n        lastOperator: \"trigonometry\"\n      }, () => {\n        this.setState(state => ({\n          displayCur: calculate(state, state.displayAll)\n        }));\n        console.log(\"inside trigonometry after setState:  displayAll\", this.state.displayAll);\n        saveState(this.state);\n      });\n    }\n  }\n  handlePercentage() {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\" || this.state.lastInput === \"!\" && !this.state.displayAll.match(/%!/)) {\n      this.setState(state => ({\n        displayAll: state.lastResult === \"\" ? state.displayAll.concat(\"%\") : \"\".concat(state.lastResult).concat(\"%\"),\n        lastInput: \"%\",\n        lastInputType: \"%\",\n        decimalAlreadyUsed: false,\n        lastResult: \"\",\n        lastOperator: \"%\"\n      }), () => {\n        this.setState(state => ({\n          displayCur: calculate(state, state.displayAll)\n        }));\n        console.log(\"inside handle log10 after setState:  displayAll\", this.state.displayAll);\n        saveState(this.state);\n      });\n    }\n  }\n  handleChangeSign() {\n    if (this.state.lastOperator !== \" log base \") {\n      let result = changeSign(this.state);\n      this.setState({\n        displayAll: result,\n        lastResult: \"\"\n      }, () => {\n        this.setState(state => ({\n          displayCur: calculate(state, state.displayAll)\n        }));\n        console.log(\"inside handle changeSign after setState:  displayAll\", this.state.displayAll);\n        saveState(this.state);\n      });\n    }\n  }\n  handleAbs() {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastInput === \")\" || this.state.lastInput === \".\") {\n      let result = abs(this.state);\n      this.setState({\n        displayAll: result,\n        lastInput: \")\",\n        lastInputType: \"parenthesis\",\n        decimalAlreadyUsed: false,\n        lastOperator: \"abs\",\n        lastResult: \"\"\n      }, () => {\n        this.setState(state => ({\n          displayCur: calculate(state, state.displayAll)\n        }));\n        console.log(\"inside abs after setState:  displayAll\", this.state.displayAll);\n        saveState(this.state);\n      });\n    }\n  }\n  handleSwitchToDenominator() {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastInput === \")\" || this.state.lastInput === \".\") {\n      let result = switchToDenominator(this.state);\n      this.setState({\n        displayAll: result,\n        lastInput: \")\",\n        lastInputType: \"parenthesis\",\n        decimalAlreadyUsed: false,\n        lastOperator: \"denominator\",\n        lastResult: \"\"\n      }, () => {\n        this.setState(state => ({\n          displayCur: calculate(state, state.displayAll)\n        }));\n        console.log(\"inside denominator after setState:  displayAll\", this.state.displayAll);\n        saveState(this.state);\n      });\n    }\n  }\n  handleModulo(e) {\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastInput === \".\") {\n      this.setState(state => ({\n        displayAll: state.lastResult === \"\" ? state.lastInput === \".\" ? state.displayAll.concat(\"0\").concat(e.target.value) : state.displayAll.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\n        lastInput: e.target.value,\n        lastInputType: \"operator\",\n        decimalAlreadyUsed: false,\n        lastResult: \"\",\n        lastOperator: e.target.value\n      }), () => {\n        this.setState(state => ({\n          displayCur: calculate(state, state.displayAll)\n        }));\n        console.log(\"inside modulo after setState:  displayAll\", this.state.displayAll);\n        saveState(this.state);\n      });\n    }\n  }\n  handleLeftParenthesis(e) {\n    if (this.state.lastInputType === \"operator\" || this.state.lastInput === \"(\" || this.state.displayAll === \"\" || this.state.lastResult !== \"\") {\n      this.setState(state => ({\n        displayAll: state.lastResult === \"\" ? state.displayAll.concat(e.target.value) : \"\".concat(e.target.value),\n        displayCur: state.lastResult === \"\" ? state.displayCur : \"\",\n        lastInput: \"(\",\n        lastInputType: \"parenthesis\",\n        decimalAlreadyUsed: false,\n        twoConsecutiveOperators: false,\n        lastResult: \"\",\n        parenthesesDelta: state.parenthesesDelta + 1,\n        lastOperator: e.target.value\n      }), () => {\n        console.log(\"inside leftParenthesis after setState:  displayAll\", this.state.displayAll);\n        saveState(this.state);\n      });\n    }\n  }\n  handleRightParenthesis(e) {\n    console.log(\"this.state.parthersesDelta\", this.state.parenthesesDelta);\n    if (this.state.parenthesesDelta > 0) {\n      if (this.state.lastInputType === \"digit\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastInput === \")\" || this.state.lastInput === \".\") {\n        this.setState(state => ({\n          displayAll: state.lastResult === \"\" ? state.displayAll.concat(e.target.value) : \"\".concat(e.target.value),\n          displayCur: calculate(state, state.displayAll),\n          lastInput: \")\",\n          lastInputType: \"parenthesis\",\n          decimalAlreadyUsed: false,\n          parenthesesDelta: state.parenthesesDelta - 1,\n          lastOperator: e.target.value\n        }), () => {\n          console.log(\"inside rightParenthesis after setState:  displayAll\", this.state.displayAll);\n          saveState(this.state);\n        });\n      }\n    }\n  }\n  handleEquals() {\n    if (this.state.lastResult === \"\") {\n      console.log(\"check parenthesis after adding missing\", this.state.displayAll);\n      let result = calculate(this.state, this.state.displayAll);\n      this.setState({\n        displayAll: displayAllExpression.concat(\" = \").concat(result < 0 ? ` - ${Math.abs(result)}` : `${result}`),\n        displayCur: result,\n        lastInput: \"\",\n        lastInputType: \"digit\",\n        decimalAlreadyUsed: false,\n        twoConsecutiveOperators: false,\n        lastResult: result < 0 ? ` - ${Math.abs(result)}` : `${result}`,\n        parenthesesDelta: 0,\n        lastOperator: \"equal\"\n      }, () => {\n        saveState(this.state);\n        alertStatus.negativeFactor = false;\n        alertStatus.nonIntegerFactor = false;\n        alertStatus.negativeLog = false;\n        console.log(\"Inside handleEquals: final result\", result);\n      });\n    }\n  }\n  handleCopyToClipboard() {\n    let copyResult = document.getElementById(\"display\").innerText;\n    navigator.clipboard.writeText(copyResult);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        ops: this.state.displayAll,\n        cur: this.state.displayCur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        clear: this.handleClear,\n        operator: this.handleOperator,\n        digit: this.handleDigit,\n        equals: this.handleEquals,\n        decimal: this.handleDecimal\n        // exponentiation={this.handleExponentiation}\n        // root={this.handleRoot}\n        ,\n        square: this.handleSquare,\n        squareRoot: this.handleSquareRoot,\n        previousState: this.handlePreviousState,\n        specialDigit: this.handleSpecialDigit,\n        log10: this.handleLog10,\n        log: this.handleLog,\n        logE: this.handleLogE,\n        factorial: this.handleFactorial,\n        trigonometry: this.handleTrigonometry,\n        percentage: this.handlePercentage,\n        copyToClipboard: this.handleCopyToClipboard,\n        changeSign: this.handleChangeSign,\n        abs: this.handleAbs,\n        switchToDenominator: this.handleSwitchToDenominator,\n        modulo: this.handleModulo,\n        leftParenthesis: this.handleLeftParenthesis,\n        rightParenthesis: this.handleRightParenthesis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"displayBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"displayAll\",\n          children: this.props.ops\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"display\",\n          children: this.props.cur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nclass Buttons extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"clear\",\n        onClick: () => this.props.clear(true),\n        children: \"AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"add\",\n        value: \" + \",\n        onClick: this.props.operator,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"seven\",\n        value: \"7\",\n        onClick: this.props.digit,\n        children: \"7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"eight\",\n        value: \"8\",\n        onClick: this.props.digit,\n        children: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"nine\",\n        value: \"9\",\n        onClick: this.props.digit,\n        children: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"subtract\",\n        value: \" - \",\n        onClick: this.props.operator,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"four\",\n        value: \"4\",\n        onClick: this.props.digit,\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"five\",\n        value: \"5\",\n        onClick: this.props.digit,\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"six\",\n        value: \"6\",\n        onClick: this.props.digit,\n        children: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"multiply\",\n        value: \" * \",\n        onClick: this.props.operator,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"one\",\n        value: \"1\",\n        onClick: this.props.digit,\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"two\",\n        value: \"2\",\n        onClick: this.props.digit,\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"three\",\n        value: \"3\",\n        onClick: this.props.digit,\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"divide\",\n        value: \" / \",\n        onClick: this.props.operator,\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"zero\",\n        value: \"0\",\n        onClick: this.props.digit,\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"decimal\",\n        onClick: this.props.decimal,\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"equals\",\n        onClick: this.props.equals,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"square\",\n        value: \"S\",\n        onClick: this.props.square,\n        children: \"S\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"squareRoot\",\n        value: \"R\",\n        onClick: this.props.squareRoot,\n        children: \"R\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"exponentiation\",\n        value: \" ^ \",\n        onClick: this.props.operator,\n        children: \"^\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"anyRoot\",\n        value: \" yroot \",\n        onClick: this.props.operator,\n        children: \"root\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"pi\",\n        value: Math.PI,\n        onClick: this.props.specialDigit,\n        children: \"Pi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"e\",\n        value: Math.E,\n        onClick: this.props.specialDigit,\n        children: \"e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"random\",\n        value: Math.random(),\n        onClick: this.props.specialDigit,\n        children: \"rand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"delete\",\n        onClick: this.props.previousState,\n        children: \"del\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"log10\",\n        onClick: this.props.log10,\n        children: \"log10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"log\",\n        value: \" log base \",\n        onClick: this.props.log,\n        children: \"log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"logE\",\n        onClick: this.props.logE,\n        children: \"logE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"factorial\",\n        onClick: this.props.factorial,\n        children: \"!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"sin\",\n        value: \"sin\",\n        onClick: this.props.trigonometry,\n        children: \"sin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"cos\",\n        value: \"cos\",\n        onClick: this.props.trigonometry,\n        children: \"cos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"tan\",\n        value: \"tan\",\n        onClick: this.props.trigonometry,\n        children: \"tan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"cot\",\n        value: \"cot\",\n        onClick: this.props.trigonometry,\n        children: \"cot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"sec\",\n        value: \"sec\",\n        onClick: this.props.trigonometry,\n        children: \"sec\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"csc\",\n        value: \"csc\",\n        onClick: this.props.trigonometry,\n        children: \"csc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"percentage\",\n        onClick: this.props.percentage,\n        children: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"copy\",\n        onClick: this.props.copyToClipboard,\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"sign\",\n        onClick: this.props.changeSign,\n        children: \"+/-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"abs\",\n        onClick: this.props.abs,\n        children: \"abs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"denominator\",\n        onClick: this.props.switchToDenominator,\n        children: \"1/x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"modulo\",\n        value: \" mod \",\n        onClick: this.props.modulo,\n        children: \"mod\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"leftParenthesis\",\n        value: \"(\",\n        onClick: this.props.leftParenthesis,\n        children: \"(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"rightParenthesis\",\n        value: \")\",\n        onClick: this.props.rightParenthesis,\n        children: \")\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"footer\",\n      children: \"This project was build using: HTML, CSS, JavaScript, React, Redux, jQuery, Bootstrap and SASS without using eval() function\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 865,\n    columnNumber: 5\n  }, this);\n}\n_c = Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["React","$","abs","saveState","stateStorage","validInput","trigonometryInDegrees","finalDisplayAll","changeSign","finalDisplayAllChangeSign","switchToDenominator","calculate","FixIncompleteInputs","lastLegitSymbol","displayAllExpression","alertStatus","Calculator","Component","constructor","props","state","displayAll","displayCur","lastInput","lastInputType","decimalAlreadyUsed","twoConsecutiveOperators","lastResult","parenthesesDelta","lastOperator","handleClear","bind","handleOperator","handleDigit","handleEquals","handleDecimal","handleSquareRoot","handleSquare","handlePreviousState","handleSpecialDigit","handleLog10","handleLog","handleLogE","handleFactorial","handleTrigonometry","handlePercentage","handleCopyToClipboard","handleChangeSign","handleAbs","handleSwitchToDenominator","handleModulo","handleLeftParenthesis","handleRightParenthesis","clearStorage","css","prevState","setState","negativeFactor","nonIntegerFactor","negativeLog","length","shift","test","console","log","e","target","value","penultimateInput","slice","concat","Number","isFinite","document","getElementById","click","setTimeout","Math","E","match","result","copyResult","innerText","navigator","clipboard","writeText","render","Display","ops","cur","Buttons","clear","operator","digit","decimal","equals","square","squareRoot","PI","specialDigit","random","previousState","log10","logE","factorial","trigonometry","percentage","copyToClipboard","modulo","leftParenthesis","rightParenthesis","Footer"],"sources":["C:/Users/agsaf/Documents/GitHub/calculator/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./styles/styles.css\";\r\nimport $ from \"jquery\";\r\nimport { abs } from \"./functions/abs\";\r\nimport { saveState, stateStorage } from \"./functions/previousState\";\r\nimport { validInput } from \"./functions/factorial\";\r\nimport { trigonometryInDegrees, finalDisplayAll } from \"./functions/trigonometry\";\r\nimport { changeSign, finalDisplayAllChangeSign } from \"./functions/changeSign\";\r\nimport { switchToDenominator } from \"./functions/switchToDenominator\";\r\nimport calculate, { FixIncompleteInputs, lastLegitSymbol } from \"./functions/equals\";\r\nimport { displayAllExpression } from \"./functions/FixIncompleteInputs\";\r\nimport { alertStatus } from \"./functions/alertStatus\";\r\n\r\nexport default class Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      displayAll: \"\",\r\n      displayCur: \"0\",\r\n      lastInput: \"\",\r\n      lastInputType: \"\",\r\n      decimalAlreadyUsed: false,\r\n      twoConsecutiveOperators: false,\r\n      lastResult: \"\",\r\n      parenthesesDelta: 0,\r\n      lastOperator: \"\",\r\n    };\r\n    this.handleClear = this.handleClear.bind(this);\r\n    this.handleOperator = this.handleOperator.bind(this);\r\n    this.handleDigit = this.handleDigit.bind(this);\r\n    this.handleEquals = this.handleEquals.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.handleSquareRoot = this.handleSquareRoot.bind(this);\r\n    this.handleSquare = this.handleSquare.bind(this);\r\n    this.handlePreviousState = this.handlePreviousState.bind(this);\r\n    this.handleSpecialDigit = this.handleSpecialDigit.bind(this);\r\n    this.handleLog10 = this.handleLog10.bind(this);\r\n    this.handleLog = this.handleLog.bind(this);\r\n    this.handleLogE = this.handleLogE.bind(this);\r\n    this.handleFactorial = this.handleFactorial.bind(this);\r\n    this.handleTrigonometry = this.handleTrigonometry.bind(this);\r\n    this.handlePercentage = this.handlePercentage.bind(this);\r\n    this.handleCopyToClipboard = this.handleCopyToClipboard.bind(this);\r\n    this.handleChangeSign = this.handleChangeSign.bind(this);\r\n    this.handleAbs = this.handleAbs.bind(this);\r\n    this.handleSwitchToDenominator = this.handleSwitchToDenominator.bind(this);\r\n    this.handleModulo = this.handleModulo.bind(this);\r\n    this.handleLeftParenthesis = this.handleLeftParenthesis.bind(this);\r\n    this.handleRightParenthesis = this.handleRightParenthesis.bind(this);\r\n  }\r\n\r\n  handleClear(clearStorage) {\r\n    $(\"button\").css(\"pointerEvents\", \"auto\");\r\n    $(\"button\").css(\"opacity\", \"1\");\r\n    if (clearStorage === true) stateStorage.prevState = [];\r\n    this.setState({\r\n      displayAll: \"\",\r\n      displayCur: \"0\",\r\n      lastInput: \"\",\r\n      lastInputType: \"\",\r\n      decimalAlreadyUsed: false,\r\n      twoConsecutiveOperators: false,\r\n      lastResult: \"\",\r\n      parenthesesDelta: 0,\r\n      lastOperator: \"\",\r\n    });\r\n    alertStatus.negativeFactor = false;\r\n    alertStatus.nonIntegerFactor = false;\r\n    alertStatus.negativeLog = false;\r\n  }\r\n\r\n  handlePreviousState() {\r\n    $(\"button\").css(\"pointerEvents\", \"auto\");\r\n    $(\"button\").css(\"opacity\", \"1\");\r\n    if (stateStorage.prevState.length <= 1) {\r\n      this.handleClear(true);\r\n    } else {\r\n      stateStorage.prevState.shift();\r\n      this.setState(\r\n        {\r\n          displayAll: stateStorage.prevState[0].displayAll,\r\n          displayCur: stateStorage.prevState[0].displayCur,\r\n          lastInput: stateStorage.prevState[0].lastInput,\r\n          lastInputType: stateStorage.prevState[0].lastInputType,\r\n          decimalAlreadyUsed: stateStorage.prevState[0].decimalAlreadyUsed,\r\n          twoConsecutiveOperators: stateStorage.prevState[0].twoConsecutiveOperators,\r\n          lastResult: stateStorage.prevState[0].lastResult,\r\n          parenthesesDelta: stateStorage.prevState[0].parenthesesDelta,\r\n          lastOperator: stateStorage.prevState[0].lastOperator,\r\n        },\r\n        () => {\r\n          alertStatus.negativeFactor = false;\r\n          if (/\\d.\\d!/.test(this.state.displayAll) === false) {\r\n            console.log(\"oladushki\");\r\n            alertStatus.nonIntegerFactor = false;\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    // alertStatus.negativeLog = false;\r\n  }\r\n\r\n  handleOperator(e) {\r\n    // only solo \" - \" is allowed as the first input among all operators\r\n    if (this.state.displayAll !== \"\" || e.target.value === \" - \") {\r\n      if (this.state.displayAll !== \" - \") {\r\n        // used to compare last two states and, in case of their equality, the stateStorage will not be updated\r\n        let penultimateInput = this.state.lastInput;\r\n\r\n        // handle consecutive input of multiple operators\r\n        if (this.state.twoConsecutiveOperators === true) {\r\n          this.setState(\r\n            (state) => ({\r\n              displayAll: state.displayAll.slice(0, state.displayAll.length - lastLegitSymbol(state.displayAll)).concat(e.target.value),\r\n              displayCur: calculate(state, state.displayAll),\r\n              lastInput: e.target.value,\r\n              lastInputType: \"operator\",\r\n              twoConsecutiveOperators: false,\r\n              lastOperator: e.target.value,\r\n            }),\r\n            () => {\r\n              console.log(\"handleOperator stage 1 : this.state.displayAll\", this.state.displayAll);\r\n              if (e.target.value === \" - \" || e.target.value !== penultimateInput) saveState(this.state);\r\n            }\r\n          );\r\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value !== \" - \") {\r\n          if (this.state.displayAll.slice(this.state.displayAll.length - 4) !== \"( - \") {\r\n            this.setState(\r\n              (state) => ({\r\n                displayAll: state.displayAll.slice(0, state.displayAll.length - lastLegitSymbol(state.displayAll)).concat(e.target.value),\r\n                displayCur: calculate(state, state.displayAll),\r\n                lastInput: e.target.value,\r\n                lastInputType: \"operator\",\r\n                twoConsecutiveOperators: false,\r\n                lastOperator: e.target.value,\r\n              }),\r\n\r\n              () => {\r\n                console.log(\"handleOperator stage 2 : this.state.displayAll\", this.state.displayAll);\r\n                console.log(\"heyyyyy\", e.target.value, this.state.lastInput);\r\n                if (e.target.value !== penultimateInput) saveState(this.state);\r\n              }\r\n            );\r\n          }\r\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInput === \" log base \" && e.target.value === \" - \") {\r\n          this.setState(\r\n            {},\r\n\r\n            () => {\r\n              console.log(\"handleOperator stage 2.5 : this.state.displayAll\", this.state.displayAll);\r\n              console.log(\"heyyyyy\", e.target.value, this.state.lastInput);\r\n            }\r\n          );\r\n        } else if (this.state.twoConsecutiveOperators === false && this.state.lastInputType === \"operator\" && e.target.value === \" - \") {\r\n          console.log(\"hola\", this.state.displayAll.slice(this.state.displayAll.length - 4));\r\n          if (this.state.displayAll.slice(this.state.displayAll.length - 4) !== \"( - \") {\r\n            this.setState(\r\n              (state) => ({\r\n                displayAll: state.displayAll.concat(e.target.value),\r\n                displayCur: calculate(state, state.displayAll),\r\n                lastInput: e.target.value,\r\n                lastInputType: \"operator\",\r\n                twoConsecutiveOperators: true,\r\n                lastOperator: e.target.value,\r\n              }),\r\n              () => {\r\n                console.log(\"handleOperator stage 3: this.state.displayAll\", this.state.displayAll);\r\n                saveState(this.state);\r\n              }\r\n            );\r\n          }\r\n        }\r\n\r\n        if (this.state.lastInput === \"(\") {\r\n          this.setState(\r\n            (state) => ({\r\n              displayAll: e.target.value === \" - \" ? state.displayAll.concat(e.target.value) : state.displayAll,\r\n              // displayCur: state.displayCur,\r\n              lastInput: e.target.value === \" - \" ? e.target.value : state.lastInput,\r\n              lastInputType: e.target.value === \" - \" ? \"operator\" : state.lastInputType,\r\n              lastOperator: e.target.value === \" - \" ? e.target.value : state.lastOperator,\r\n            }),\r\n            () => {\r\n              console.log(\"handleOperator stage 4: this.state.displayAll\", this.state.displayAll);\r\n            }\r\n          );\r\n        } else if (this.state.lastInput === \")\") {\r\n          this.setState(\r\n            (state) => ({\r\n              displayAll: state.displayAll.concat(e.target.value),\r\n              // displayCur: calculate(state, state.displayAll),\r\n              lastInput: e.target.value,\r\n              lastInputType: \"operator\",\r\n              lastOperator: e.target.value,\r\n            }),\r\n            () => {\r\n              console.log(\"handleOperator stage 5: this.state.displayAll\", this.state.displayAll);\r\n              saveState(this.state);\r\n            }\r\n          );\r\n        }\r\n\r\n        if (this.state.lastInputType !== \"parenthesis\" && this.state.lastInputType !== \"operator\") {\r\n          this.setState(\r\n            (state) => ({\r\n              displayAll: state.lastResult === \"\" ? state.displayAll.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\r\n              displayCur: calculate(state, this.state.displayAll),\r\n              lastInput: e.target.value,\r\n              lastInputType: \"operator\",\r\n              decimalAlreadyUsed: false,\r\n              lastResult: \"\",\r\n              lastOperator: e.target.value,\r\n            }),\r\n            () => {\r\n              console.log(\"handleOperator stage 6: this.state.displayAll\", this.state.displayAll);\r\n              saveState(this.state);\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDigit(e) {\r\n    if (this.state.lastResult !== \"\") this.handleClear(false);\r\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\") {\r\n      this.setState(\r\n        (state) => ({\r\n          displayAll:\r\n            state.lastInputType === \"operator\" || state.lastInput === \"(\"\r\n              ? state.displayAll.concat(e.target.value)\r\n              : (Number(state.displayCur) === 0 && state.displayCur.length === 1) || (!isFinite(state.lastInput) && state.lastInput !== \".\")\r\n              ? state.displayAll.slice(0, state.displayAll.length - 1).concat(e.target.value)\r\n              : state.displayAll.concat(e.target.value),\r\n          displayCur: (Number(state.displayCur) === 0 && state.displayCur.length === 1) || (!isFinite(state.lastInput) && state.lastInput !== \".\") ? e.target.value : state.displayCur.concat(e.target.value),\r\n          lastInput: e.target.value,\r\n          lastInputType: \"digit\",\r\n          twoConsecutiveOperators: false,\r\n        }),\r\n        () => {\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleSpecialDigit(e) {\r\n    if (this.state.lastResult !== \"\") this.handleClear(false);\r\n    if (this.state.lastInput !== \")\" && this.state.lastInput !== \"!\" && this.state.lastInput !== \"%\" && this.state.decimalAlreadyUsed !== true) {\r\n      this.setState(\r\n        (state) => ({\r\n          displayAll:\r\n            state.lastInputType === \"operator\" || state.lastInput === \"(\"\r\n              ? state.displayAll.concat(e.target.value)\r\n              : (Number(state.displayCur) === 0 && state.displayCur.length === 1) || (!isFinite(state.lastInput) && state.lastInput !== \".\")\r\n              ? state.displayAll.slice(0, state.displayAll.length - 1).concat(e.target.value)\r\n              : state.displayAll.concat(e.target.value),\r\n          displayCur: e.target.value,\r\n          lastInput: e.target.value[e.target.value.length - 1],\r\n          lastInputType: \"digit\",\r\n          decimalAlreadyUsed: true,\r\n          twoConsecutiveOperators: false,\r\n        }),\r\n        () => {\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleDecimal() {\r\n    if ((this.state.lastInputType === \"digit\" || this.state.lastInputType === \"operator\" || this.state.lastInput === \"\" || this.state.lastInput === \"(\") && this.state.decimalAlreadyUsed === false) {\r\n      this.setState(\r\n        (state) => ({\r\n          displayAll: state.lastResult === \"\" ? state.displayAll.concat(isFinite(state.lastInput) && this.state.displayAll !== \"\" ? \".\" : \"0.\") : /\\./.test(state.lastResult) ? \"\".concat(\"0.\") : \"\".concat(state.lastResult).concat(\".\"),\r\n\r\n          displayCur: state.lastResult === \"\" ? (isFinite(state.lastInput) ? state.displayCur.concat(\".\") : \"0.\") : /\\./.test(state.lastResult) ? \"\".concat(\"0.\") : \"\".concat(state.lastResult).concat(\".\"),\r\n          lastInput: \".\",\r\n          lastInputType: \"decimal\",\r\n          decimalAlreadyUsed: true,\r\n          twoConsecutiveOperators: false,\r\n          lastResult: \"\",\r\n        }),\r\n        () => {\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleSquare() {\r\n    document.getElementById(\"exponentiation\").click();\r\n    setTimeout(() => {\r\n      if (this.state.lastInput === \" ^ \") {\r\n        document.getElementById(\"two\").click();\r\n        setTimeout(\r\n          () =>\r\n            this.setState((state) => ({\r\n              displayCur: calculate(state, state.displayAll),\r\n            })),\r\n          0\r\n        );\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  handleSquareRoot() {\r\n    document.getElementById(\"anyRoot\").click();\r\n    setTimeout(() => {\r\n      if (this.state.lastInput === \" yroot \") {\r\n        document.getElementById(\"two\").click();\r\n        setTimeout(\r\n          () =>\r\n            this.setState((state) => ({\r\n              displayCur: calculate(state, state.displayAll),\r\n            })),\r\n          0\r\n        );\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  // handleExponentiation(e) {\r\n  //   this.setState(\r\n  //     (state) => ({\r\n  //       displayAll: state.lastResult === \"\" ? state.displayAll.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\r\n  //       displayCur: e.target.value,\r\n  //       lastInput: e.target.value,\r\n  //       lastInputType: \"operator\",\r\n  //       twoConsecutiveOperators: false,\r\n  //       decimalAlreadyUsed: false,\r\n  //       lastResult: \"\",\r\n  //       lastOperator: \" ^ \",\r\n  //     }),\r\n  //     () => {\r\n  //       console.log(\"inside handle ^ after setState:  displayAll\", this.state.displayAll);\r\n  //       saveState(this.state);\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  // handleRoot(e) {\r\n  //   this.setState(\r\n  //     (state) => ({\r\n  //       displayAll: state.lastResult === \"\" ? state.displayAll.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\r\n  //       displayCur: e.target.value,\r\n  //       lastInput: e.target.value,\r\n  //       lastInputType: \"operator\",\r\n  //       twoConsecutiveOperators: false,\r\n  //       decimalAlreadyUsed: false,\r\n  //       lastResult: \"\",\r\n  //       lastOperator: \" yroot \",\r\n  //     }),\r\n  //     () => {\r\n  //       console.log(\"after displayAll\", this.state.displayAll);\r\n  //       saveState(this.state);\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  handleLog(e) {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\r\n      console.log(\"inside handle log: displayAll\", this.state.displayAll);\r\n      this.setState(\r\n        (state) => ({\r\n          displayAll: state.lastResult === \"\" ? state.displayAll.concat(e.target.value) : \"\".concat(state.lastResult).concat(e.target.value),\r\n          displayCur: \"\",\r\n          lastInput: e.target.value,\r\n          lastInputType: \"operator\",\r\n          decimalAlreadyUsed: false,\r\n          twoConsecutiveOperators: false,\r\n          lastResult: \"\",\r\n          lastOperator: e.target.value,\r\n        }),\r\n        () => {\r\n          console.log(\"inside handle log after setState: displayAll\", this.state.displayAll);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleLog10() {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\r\n      console.log(\"inside handle log10: displayAll\", this.state.displayAll);\r\n      this.setState(\r\n        (state) => ({\r\n          displayAll: state.lastResult === \"\" ? state.displayAll.concat(\" log base 10\") : \"\".concat(state.lastResult).concat(\" log base 10\"),\r\n          lastInput: \"10\",\r\n          lastInputType: \"digit\",\r\n          decimalAlreadyUsed: false,\r\n          twoConsecutiveOperators: false,\r\n          lastResult: \"\",\r\n          lastOperator: \" log base \",\r\n        }),\r\n        () => {\r\n          this.setState((state) => ({\r\n            displayCur: calculate(state, state.displayAll),\r\n          }));\r\n          console.log(\"inside handle log10 after setState:  displayAll\", this.state.displayAll);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleLogE() {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\") {\r\n      console.log(\"inside handle logE: displayAll\", this.state.displayAll);\r\n      this.setState(\r\n        (state) => ({\r\n          displayAll: state.lastResult === \"\" ? state.displayAll.concat(` log base ${Math.E}`) : \"\".concat(state.lastResult).concat(` log base ${Math.E}`),\r\n          lastInput: `${Math.E}`,\r\n          lastInputType: \"digit\",\r\n          decimalAlreadyUsed: true,\r\n          twoConsecutiveOperators: false,\r\n          lastResult: \"\",\r\n          lastOperator: \" log base \",\r\n        }),\r\n        () => {\r\n          this.setState((state) => ({\r\n            displayCur: calculate(state, state.displayAll),\r\n          }));\r\n          console.log(\"inside handle logE after setState:  displayAll\", this.state.displayAll);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleFactorial() {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\" || (this.state.lastInput === \"%\" && !this.state.displayAll.match(/!%/))) {\r\n      this.setState(\r\n        (state) => ({\r\n          displayAll: state.lastResult === \"\" ? state.displayAll.concat(\"!\") : \"\".concat(state.lastResult).concat(\"!\"),\r\n          lastInput: \"!\",\r\n          lastInputType: \"!\",\r\n          decimalAlreadyUsed: false,\r\n          lastResult: \"\",\r\n          lastOperator: \"!\",\r\n        }),\r\n        () => {\r\n          let result = calculate(this.state, this.state.displayAll);\r\n          this.setState({\r\n            displayCur: result,\r\n          });\r\n          console.log(\"inside handle factorial after setState:  displayAll\", this.state.displayAll);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleTrigonometry(e) {\r\n    console.log(\"you are in handleTrigonometry\", this.state.lastInputType);\r\n\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastInput === \")\" || this.state.lastInput === \".\") {\r\n      let result = trigonometryInDegrees(e.target.value, this.state);\r\n      console.log(\"trigonometry\", result);\r\n      this.setState(\r\n        {\r\n          displayAll: result,\r\n          lastInput: \")\",\r\n          lastInputType: \"parenthesis\",\r\n          decimalAlreadyUsed: false,\r\n          lastResult: \"\",\r\n          lastOperator: \"trigonometry\",\r\n        },\r\n        () => {\r\n          this.setState((state) => ({\r\n            displayCur: calculate(state, state.displayAll),\r\n          }));\r\n          console.log(\"inside trigonometry after setState:  displayAll\", this.state.displayAll);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handlePercentage() {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\" || (this.state.lastInput === \"!\" && !this.state.displayAll.match(/%!/))) {\r\n      this.setState(\r\n        (state) => ({\r\n          displayAll: state.lastResult === \"\" ? state.displayAll.concat(\"%\") : \"\".concat(state.lastResult).concat(\"%\"),\r\n          lastInput: \"%\",\r\n          lastInputType: \"%\",\r\n          decimalAlreadyUsed: false,\r\n          lastResult: \"\",\r\n          lastOperator: \"%\",\r\n        }),\r\n        () => {\r\n          this.setState((state) => ({\r\n            displayCur: calculate(state, state.displayAll),\r\n          }));\r\n          console.log(\"inside handle log10 after setState:  displayAll\", this.state.displayAll);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChangeSign() {\r\n    if (this.state.lastOperator !== \" log base \") {\r\n      let result = changeSign(this.state);\r\n\r\n      this.setState(\r\n        {\r\n          displayAll: result,\r\n          lastResult: \"\",\r\n        },\r\n        () => {\r\n          this.setState((state) => ({\r\n            displayCur: calculate(state, state.displayAll),\r\n          }));\r\n          console.log(\"inside handle changeSign after setState:  displayAll\", this.state.displayAll);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleAbs() {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastInput === \")\" || this.state.lastInput === \".\") {\r\n      let result = abs(this.state);\r\n\r\n      this.setState(\r\n        {\r\n          displayAll: result,\r\n          lastInput: \")\",\r\n          lastInputType: \"parenthesis\",\r\n          decimalAlreadyUsed: false,\r\n          lastOperator: \"abs\",\r\n          lastResult: \"\",\r\n        },\r\n        () => {\r\n          this.setState((state) => ({\r\n            displayCur: calculate(state, state.displayAll),\r\n          }));\r\n          console.log(\"inside abs after setState:  displayAll\", this.state.displayAll);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleSwitchToDenominator() {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastInput === \")\" || this.state.lastInput === \".\") {\r\n      let result = switchToDenominator(this.state);\r\n\r\n      this.setState(\r\n        {\r\n          displayAll: result,\r\n          lastInput: \")\",\r\n          lastInputType: \"parenthesis\",\r\n          decimalAlreadyUsed: false,\r\n          lastOperator: \"denominator\",\r\n          lastResult: \"\",\r\n        },\r\n        () => {\r\n          this.setState((state) => ({\r\n            displayCur: calculate(state, state.displayAll),\r\n          }));\r\n          console.log(\"inside denominator after setState:  displayAll\", this.state.displayAll);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleModulo(e) {\r\n    if (this.state.lastInputType === \"digit\" || this.state.lastInput === \")\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastInput === \".\") {\r\n      this.setState(\r\n        (state) => ({\r\n          displayAll: state.lastResult === \"\" ? (state.lastInput === \".\" ? state.displayAll.concat(\"0\").concat(e.target.value) : state.displayAll.concat(e.target.value)) : \"\".concat(state.lastResult).concat(e.target.value),\r\n          lastInput: e.target.value,\r\n          lastInputType: \"operator\",\r\n          decimalAlreadyUsed: false,\r\n          lastResult: \"\",\r\n          lastOperator: e.target.value,\r\n        }),\r\n        () => {\r\n          this.setState((state) => ({\r\n            displayCur: calculate(state, state.displayAll),\r\n          }));\r\n          console.log(\"inside modulo after setState:  displayAll\", this.state.displayAll);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleLeftParenthesis(e) {\r\n    if (this.state.lastInputType === \"operator\" || this.state.lastInput === \"(\" || this.state.displayAll === \"\" || this.state.lastResult !== \"\") {\r\n      this.setState(\r\n        (state) => ({\r\n          displayAll: state.lastResult === \"\" ? state.displayAll.concat(e.target.value) : \"\".concat(e.target.value),\r\n          displayCur: state.lastResult === \"\" ? state.displayCur : \"\",\r\n          lastInput: \"(\",\r\n          lastInputType: \"parenthesis\",\r\n          decimalAlreadyUsed: false,\r\n          twoConsecutiveOperators: false,\r\n          lastResult: \"\",\r\n          parenthesesDelta: state.parenthesesDelta + 1,\r\n          lastOperator: e.target.value,\r\n        }),\r\n        () => {\r\n          console.log(\"inside leftParenthesis after setState:  displayAll\", this.state.displayAll);\r\n          saveState(this.state);\r\n        }\r\n      );\r\n    }\r\n  }\r\n  handleRightParenthesis(e) {\r\n    console.log(\"this.state.parthersesDelta\", this.state.parenthesesDelta);\r\n    if (this.state.parenthesesDelta > 0) {\r\n      if (this.state.lastInputType === \"digit\" || this.state.lastInput === \"!\" || this.state.lastInput === \"%\" || this.state.lastInput === \")\" || this.state.lastInput === \".\") {\r\n        this.setState(\r\n          (state) => ({\r\n            displayAll: state.lastResult === \"\" ? state.displayAll.concat(e.target.value) : \"\".concat(e.target.value),\r\n            displayCur: calculate(state, state.displayAll),\r\n            lastInput: \")\",\r\n            lastInputType: \"parenthesis\",\r\n            decimalAlreadyUsed: false,\r\n            parenthesesDelta: state.parenthesesDelta - 1,\r\n            lastOperator: e.target.value,\r\n          }),\r\n          () => {\r\n            console.log(\"inside rightParenthesis after setState:  displayAll\", this.state.displayAll);\r\n            saveState(this.state);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  handleEquals() {\r\n    if (this.state.lastResult === \"\") {\r\n      console.log(\"check parenthesis after adding missing\", this.state.displayAll);\r\n\r\n      let result = calculate(this.state, this.state.displayAll);\r\n      this.setState(\r\n        {\r\n          displayAll: displayAllExpression.concat(\" = \").concat(result < 0 ? ` - ${Math.abs(result)}` : `${result}`),\r\n          displayCur: result,\r\n          lastInput: \"\",\r\n          lastInputType: \"digit\",\r\n          decimalAlreadyUsed: false,\r\n          twoConsecutiveOperators: false,\r\n          lastResult: result < 0 ? ` - ${Math.abs(result)}` : `${result}`,\r\n          parenthesesDelta: 0,\r\n          lastOperator: \"equal\",\r\n        },\r\n        () => {\r\n          saveState(this.state);\r\n          alertStatus.negativeFactor = false;\r\n          alertStatus.nonIntegerFactor = false;\r\n          alertStatus.negativeLog = false;\r\n          console.log(\"Inside handleEquals: final result\", result);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCopyToClipboard() {\r\n    let copyResult = document.getElementById(\"display\").innerText;\r\n    navigator.clipboard.writeText(copyResult);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Display ops={this.state.displayAll} cur={this.state.displayCur} />\r\n        <Buttons\r\n          clear={this.handleClear}\r\n          operator={this.handleOperator}\r\n          digit={this.handleDigit}\r\n          equals={this.handleEquals}\r\n          decimal={this.handleDecimal}\r\n          // exponentiation={this.handleExponentiation}\r\n          // root={this.handleRoot}\r\n          square={this.handleSquare}\r\n          squareRoot={this.handleSquareRoot}\r\n          previousState={this.handlePreviousState}\r\n          specialDigit={this.handleSpecialDigit}\r\n          log10={this.handleLog10}\r\n          log={this.handleLog}\r\n          logE={this.handleLogE}\r\n          factorial={this.handleFactorial}\r\n          trigonometry={this.handleTrigonometry}\r\n          percentage={this.handlePercentage}\r\n          copyToClipboard={this.handleCopyToClipboard}\r\n          changeSign={this.handleChangeSign}\r\n          abs={this.handleAbs}\r\n          switchToDenominator={this.handleSwitchToDenominator}\r\n          modulo={this.handleModulo}\r\n          leftParenthesis={this.handleLeftParenthesis}\r\n          rightParenthesis={this.handleRightParenthesis}\r\n        />\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Display extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"displayBox\">\r\n          <div id=\"displayAll\">{this.props.ops}</div>\r\n          <div id=\"display\">{this.props.cur}</div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Buttons extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <button id=\"clear\" onClick={() => this.props.clear(true)}>\r\n          AC\r\n        </button>\r\n        <button id=\"add\" value=\" + \" onClick={this.props.operator}>\r\n          +\r\n        </button>\r\n        <button id=\"seven\" value=\"7\" onClick={this.props.digit}>\r\n          7\r\n        </button>\r\n        <button id=\"eight\" value=\"8\" onClick={this.props.digit}>\r\n          8\r\n        </button>\r\n        <button id=\"nine\" value=\"9\" onClick={this.props.digit}>\r\n          9\r\n        </button>\r\n        <button id=\"subtract\" value=\" - \" onClick={this.props.operator}>\r\n          -\r\n        </button>\r\n        <button id=\"four\" value=\"4\" onClick={this.props.digit}>\r\n          4\r\n        </button>\r\n        <button id=\"five\" value=\"5\" onClick={this.props.digit}>\r\n          5\r\n        </button>\r\n        <button id=\"six\" value=\"6\" onClick={this.props.digit}>\r\n          6\r\n        </button>\r\n        <button id=\"multiply\" value=\" * \" onClick={this.props.operator}>\r\n          x\r\n        </button>\r\n        <button id=\"one\" value=\"1\" onClick={this.props.digit}>\r\n          1\r\n        </button>\r\n        <button id=\"two\" value=\"2\" onClick={this.props.digit}>\r\n          2\r\n        </button>\r\n        <button id=\"three\" value=\"3\" onClick={this.props.digit}>\r\n          3\r\n        </button>\r\n        <button id=\"divide\" value=\" / \" onClick={this.props.operator}>\r\n          /\r\n        </button>\r\n        <button id=\"zero\" value=\"0\" onClick={this.props.digit}>\r\n          0\r\n        </button>\r\n        <button id=\"decimal\" onClick={this.props.decimal}>\r\n          .\r\n        </button>\r\n        <button id=\"equals\" onClick={this.props.equals}>\r\n          =\r\n        </button>\r\n        <button id=\"square\" value=\"S\" onClick={this.props.square}>\r\n          S\r\n        </button>\r\n        <button id=\"squareRoot\" value=\"R\" onClick={this.props.squareRoot}>\r\n          R\r\n        </button>\r\n        <button id=\"exponentiation\" value=\" ^ \" onClick={this.props.operator}>\r\n          ^\r\n        </button>\r\n        <button id=\"anyRoot\" value=\" yroot \" onClick={this.props.operator}>\r\n          root\r\n        </button>\r\n        <button id=\"pi\" value={Math.PI} onClick={this.props.specialDigit}>\r\n          Pi\r\n        </button>\r\n        <button id=\"e\" value={Math.E} onClick={this.props.specialDigit}>\r\n          e\r\n        </button>\r\n        <button id=\"random\" value={Math.random()} onClick={this.props.specialDigit}>\r\n          rand\r\n        </button>\r\n        <button id=\"delete\" onClick={this.props.previousState}>\r\n          del\r\n        </button>\r\n        <button id=\"log10\" onClick={this.props.log10}>\r\n          log10\r\n        </button>\r\n        <button id=\"log\" value=\" log base \" onClick={this.props.log}>\r\n          log\r\n        </button>\r\n        <button id=\"logE\" onClick={this.props.logE}>\r\n          logE\r\n        </button>\r\n        <button id=\"factorial\" onClick={this.props.factorial}>\r\n          !\r\n        </button>\r\n        <button id=\"sin\" value=\"sin\" onClick={this.props.trigonometry}>\r\n          sin\r\n        </button>\r\n        <button id=\"cos\" value=\"cos\" onClick={this.props.trigonometry}>\r\n          cos\r\n        </button>\r\n        <button id=\"tan\" value=\"tan\" onClick={this.props.trigonometry}>\r\n          tan\r\n        </button>\r\n        <button id=\"cot\" value=\"cot\" onClick={this.props.trigonometry}>\r\n          cot\r\n        </button>\r\n        <button id=\"sec\" value=\"sec\" onClick={this.props.trigonometry}>\r\n          sec\r\n        </button>\r\n        <button id=\"csc\" value=\"csc\" onClick={this.props.trigonometry}>\r\n          csc\r\n        </button>\r\n        <button id=\"percentage\" onClick={this.props.percentage}>\r\n          %\r\n        </button>\r\n        <button id=\"copy\" onClick={this.props.copyToClipboard}>\r\n          Copy\r\n        </button>\r\n        <button id=\"sign\" onClick={this.props.changeSign}>\r\n          +/-\r\n        </button>\r\n        <button id=\"abs\" onClick={this.props.abs}>\r\n          abs\r\n        </button>\r\n        <button id=\"denominator\" onClick={this.props.switchToDenominator}>\r\n          1/x\r\n        </button>\r\n        <button id=\"modulo\" value=\" mod \" onClick={this.props.modulo}>\r\n          mod\r\n        </button>\r\n        <button id=\"leftParenthesis\" value=\"(\" onClick={this.props.leftParenthesis}>\r\n          (\r\n        </button>\r\n        <button id=\"rightParenthesis\" value=\")\" onClick={this.props.rightParenthesis}>\r\n          )\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <div id=\"footer\">This project was build using: HTML, CSS, JavaScript, React, Redux, jQuery, Bootstrap and SASS without using eval() function</div>\r\n    </footer>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}